(() => {
  var __create = Object.create;
  var __defProp = Object.defineProperty;
  var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
  var __getOwnPropNames = Object.getOwnPropertyNames;
  var __getProtoOf = Object.getPrototypeOf;
  var __hasOwnProp = Object.prototype.hasOwnProperty;
  var __require = /* @__PURE__ */ ((x2) => typeof require !== "undefined" ? require : typeof Proxy !== "undefined" ? new Proxy(x2, {
    get: (a4, b3) => (typeof require !== "undefined" ? require : a4)[b3]
  }) : x2)(function(x2) {
    if (typeof require !== "undefined")
      return require.apply(this, arguments);
    throw Error('Dynamic require of "' + x2 + '" is not supported');
  });
  var __commonJS = (cb, mod) => function __require2() {
    return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
  };
  var __copyProps = (to, from, except, desc) => {
    if (from && typeof from === "object" || typeof from === "function") {
      for (let key of __getOwnPropNames(from))
        if (!__hasOwnProp.call(to, key) && key !== except)
          __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
    }
    return to;
  };
  var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
    // If the importer is in node compatibility mode or this is not an ESM
    // file that has been converted to a CommonJS file using a Babel-
    // compatible transform (i.e. "__esModule" has not been set), then set
    // "default" to the CommonJS "module.exports" for node compatibility.
    isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
    mod
  ));

  // ../node_modules/dlv/dist/dlv.umd.js
  var require_dlv_umd = __commonJS({
    "../node_modules/dlv/dist/dlv.umd.js"(exports, module) {
      !function(t3, n3) {
        "object" == typeof exports && "undefined" != typeof module ? module.exports = function(t4, n4, e4, i4, o4) {
          for (n4 = n4.split ? n4.split(".") : n4, i4 = 0; i4 < n4.length; i4++)
            t4 = t4 ? t4[n4[i4]] : o4;
          return t4 === o4 ? e4 : t4;
        } : "function" == typeof define && define.amd ? define(function() {
          return function(t4, n4, e4, i4, o4) {
            for (n4 = n4.split ? n4.split(".") : n4, i4 = 0; i4 < n4.length; i4++)
              t4 = t4 ? t4[n4[i4]] : o4;
            return t4 === o4 ? e4 : t4;
          };
        }) : t3.dlv = function(t4, n4, e4, i4, o4) {
          for (n4 = n4.split ? n4.split(".") : n4, i4 = 0; i4 < n4.length; i4++)
            t4 = t4 ? t4[n4[i4]] : o4;
          return t4 === o4 ? e4 : t4;
        };
      }(exports);
    }
  });

  // ../node_modules/preact/dist/preact.module.js
  var n;
  var l;
  var u;
  var t;
  var i;
  var o;
  var r;
  var f;
  var e;
  var c = {};
  var s = [];
  var a = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;
  var v = Array.isArray;
  function h(n3, l4) {
    for (var u3 in l4)
      n3[u3] = l4[u3];
    return n3;
  }
  function p(n3) {
    var l4 = n3.parentNode;
    l4 && l4.removeChild(n3);
  }
  function y(l4, u3, t3) {
    var i4, o4, r3, f3 = {};
    for (r3 in u3)
      "key" == r3 ? i4 = u3[r3] : "ref" == r3 ? o4 = u3[r3] : f3[r3] = u3[r3];
    if (arguments.length > 2 && (f3.children = arguments.length > 3 ? n.call(arguments, 2) : t3), "function" == typeof l4 && null != l4.defaultProps)
      for (r3 in l4.defaultProps)
        void 0 === f3[r3] && (f3[r3] = l4.defaultProps[r3]);
    return d(l4, f3, i4, o4, null);
  }
  function d(n3, t3, i4, o4, r3) {
    var f3 = { type: n3, props: t3, key: i4, ref: o4, __k: null, __: null, __b: 0, __e: null, __d: void 0, __c: null, __h: null, constructor: void 0, __v: null == r3 ? ++u : r3 };
    return null == r3 && null != l.vnode && l.vnode(f3), f3;
  }
  function k(n3) {
    return n3.children;
  }
  function b(n3, l4) {
    this.props = n3, this.context = l4;
  }
  function g(n3, l4) {
    if (null == l4)
      return n3.__ ? g(n3.__, n3.__.__k.indexOf(n3) + 1) : null;
    for (var u3; l4 < n3.__k.length; l4++)
      if (null != (u3 = n3.__k[l4]) && null != u3.__e)
        return u3.__d || u3.__e;
    return "function" == typeof n3.type ? g(n3) : null;
  }
  function m(n3) {
    var l4, u3;
    if (null != (n3 = n3.__) && null != n3.__c) {
      for (n3.__e = n3.__c.base = null, l4 = 0; l4 < n3.__k.length; l4++)
        if (null != (u3 = n3.__k[l4]) && null != u3.__e) {
          n3.__e = n3.__c.base = u3.__e;
          break;
        }
      return m(n3);
    }
  }
  function w(n3) {
    (!n3.__d && (n3.__d = true) && i.push(n3) && !x.__r++ || o !== l.debounceRendering) && ((o = l.debounceRendering) || r)(x);
  }
  function x() {
    var n3, l4, u3, t3, o4, r3, e4, c3, s3;
    for (i.sort(f); n3 = i.shift(); )
      n3.__d && (l4 = i.length, t3 = void 0, o4 = void 0, r3 = void 0, c3 = (e4 = (u3 = n3).__v).__e, (s3 = u3.__P) && (t3 = [], o4 = [], (r3 = h({}, e4)).__v = e4.__v + 1, z(s3, e4, r3, u3.__n, void 0 !== s3.ownerSVGElement, null != e4.__h ? [c3] : null, t3, null == c3 ? g(e4) : c3, e4.__h, o4), L(t3, e4, o4), e4.__e != c3 && m(e4)), i.length > l4 && i.sort(f));
    x.__r = 0;
  }
  function P(n3, l4, u3, t3, i4, o4, r3, f3, e4, a4, h3) {
    var p3, y2, _, b3, m3, w3, x2, P2, C2, D2 = 0, H2 = t3 && t3.__k || s, I2 = H2.length, T2 = I2, j3 = l4.length;
    for (u3.__k = [], p3 = 0; p3 < j3; p3++)
      null != (b3 = u3.__k[p3] = null == (b3 = l4[p3]) || "boolean" == typeof b3 || "function" == typeof b3 ? null : "string" == typeof b3 || "number" == typeof b3 || "bigint" == typeof b3 ? d(null, b3, null, null, b3) : v(b3) ? d(k, { children: b3 }, null, null, null) : b3.__b > 0 ? d(b3.type, b3.props, b3.key, b3.ref ? b3.ref : null, b3.__v) : b3) ? (b3.__ = u3, b3.__b = u3.__b + 1, -1 === (P2 = A(b3, H2, x2 = p3 + D2, T2)) ? _ = c : (_ = H2[P2] || c, H2[P2] = void 0, T2--), z(n3, b3, _, i4, o4, r3, f3, e4, a4, h3), m3 = b3.__e, (y2 = b3.ref) && _.ref != y2 && (_.ref && N(_.ref, null, b3), h3.push(y2, b3.__c || m3, b3)), null != m3 && (null == w3 && (w3 = m3), (C2 = _ === c || null === _.__v) ? -1 == P2 && D2-- : P2 !== x2 && (P2 === x2 + 1 ? D2++ : P2 > x2 ? T2 > j3 - x2 ? D2 += P2 - x2 : D2-- : D2 = P2 < x2 && P2 == x2 - 1 ? P2 - x2 : 0), x2 = p3 + D2, "function" != typeof b3.type || P2 === x2 && _.__k !== b3.__k ? "function" == typeof b3.type || P2 === x2 && !C2 ? void 0 !== b3.__d ? (e4 = b3.__d, b3.__d = void 0) : e4 = m3.nextSibling : e4 = S(n3, m3, e4) : e4 = $(b3, e4, n3), "function" == typeof u3.type && (u3.__d = e4))) : (_ = H2[p3]) && null == _.key && _.__e && (_.__e == e4 && (_.__ = t3, e4 = g(_)), O(_, _, false), H2[p3] = null);
    for (u3.__e = w3, p3 = I2; p3--; )
      null != H2[p3] && ("function" == typeof u3.type && null != H2[p3].__e && H2[p3].__e == u3.__d && (u3.__d = H2[p3].__e.nextSibling), O(H2[p3], H2[p3]));
  }
  function $(n3, l4, u3) {
    for (var t3, i4 = n3.__k, o4 = 0; i4 && o4 < i4.length; o4++)
      (t3 = i4[o4]) && (t3.__ = n3, l4 = "function" == typeof t3.type ? $(t3, l4, u3) : S(u3, t3.__e, l4));
    return l4;
  }
  function S(n3, l4, u3) {
    return null == u3 || u3.parentNode !== n3 ? n3.insertBefore(l4, null) : l4 == u3 && null != l4.parentNode || n3.insertBefore(l4, u3), l4.nextSibling;
  }
  function A(n3, l4, u3, t3) {
    var i4 = n3.key, o4 = n3.type, r3 = u3 - 1, f3 = u3 + 1, e4 = l4[u3];
    if (null === e4 || e4 && i4 == e4.key && o4 === e4.type)
      return u3;
    if (t3 > (null != e4 ? 1 : 0))
      for (; r3 >= 0 || f3 < l4.length; ) {
        if (r3 >= 0) {
          if ((e4 = l4[r3]) && i4 == e4.key && o4 === e4.type)
            return r3;
          r3--;
        }
        if (f3 < l4.length) {
          if ((e4 = l4[f3]) && i4 == e4.key && o4 === e4.type)
            return f3;
          f3++;
        }
      }
    return -1;
  }
  function D(n3, l4, u3, t3, i4) {
    var o4;
    for (o4 in u3)
      "children" === o4 || "key" === o4 || o4 in l4 || I(n3, o4, null, u3[o4], t3);
    for (o4 in l4)
      i4 && "function" != typeof l4[o4] || "children" === o4 || "key" === o4 || "value" === o4 || "checked" === o4 || u3[o4] === l4[o4] || I(n3, o4, l4[o4], u3[o4], t3);
  }
  function H(n3, l4, u3) {
    "-" === l4[0] ? n3.setProperty(l4, null == u3 ? "" : u3) : n3[l4] = null == u3 ? "" : "number" != typeof u3 || a.test(l4) ? u3 : u3 + "px";
  }
  function I(n3, l4, u3, t3, i4) {
    var o4;
    n:
      if ("style" === l4)
        if ("string" == typeof u3)
          n3.style.cssText = u3;
        else {
          if ("string" == typeof t3 && (n3.style.cssText = t3 = ""), t3)
            for (l4 in t3)
              u3 && l4 in u3 || H(n3.style, l4, "");
          if (u3)
            for (l4 in u3)
              t3 && u3[l4] === t3[l4] || H(n3.style, l4, u3[l4]);
        }
      else if ("o" === l4[0] && "n" === l4[1])
        o4 = l4 !== (l4 = l4.replace(/(PointerCapture)$|Capture$/, "$1")), l4 = l4.toLowerCase() in n3 ? l4.toLowerCase().slice(2) : l4.slice(2), n3.l || (n3.l = {}), n3.l[l4 + o4] = u3, u3 ? t3 ? u3.u = t3.u : (u3.u = Date.now(), n3.addEventListener(l4, o4 ? j : T, o4)) : n3.removeEventListener(l4, o4 ? j : T, o4);
      else if ("dangerouslySetInnerHTML" !== l4) {
        if (i4)
          l4 = l4.replace(/xlink(H|:h)/, "h").replace(/sName$/, "s");
        else if ("width" !== l4 && "height" !== l4 && "href" !== l4 && "list" !== l4 && "form" !== l4 && "tabIndex" !== l4 && "download" !== l4 && "rowSpan" !== l4 && "colSpan" !== l4 && "role" !== l4 && l4 in n3)
          try {
            n3[l4] = null == u3 ? "" : u3;
            break n;
          } catch (n4) {
          }
        "function" == typeof u3 || (null == u3 || false === u3 && "-" !== l4[4] ? n3.removeAttribute(l4) : n3.setAttribute(l4, u3));
      }
  }
  function T(n3) {
    var u3 = this.l[n3.type + false];
    if (n3.t) {
      if (n3.t <= u3.u)
        return;
    } else
      n3.t = Date.now();
    return u3(l.event ? l.event(n3) : n3);
  }
  function j(n3) {
    return this.l[n3.type + true](l.event ? l.event(n3) : n3);
  }
  function z(n3, u3, t3, i4, o4, r3, f3, e4, c3, s3) {
    var a4, p3, y2, d3, _, g3, m3, w3, x2, $2, C2, S2, A2, D2, H2, I2 = u3.type;
    if (void 0 !== u3.constructor)
      return null;
    null != t3.__h && (c3 = t3.__h, e4 = u3.__e = t3.__e, u3.__h = null, r3 = [e4]), (a4 = l.__b) && a4(u3);
    n:
      if ("function" == typeof I2)
        try {
          if (w3 = u3.props, x2 = (a4 = I2.contextType) && i4[a4.__c], $2 = a4 ? x2 ? x2.props.value : a4.__ : i4, t3.__c ? m3 = (p3 = u3.__c = t3.__c).__ = p3.__E : ("prototype" in I2 && I2.prototype.render ? u3.__c = p3 = new I2(w3, $2) : (u3.__c = p3 = new b(w3, $2), p3.constructor = I2, p3.render = q), x2 && x2.sub(p3), p3.props = w3, p3.state || (p3.state = {}), p3.context = $2, p3.__n = i4, y2 = p3.__d = true, p3.__h = [], p3._sb = []), null == p3.__s && (p3.__s = p3.state), null != I2.getDerivedStateFromProps && (p3.__s == p3.state && (p3.__s = h({}, p3.__s)), h(p3.__s, I2.getDerivedStateFromProps(w3, p3.__s))), d3 = p3.props, _ = p3.state, p3.__v = u3, y2)
            null == I2.getDerivedStateFromProps && null != p3.componentWillMount && p3.componentWillMount(), null != p3.componentDidMount && p3.__h.push(p3.componentDidMount);
          else {
            if (null == I2.getDerivedStateFromProps && w3 !== d3 && null != p3.componentWillReceiveProps && p3.componentWillReceiveProps(w3, $2), !p3.__e && (null != p3.shouldComponentUpdate && false === p3.shouldComponentUpdate(w3, p3.__s, $2) || u3.__v === t3.__v)) {
              for (u3.__v !== t3.__v && (p3.props = w3, p3.state = p3.__s, p3.__d = false), u3.__e = t3.__e, u3.__k = t3.__k, u3.__k.forEach(function(n4) {
                n4 && (n4.__ = u3);
              }), C2 = 0; C2 < p3._sb.length; C2++)
                p3.__h.push(p3._sb[C2]);
              p3._sb = [], p3.__h.length && f3.push(p3);
              break n;
            }
            null != p3.componentWillUpdate && p3.componentWillUpdate(w3, p3.__s, $2), null != p3.componentDidUpdate && p3.__h.push(function() {
              p3.componentDidUpdate(d3, _, g3);
            });
          }
          if (p3.context = $2, p3.props = w3, p3.__P = n3, p3.__e = false, S2 = l.__r, A2 = 0, "prototype" in I2 && I2.prototype.render) {
            for (p3.state = p3.__s, p3.__d = false, S2 && S2(u3), a4 = p3.render(p3.props, p3.state, p3.context), D2 = 0; D2 < p3._sb.length; D2++)
              p3.__h.push(p3._sb[D2]);
            p3._sb = [];
          } else
            do {
              p3.__d = false, S2 && S2(u3), a4 = p3.render(p3.props, p3.state, p3.context), p3.state = p3.__s;
            } while (p3.__d && ++A2 < 25);
          p3.state = p3.__s, null != p3.getChildContext && (i4 = h(h({}, i4), p3.getChildContext())), y2 || null == p3.getSnapshotBeforeUpdate || (g3 = p3.getSnapshotBeforeUpdate(d3, _)), P(n3, v(H2 = null != a4 && a4.type === k && null == a4.key ? a4.props.children : a4) ? H2 : [H2], u3, t3, i4, o4, r3, f3, e4, c3, s3), p3.base = u3.__e, u3.__h = null, p3.__h.length && f3.push(p3), m3 && (p3.__E = p3.__ = null);
        } catch (n4) {
          u3.__v = null, (c3 || null != r3) && (u3.__e = e4, u3.__h = !!c3, r3[r3.indexOf(e4)] = null), l.__e(n4, u3, t3);
        }
      else
        null == r3 && u3.__v === t3.__v ? (u3.__k = t3.__k, u3.__e = t3.__e) : u3.__e = M(t3.__e, u3, t3, i4, o4, r3, f3, c3, s3);
    (a4 = l.diffed) && a4(u3);
  }
  function L(n3, u3, t3) {
    for (var i4 = 0; i4 < t3.length; i4++)
      N(t3[i4], t3[++i4], t3[++i4]);
    l.__c && l.__c(u3, n3), n3.some(function(u4) {
      try {
        n3 = u4.__h, u4.__h = [], n3.some(function(n4) {
          n4.call(u4);
        });
      } catch (n4) {
        l.__e(n4, u4.__v);
      }
    });
  }
  function M(l4, u3, t3, i4, o4, r3, f3, e4, s3) {
    var a4, h3, y2, d3 = t3.props, _ = u3.props, k3 = u3.type, b3 = 0;
    if ("svg" === k3 && (o4 = true), null != r3) {
      for (; b3 < r3.length; b3++)
        if ((a4 = r3[b3]) && "setAttribute" in a4 == !!k3 && (k3 ? a4.localName === k3 : 3 === a4.nodeType)) {
          l4 = a4, r3[b3] = null;
          break;
        }
    }
    if (null == l4) {
      if (null === k3)
        return document.createTextNode(_);
      l4 = o4 ? document.createElementNS("http://www.w3.org/2000/svg", k3) : document.createElement(k3, _.is && _), r3 = null, e4 = false;
    }
    if (null === k3)
      d3 === _ || e4 && l4.data === _ || (l4.data = _);
    else {
      if (r3 = r3 && n.call(l4.childNodes), h3 = (d3 = t3.props || c).dangerouslySetInnerHTML, y2 = _.dangerouslySetInnerHTML, !e4) {
        if (null != r3)
          for (d3 = {}, b3 = 0; b3 < l4.attributes.length; b3++)
            d3[l4.attributes[b3].name] = l4.attributes[b3].value;
        (y2 || h3) && (y2 && (h3 && y2.__html == h3.__html || y2.__html === l4.innerHTML) || (l4.innerHTML = y2 && y2.__html || ""));
      }
      if (D(l4, _, d3, o4, e4), y2)
        u3.__k = [];
      else if (P(l4, v(b3 = u3.props.children) ? b3 : [b3], u3, t3, i4, o4 && "foreignObject" !== k3, r3, f3, r3 ? r3[0] : t3.__k && g(t3, 0), e4, s3), null != r3)
        for (b3 = r3.length; b3--; )
          null != r3[b3] && p(r3[b3]);
      e4 || ("value" in _ && void 0 !== (b3 = _.value) && (b3 !== l4.value || "progress" === k3 && !b3 || "option" === k3 && b3 !== d3.value) && I(l4, "value", b3, d3.value, false), "checked" in _ && void 0 !== (b3 = _.checked) && b3 !== l4.checked && I(l4, "checked", b3, d3.checked, false));
    }
    return l4;
  }
  function N(n3, u3, t3) {
    try {
      "function" == typeof n3 ? n3(u3) : n3.current = u3;
    } catch (n4) {
      l.__e(n4, t3);
    }
  }
  function O(n3, u3, t3) {
    var i4, o4;
    if (l.unmount && l.unmount(n3), (i4 = n3.ref) && (i4.current && i4.current !== n3.__e || N(i4, null, u3)), null != (i4 = n3.__c)) {
      if (i4.componentWillUnmount)
        try {
          i4.componentWillUnmount();
        } catch (n4) {
          l.__e(n4, u3);
        }
      i4.base = i4.__P = null, n3.__c = void 0;
    }
    if (i4 = n3.__k)
      for (o4 = 0; o4 < i4.length; o4++)
        i4[o4] && O(i4[o4], u3, t3 || "function" != typeof n3.type);
    t3 || null == n3.__e || p(n3.__e), n3.__ = n3.__e = n3.__d = void 0;
  }
  function q(n3, l4, u3) {
    return this.constructor(n3, u3);
  }
  function B(u3, t3, i4) {
    var o4, r3, f3, e4;
    l.__ && l.__(u3, t3), r3 = (o4 = "function" == typeof i4) ? null : i4 && i4.__k || t3.__k, f3 = [], e4 = [], z(t3, u3 = (!o4 && i4 || t3).__k = y(k, null, [u3]), r3 || c, c, void 0 !== t3.ownerSVGElement, !o4 && i4 ? [i4] : r3 ? null : t3.firstChild ? n.call(t3.childNodes) : null, f3, !o4 && i4 ? i4 : r3 ? r3.__e : t3.firstChild, o4, e4), L(f3, u3, e4);
  }
  function F(l4, u3, t3) {
    var i4, o4, r3, f3, e4 = h({}, l4.props);
    for (r3 in l4.type && l4.type.defaultProps && (f3 = l4.type.defaultProps), u3)
      "key" == r3 ? i4 = u3[r3] : "ref" == r3 ? o4 = u3[r3] : e4[r3] = void 0 === u3[r3] && void 0 !== f3 ? f3[r3] : u3[r3];
    return arguments.length > 2 && (e4.children = arguments.length > 3 ? n.call(arguments, 2) : t3), d(l4.type, e4, i4 || l4.key, o4 || l4.ref, null);
  }
  function G(n3, l4) {
    var u3 = { __c: l4 = "__cC" + e++, __: n3, Consumer: function(n4, l5) {
      return n4.children(l5);
    }, Provider: function(n4) {
      var u4, t3;
      return this.getChildContext || (u4 = [], (t3 = {})[l4] = this, this.getChildContext = function() {
        return t3;
      }, this.shouldComponentUpdate = function(n5) {
        this.props.value !== n5.value && u4.some(function(n6) {
          n6.__e = true, w(n6);
        });
      }, this.sub = function(n5) {
        u4.push(n5);
        var l5 = n5.componentWillUnmount;
        n5.componentWillUnmount = function() {
          u4.splice(u4.indexOf(n5), 1), l5 && l5.call(n5);
        };
      }), n4.children;
    } };
    return u3.Provider.__ = u3.Consumer.contextType = u3;
  }
  n = s.slice, l = { __e: function(n3, l4, u3, t3) {
    for (var i4, o4, r3; l4 = l4.__; )
      if ((i4 = l4.__c) && !i4.__)
        try {
          if ((o4 = i4.constructor) && null != o4.getDerivedStateFromError && (i4.setState(o4.getDerivedStateFromError(n3)), r3 = i4.__d), null != i4.componentDidCatch && (i4.componentDidCatch(n3, t3 || {}), r3 = i4.__d), r3)
            return i4.__E = i4;
        } catch (l5) {
          n3 = l5;
        }
    throw n3;
  } }, u = 0, t = function(n3) {
    return null != n3 && void 0 === n3.constructor;
  }, b.prototype.setState = function(n3, l4) {
    var u3;
    u3 = null != this.__s && this.__s !== this.state ? this.__s : this.__s = h({}, this.state), "function" == typeof n3 && (n3 = n3(h({}, u3), this.props)), n3 && h(u3, n3), null != n3 && this.__v && (l4 && this._sb.push(l4), w(this));
  }, b.prototype.forceUpdate = function(n3) {
    this.__v && (this.__e = true, n3 && this.__h.push(n3), w(this));
  }, b.prototype.render = k, i = [], r = "function" == typeof Promise ? Promise.prototype.then.bind(Promise.resolve()) : setTimeout, f = function(n3, l4) {
    return n3.__v.__b - l4.__v.__b;
  }, x.__r = 0, e = 0;

  // ../node_modules/preact/hooks/dist/hooks.module.js
  var t2;
  var r2;
  var u2;
  var i2;
  var o2 = 0;
  var f2 = [];
  var c2 = [];
  var e2 = l.__b;
  var a2 = l.__r;
  var v2 = l.diffed;
  var l2 = l.__c;
  var m2 = l.unmount;
  function d2(t3, u3) {
    l.__h && l.__h(r2, t3, o2 || u3), o2 = 0;
    var i4 = r2.__H || (r2.__H = { __: [], __h: [] });
    return t3 >= i4.__.length && i4.__.push({ __V: c2 }), i4.__[t3];
  }
  function h2(n3) {
    return o2 = 1, s2(B2, n3);
  }
  function s2(n3, u3, i4) {
    var o4 = d2(t2++, 2);
    if (o4.t = n3, !o4.__c && (o4.__ = [i4 ? i4(u3) : B2(void 0, u3), function(n4) {
      var t3 = o4.__N ? o4.__N[0] : o4.__[0], r3 = o4.t(t3, n4);
      t3 !== r3 && (o4.__N = [r3, o4.__[1]], o4.__c.setState({}));
    }], o4.__c = r2, !r2.u)) {
      var f3 = function(n4, t3, r3) {
        if (!o4.__c.__H)
          return true;
        var u4 = o4.__c.__H.__.filter(function(n5) {
          return n5.__c;
        });
        if (u4.every(function(n5) {
          return !n5.__N;
        }))
          return !c3 || c3.call(this, n4, t3, r3);
        var i5 = false;
        return u4.forEach(function(n5) {
          if (n5.__N) {
            var t4 = n5.__[0];
            n5.__ = n5.__N, n5.__N = void 0, t4 !== n5.__[0] && (i5 = true);
          }
        }), !(!i5 && o4.__c.props === n4) && (!c3 || c3.call(this, n4, t3, r3));
      };
      r2.u = true;
      var c3 = r2.shouldComponentUpdate, e4 = r2.componentWillUpdate;
      r2.componentWillUpdate = function(n4, t3, r3) {
        if (this.__e) {
          var u4 = c3;
          c3 = void 0, f3(n4, t3, r3), c3 = u4;
        }
        e4 && e4.call(this, n4, t3, r3);
      }, r2.shouldComponentUpdate = f3;
    }
    return o4.__N || o4.__;
  }
  function F2(n3, r3) {
    var u3 = d2(t2++, 7);
    return z2(u3.__H, r3) ? (u3.__V = n3(), u3.i = r3, u3.__h = n3, u3.__V) : u3.__;
  }
  function q2(n3) {
    var u3 = r2.context[n3.__c], i4 = d2(t2++, 9);
    return i4.c = n3, u3 ? (null == i4.__ && (i4.__ = true, u3.sub(r2)), u3.props.value) : n3.__;
  }
  function b2() {
    for (var t3; t3 = f2.shift(); )
      if (t3.__P && t3.__H)
        try {
          t3.__H.__h.forEach(k2), t3.__H.__h.forEach(w2), t3.__H.__h = [];
        } catch (r3) {
          t3.__H.__h = [], l.__e(r3, t3.__v);
        }
  }
  l.__b = function(n3) {
    r2 = null, e2 && e2(n3);
  }, l.__r = function(n3) {
    a2 && a2(n3), t2 = 0;
    var i4 = (r2 = n3.__c).__H;
    i4 && (u2 === r2 ? (i4.__h = [], r2.__h = [], i4.__.forEach(function(n4) {
      n4.__N && (n4.__ = n4.__N), n4.__V = c2, n4.__N = n4.i = void 0;
    })) : (i4.__h.forEach(k2), i4.__h.forEach(w2), i4.__h = [], t2 = 0)), u2 = r2;
  }, l.diffed = function(t3) {
    v2 && v2(t3);
    var o4 = t3.__c;
    o4 && o4.__H && (o4.__H.__h.length && (1 !== f2.push(o4) && i2 === l.requestAnimationFrame || ((i2 = l.requestAnimationFrame) || j2)(b2)), o4.__H.__.forEach(function(n3) {
      n3.i && (n3.__H = n3.i), n3.__V !== c2 && (n3.__ = n3.__V), n3.i = void 0, n3.__V = c2;
    })), u2 = r2 = null;
  }, l.__c = function(t3, r3) {
    r3.some(function(t4) {
      try {
        t4.__h.forEach(k2), t4.__h = t4.__h.filter(function(n3) {
          return !n3.__ || w2(n3);
        });
      } catch (u3) {
        r3.some(function(n3) {
          n3.__h && (n3.__h = []);
        }), r3 = [], l.__e(u3, t4.__v);
      }
    }), l2 && l2(t3, r3);
  }, l.unmount = function(t3) {
    m2 && m2(t3);
    var r3, u3 = t3.__c;
    u3 && u3.__H && (u3.__H.__.forEach(function(n3) {
      try {
        k2(n3);
      } catch (n4) {
        r3 = n4;
      }
    }), u3.__H = void 0, r3 && l.__e(r3, u3.__v));
  };
  var g2 = "function" == typeof requestAnimationFrame;
  function j2(n3) {
    var t3, r3 = function() {
      clearTimeout(u3), g2 && cancelAnimationFrame(t3), setTimeout(n3);
    }, u3 = setTimeout(r3, 100);
    g2 && (t3 = requestAnimationFrame(r3));
  }
  function k2(n3) {
    var t3 = r2, u3 = n3.__c;
    "function" == typeof u3 && (n3.__c = void 0, u3()), r2 = t3;
  }
  function w2(n3) {
    var t3 = r2;
    n3.__c = n3.__(), r2 = t3;
  }
  function z2(n3, t3) {
    return !n3 || n3.length !== t3.length || t3.some(function(t4, r3) {
      return t4 !== n3[r3];
    });
  }
  function B2(n3, t3) {
    return "function" == typeof t3 ? t3(n3) : t3;
  }

  // ../node_modules/preact-i18n/dist/preact-i18n.esm.js
  var import_dlv = __toESM(require_dlv_umd());

  // ../node_modules/preact-markup/dist/preact-markup.module.js
  var e3;
  var o3 = {};
  function n2(r3, t3, e4) {
    if (3 === r3.nodeType) {
      var o4 = "textContent" in r3 ? r3.textContent : r3.nodeValue || "";
      if (false !== n2.options.trim) {
        var a4 = 0 === t3 || t3 === e4.length - 1;
        if ((!(o4 = o4.match(/^[\s\n]+$/g) && "all" !== n2.options.trim ? " " : o4.replace(/(^[\s\n]+|[\s\n]+$)/g, "all" === n2.options.trim || a4 ? "" : " ")) || " " === o4) && e4.length > 1 && a4)
          return null;
      }
      return o4;
    }
    if (1 !== r3.nodeType)
      return null;
    var p3 = String(r3.nodeName).toLowerCase();
    if ("script" === p3 && !n2.options.allowScripts)
      return null;
    var l4, s3, u3 = n2.h(p3, function(r4) {
      var t4 = r4 && r4.length;
      if (!t4)
        return null;
      for (var e5 = {}, o5 = 0; o5 < t4; o5++) {
        var a5 = r4[o5], i4 = a5.name, p4 = a5.value;
        "on" === i4.substring(0, 2) && n2.options.allowEvents && (p4 = new Function(p4)), e5[i4] = p4;
      }
      return e5;
    }(r3.attributes), (s3 = (l4 = r3.childNodes) && Array.prototype.map.call(l4, n2).filter(i3)) && s3.length ? s3 : null);
    return n2.visitor && n2.visitor(u3), u3;
  }
  var a3;
  var i3 = function(r3) {
    return r3;
  };
  var p2 = {};
  function l3(r3) {
    var t3 = (r3.type || "").toLowerCase(), e4 = l3.map;
    e4 && e4.hasOwnProperty(t3) ? (r3.type = e4[t3], r3.props = Object.keys(r3.props || {}).reduce(function(t4, e5) {
      var o4;
      return t4[o4 = e5, o4.replace(/-(.)/g, function(r4, t5) {
        return t5.toUpperCase();
      })] = r3.props[e5], t4;
    }, {})) : r3.type = t3.replace(/[^a-z0-9-]/i, "");
  }
  var preact_markup_module_default = function(t3) {
    function i4() {
      t3.apply(this, arguments);
    }
    return t3 && (i4.__proto__ = t3), (i4.prototype = Object.create(t3 && t3.prototype)).constructor = i4, i4.setReviver = function(r3) {
      a3 = r3;
    }, i4.prototype.shouldComponentUpdate = function(r3) {
      var t4 = this.props;
      return r3.wrap !== t4.wrap || r3.type !== t4.type || r3.markup !== t4.markup;
    }, i4.prototype.setComponents = function(r3) {
      if (this.map = {}, r3) {
        for (var t4 in r3)
          if (r3.hasOwnProperty(t4)) {
            var e4 = t4.replace(/([A-Z]+)([A-Z][a-z0-9])|([a-z0-9]+)([A-Z])/g, "$1$3-$2$4").toLowerCase();
            this.map[e4] = r3[t4];
          }
      }
    }, i4.prototype.render = function(t4) {
      var i5 = t4.wrap;
      void 0 === i5 && (i5 = true);
      var s3, u3 = t4.type, c3 = t4.markup, m3 = t4.components, v3 = t4.reviver, f3 = t4.onError, d3 = t4["allow-scripts"], h3 = t4["allow-events"], y2 = t4.trim, w3 = function(r3, t5) {
        var e4 = {};
        for (var o4 in r3)
          Object.prototype.hasOwnProperty.call(r3, o4) && -1 === t5.indexOf(o4) && (e4[o4] = r3[o4]);
        return e4;
      }(t4, ["wrap", "type", "markup", "components", "reviver", "onError", "allow-scripts", "allow-events", "trim"]), C2 = v3 || this.reviver || this.constructor.prototype.reviver || a3 || y;
      this.setComponents(m3);
      var g3 = { allowScripts: d3, allowEvents: h3, trim: y2 };
      try {
        s3 = function(r3, t5, a4, i6, s4) {
          var u4 = function(r4, t6) {
            var o4, n3, a5, i7, p3 = "html" === t6 ? "text/html" : "application/xml";
            "html" === t6 ? (i7 = "body", a5 = "<!DOCTYPE html>\n<html><body>" + r4 + "</body></html>") : (i7 = "xml", a5 = '<?xml version="1.0" encoding="UTF-8"?>\n<xml>' + r4 + "</xml>");
            try {
              o4 = new DOMParser().parseFromString(a5, p3);
            } catch (r5) {
              n3 = r5;
            }
            if (o4 || "html" !== t6 || ((o4 = e3 || (e3 = function() {
              if (document.implementation && document.implementation.createHTMLDocument)
                return document.implementation.createHTMLDocument("");
              var r5 = document.createElement("iframe");
              return r5.style.cssText = "position:absolute; left:0; top:-999em; width:1px; height:1px; overflow:hidden;", r5.setAttribute("sandbox", "allow-forms"), document.body.appendChild(r5), r5.contentWindow.document;
            }())).open(), o4.write(a5), o4.close()), o4) {
              var l4 = o4.getElementsByTagName(i7)[0], s5 = l4.firstChild;
              return r4 && !s5 && (l4.error = "Document parse failed."), s5 && "parsererror" === String(s5.nodeName).toLowerCase() && (s5.removeChild(s5.firstChild), s5.removeChild(s5.lastChild), l4.error = s5.textContent || s5.nodeValue || n3 || "Unknown error", l4.removeChild(s5)), l4;
            }
          }(r3, t5);
          if (u4 && u4.error)
            throw new Error(u4.error);
          var c4 = u4 && u4.body || u4;
          l3.map = i6 || p2;
          var m4 = c4 && function(r4, t6, e4, a5) {
            return n2.visitor = t6, n2.h = e4, n2.options = a5 || o3, n2(r4);
          }(c4, l3, a4, s4);
          return l3.map = null, m4 && m4.props && m4.props.children || null;
        }(c3, u3, C2, this.map, g3);
      } catch (r3) {
        f3 ? f3({ error: r3 }) : "undefined" != typeof console && console.error && console.error("preact-markup: " + r3);
      }
      if (false === i5)
        return s3 || null;
      var x2 = w3.hasOwnProperty("className") ? "className" : "class", b3 = w3[x2];
      return b3 ? b3.splice ? b3.splice(0, 0, "markup") : "string" == typeof b3 ? w3[x2] += " markup" : "object" == typeof b3 && (b3.markup = true) : w3[x2] = "markup", C2("div", w3, s3 || null);
    }, i4;
  }(b);

  // ../node_modules/preact-i18n/dist/preact-i18n.esm.js
  var IntlContext = G({ intl: {} });
  function defined(obj) {
    return obj !== null && obj !== void 0;
  }
  function assign(obj, props) {
    for (var i4 in props) {
      obj[i4] = props[i4];
    }
    return obj;
  }
  function deepAssign(target, source) {
    var out = assign({}, target);
    for (var i4 in source) {
      if (source.hasOwnProperty(i4)) {
        if (target[i4] && source[i4] && typeof target[i4] === "object" && typeof source[i4] === "object") {
          out[i4] = deepAssign(target[i4], source[i4]);
        } else {
          out[i4] = target[i4] || source[i4];
        }
      }
    }
    return out;
  }
  function select(properties) {
    properties = properties || {};
    if (typeof properties === "string") {
      properties = properties.split(",");
    }
    if ("join" in properties) {
      var selected = {};
      for (var i4 = 0; i4 < properties.length; i4++) {
        var val = properties[i4].trim();
        if (val) {
          selected[val.split(".").pop()] = val;
        }
      }
      return selected;
    }
    return properties;
  }
  function objectWithoutProperties(obj, exclude) {
    var target = {};
    for (var k3 in obj)
      if (Object.prototype.hasOwnProperty.call(obj, k3) && exclude.indexOf(k3) === -1)
        target[k3] = obj[k3];
    return target;
  }
  var URL_FLAG = /[?&#]intl=show/;
  function IntlProvider(ref) {
    var scope = ref.scope;
    var mark = ref.mark;
    var definition = ref.definition;
    var rest = objectWithoutProperties(ref, ["scope", "mark", "definition"]);
    var props = rest;
    var ref$1 = q2(IntlContext);
    var parentIntl = ref$1.intl;
    var intl2 = assign({}, parentIntl || {});
    if (scope) {
      intl2.scope = scope;
    }
    if (definition) {
      intl2.dictionary = deepAssign(intl2.dictionary || {}, definition);
    }
    if (mark || typeof location !== "undefined" && String(location).match(URL_FLAG)) {
      intl2.mark = true;
    }
    return y(
      IntlContext.Provider,
      { value: { intl: intl2 } },
      props.children
    );
  }
  function intl(Child, options) {
    if (arguments.length < 2) {
      options = Child;
      return function(Child2) {
        return intl(Child2, options);
      };
    }
    function IntlProviderWrapper(props) {
      return y(
        IntlProvider,
        options || {},
        y(Child, props)
      );
    }
    IntlProviderWrapper.getWrappedComponent = Child && Child.getWrappedComponent || function() {
      return Child;
    };
    return IntlProviderWrapper;
  }
  var EMPTY = {};
  function template(template2, fields, scope, dictionary) {
    return template2 && template2.replace(/\{\{([\w.-]+)\}\}/g, replacer.bind(null, fields || EMPTY, scope, dictionary));
  }
  function replacer(currentFields, scope, dictionary, s3, field) {
    var parts = field.split("."), v3 = currentFields;
    for (var i4 = 0; i4 < parts.length; i4++) {
      v3 = v3[parts[i4]];
      if (v3 == null) {
        return "";
      }
      if (v3 && v3.type === Text) {
        return translate(v3.props.id, scope, dictionary, v3.props.fields, v3.props.plural, v3.props.fallback);
      }
    }
    if (typeof v3 === "string" && v3.match(/\{\{/)) {
      v3 = template(v3, currentFields);
    }
    return v3;
  }
  function translate(id, scope, dictionary, fields, plural, fallback) {
    if (scope) {
      id = scope + "." + id;
    }
    var value = dictionary && (0, import_dlv.default)(dictionary, id);
    if ((plural || plural === 0) && value && typeof value === "object") {
      if (value.splice) {
        value = value[plural] || value[0];
      } else if (plural === 0 && defined(value.none || value.zero)) {
        value = value.none || value.zero;
      } else if (plural === 1 && defined(value.one || value.singular)) {
        value = value.one || value.singular;
      } else {
        value = value.some || value.many || value.plural || value.other || value;
      }
    }
    return value && template(value, fields, scope, dictionary) || fallback || null;
  }
  function HighlightI18N(ref) {
    var value = ref.value;
    var id = ref.id;
    var ref$1 = q2(IntlContext);
    var intl2 = ref$1.intl;
    if (intl2 && intl2.mark) {
      var dictionaryKey = "dictionary" + (intl2 && intl2.scope ? "." + intl2.scope : "") + "." + id;
      return y(
        "mark",
        {
          style: {
            background: value ? (0, import_dlv.default)(intl2, dictionaryKey) ? "rgba(119,231,117,.5)" : "rgba(229,226,41,.5)" : "rgba(228,147,51,.5)"
          },
          title: id
        },
        value
      );
    }
    return value;
  }
  function Text(ref) {
    var id = ref.id;
    var fallback = ref.children;
    var plural = ref.plural;
    var fields = ref.fields;
    var ref$1 = q2(IntlContext);
    var intl2 = ref$1.intl;
    var value = translate(
      id,
      intl2 && intl2.scope,
      intl2 && intl2.dictionary,
      fields,
      plural,
      fallback
    );
    return y(HighlightI18N, { id, value });
  }
  function translateMapping(props, intl2, onlyTextNodes) {
    var out = {};
    intl2 = intl2 || {};
    props = select(props);
    for (var name in props) {
      if (props.hasOwnProperty(name) && props[name]) {
        var def = props[name];
        if (!onlyTextNodes && typeof def === "string") {
          out[name] = translate(def, intl2.scope, intl2.dictionary);
        } else if (def.type === Text) {
          def = assign({
            // use children as fallback content
            fallback: def.props.children
          }, def.props);
          out[name] = translate(def.id, intl2.scope, intl2.dictionary, def.fields, def.plural, def.fallback);
        }
      }
    }
    return out;
  }
  function Localizer(ref) {
    var children = ref.children;
    var ref$1 = q2(IntlContext);
    var intl2 = ref$1.intl;
    return children && children.length ? children.map(function(child) {
      return F(child, translateMapping(child.props, intl2, true));
    }) : children && F(children, translateMapping(children.props, intl2, true));
  }
  function objectWithoutProperties$1(obj, exclude) {
    var target = {};
    for (var k3 in obj)
      if (Object.prototype.hasOwnProperty.call(obj, k3) && exclude.indexOf(k3) === -1)
        target[k3] = obj[k3];
    return target;
  }
  function MarkupText(ref) {
    var id = ref.id;
    var fields = ref.fields;
    var plural = ref.plural;
    var children = ref.children;
    var rest = objectWithoutProperties$1(ref, ["id", "fields", "plural", "children"]);
    var props = rest;
    return y(
      Localizer,
      null,
      y(Html, Object.assign({}, { html: y(Text, { id, fields, plural, children }), id }, props))
    );
  }
  function Html(ref) {
    var html = ref.html;
    var id = ref.id;
    var rest = objectWithoutProperties$1(ref, ["html", "id"]);
    var props = rest;
    return y(HighlightI18N, {
      id,
      value: !html ? html : typeof html === "string" ? y(preact_markup_module_default, Object.assign({}, { type: "html", trim: false }, props, { markup: html })) : y("span", null, html)
    });
  }
  function withText(mapping) {
    return function withTextWrapper(Child) {
      function WithTextWrapper(props, context) {
        var ref = q2(IntlContext);
        var intl2 = ref.intl;
        var map = typeof mapping === "function" ? mapping(props, { intl: intl2 }) : mapping;
        var translations = translateMapping(map, intl2);
        return y(Child, assign(assign({}, props), translations));
      }
      WithTextWrapper.getWrappedComponent = Child && Child.getWrappedComponent || function() {
        return Child;
      };
      return WithTextWrapper;
    };
  }
  function useText(mapping) {
    var ref = q2(IntlContext);
    var intl2 = ref.intl;
    return translateMapping(
      typeof mapping === "function" ? mapping({ intl: intl2 }) : mapping,
      intl2
    );
  }
  intl.intl = intl;
  intl.IntlContext = IntlContext;
  intl.IntlProvider = IntlProvider;
  intl.Text = Text;
  intl.MarkupText = MarkupText;
  intl.Localizer = Localizer;
  intl.withText = withText;
  intl.useText = useText;
  intl.translate = translate;

  // ../../skilltool/data/course_data.json
  var course_data_default = { "10101": { corners: [{ length: 275, start: 400 }, { length: 259, start: 675 }], course: 1, courseSetStatus: [], distance: 1200, distanceType: 1, finishTimeMax: 71e4, finishTimeMin: 675e3, laneMax: 13500, raceTrackId: 10001, slopes: [], straights: [{ end: 400, frontType: 2, start: 0 }, { end: 1200, frontType: 1, start: 934 }], surface: 1, turn: 1 }, "10102": { corners: [{ length: 275, start: 150 }, { length: 275, start: 700 }, { length: 259, start: 975 }], course: 1, courseSetStatus: [], distance: 1500, distanceType: 2, finishTimeMax: 95e4, finishTimeMin: 879e3, laneMax: 13500, raceTrackId: 10001, slopes: [], straights: [{ end: 700, frontType: 2, start: 425 }, { end: 1500, frontType: 1, start: 1234 }], surface: 1, turn: 1 }, "10103": { corners: [{ length: 275, start: 175 }, { length: 275, start: 450 }, { length: 275, start: 1e3 }, { length: 259, start: 1275 }], course: 1, courseSetStatus: [], distance: 1800, distanceType: 2, finishTimeMax: 11e5, finishTimeMin: 1044e3, laneMax: 13500, raceTrackId: 10001, slopes: [], straights: [{ end: 175, frontType: 1, start: 0 }, { end: 1e3, frontType: 2, start: 725 }, { end: 1800, frontType: 1, start: 1534 }], surface: 1, turn: 1 }, "10104": { corners: [{ length: 275, start: 375 }, { length: 275, start: 650 }, { length: 275, start: 1200 }, { length: 259, start: 1475 }], course: 1, courseSetStatus: [3], distance: 2e3, distanceType: 3, finishTimeMax: 123e4, finishTimeMin: 1171e3, laneMax: 13500, raceTrackId: 10001, slopes: [], straights: [{ end: 375, frontType: 1, start: 0 }, { end: 1200, frontType: 2, start: 925 }, { end: 2e3, frontType: 1, start: 1734 }], surface: 1, turn: 1 }, "10105": { corners: [{ length: 275, start: 175 }, { length: 275, start: 450 }, { length: 275, start: 975 }, { length: 275, start: 1250 }, { length: 275, start: 1800 }, { length: 259, start: 2075 }], course: 1, courseSetStatus: [2], distance: 2600, distanceType: 4, finishTimeMax: 165e4, finishTimeMin: 1576e3, laneMax: 13500, raceTrackId: 10001, slopes: [], straights: [{ end: 175, frontType: 2, start: 0 }, { end: 975, frontType: 1, start: 725 }, { end: 1800, frontType: 2, start: 1525 }, { end: 2600, frontType: 1, start: 2334 }], surface: 1, turn: 1 }, "10106": { corners: [{ length: 230, start: 280 }, { length: 226, start: 510 }], course: 1, courseSetStatus: [], distance: 1e3, distanceType: 1, finishTimeMax: 63e4, finishTimeMin: 574e3, laneMax: 11e3, raceTrackId: 10001, slopes: [], straights: [{ end: 280, frontType: 2, start: 0 }, { end: 1e3, frontType: 1, start: 736 }], surface: 2, turn: 1 }, "10107": { corners: [{ length: 230, start: 240 }, { length: 230, start: 470 }, { length: 230, start: 980 }, { length: 226, start: 1210 }], course: 1, courseSetStatus: [1], distance: 1700, distanceType: 2, finishTimeMax: 113e4, finishTimeMin: 1014e3, laneMax: 11e3, raceTrackId: 10001, slopes: [], straights: [{ end: 240, frontType: 1, start: 0 }, { end: 980, frontType: 2, start: 700 }, { end: 1700, frontType: 1, start: 1436 }], surface: 2, turn: 1 }, "10108": { corners: [{ length: 230, start: 200 }, { length: 230, start: 430 }, { length: 230, start: 940 }, { length: 230, start: 1170 }, { length: 230, start: 1680 }, { length: 226, start: 1910 }], course: 1, courseSetStatus: [], distance: 2400, distanceType: 3, finishTimeMax: 156e4, finishTimeMin: 1491e3, laneMax: 11e3, raceTrackId: 10001, slopes: [], straights: [{ end: 200, frontType: 2, start: 0 }, { end: 940, frontType: 1, start: 660 }, { end: 1680, frontType: 2, start: 1408 }, { end: 2400, frontType: 1, start: 2136 }], surface: 2, turn: 1 }, "10201": { corners: [{ length: 220, start: 310 }, { length: 208, start: 530 }], course: 1, courseSetStatus: [], distance: 1e3, distanceType: 1, finishTimeMax: 57e4, finishTimeMin: 547e3, laneMax: 14700, raceTrackId: 10002, slopes: [{ length: 555, slope: 1e4, start: 0 }], straights: [{ end: 310, frontType: 2, start: 0 }, { end: 1e3, frontType: 1, start: 738 }], surface: 1, turn: 1 }, "10202": { corners: [{ length: 220, start: 510 }, { length: 208, start: 730 }], course: 1, courseSetStatus: [], distance: 1200, distanceType: 1, finishTimeMax: 71e4, finishTimeMin: 675e3, laneMax: 14700, raceTrackId: 10002, slopes: [{ length: 755, slope: 1e4, start: 0 }], straights: [{ end: 510, frontType: 2, start: 0 }, { end: 1200, frontType: 1, start: 938 }], surface: 1, turn: 1 }, "10203": { corners: [{ length: 220, start: 320 }, { length: 220, start: 540 }, { length: 220, start: 1110 }, { length: 208, start: 1330 }], course: 1, courseSetStatus: [3], distance: 1800, distanceType: 2, finishTimeMax: 11e5, finishTimeMin: 1044e3, laneMax: 14700, raceTrackId: 10002, slopes: [{ length: 200, slope: -1e4, start: 220 }, { length: 720, slope: 1e4, start: 665 }], straights: [{ end: 320, frontType: 1, start: 0 }, { end: 1110, frontType: 2, start: 760 }, { end: 1800, frontType: 1, start: 1538 }], surface: 1, turn: 1 }, "10204": { corners: [{ length: 220, start: 520 }, { length: 220, start: 740 }, { length: 220, start: 1310 }, { length: 208, start: 1530 }], course: 1, courseSetStatus: [1], distance: 2e3, distanceType: 3, finishTimeMax: 123e4, finishTimeMin: 1171e3, laneMax: 14700, raceTrackId: 10002, slopes: [{ length: 200, slope: -1e4, start: 420 }, { length: 720, slope: 1e4, start: 865 }], straights: [{ end: 520, frontType: 1, start: 0 }, { end: 1310, frontType: 2, start: 960 }, { end: 2e3, frontType: 1, start: 1738 }], surface: 1, turn: 1 }, "10205": { corners: [{ length: 240, start: 260 }, { length: 230, start: 500 }, { length: 220, start: 1120 }, { length: 220, start: 1340 }, { length: 220, start: 1910 }, { length: 208, start: 2130 }], course: 1, courseSetStatus: [2], distance: 2600, distanceType: 4, finishTimeMax: 165e4, finishTimeMin: 1576e3, laneMax: 14700, raceTrackId: 10002, slopes: [{ length: 495, slope: 1e4, start: 0 }, { length: 200, slope: -1e4, start: 970 }, { length: 720, slope: 1e4, start: 1425 }], straights: [{ end: 260, frontType: 2, start: 0 }, { end: 1120, frontType: 1, start: 730 }, { end: 1910, frontType: 2, start: 1560 }, { end: 2600, frontType: 1, start: 2338 }], surface: 1, turn: 1 }, "10206": { corners: [{ length: 190, start: 370 }, { length: 180, start: 560 }], course: 1, courseSetStatus: [], distance: 1e3, distanceType: 1, finishTimeMax: 63e4, finishTimeMin: 574e3, laneMax: 11e3, raceTrackId: 10002, slopes: [], straights: [{ end: 370, frontType: 2, start: 0 }, { end: 1e3, frontType: 1, start: 740 }], surface: 2, turn: 1 }, "10207": { corners: [{ length: 190, start: 350 }, { length: 190, start: 540 }, { length: 190, start: 1070 }, { length: 180, start: 1260 }], course: 1, courseSetStatus: [], distance: 1700, distanceType: 2, finishTimeMax: 113e4, finishTimeMin: 1014e3, laneMax: 11e3, raceTrackId: 10002, slopes: [{ length: 340, slope: -1e4, start: 275 }, { length: 670, slope: 1e4, start: 615 }], straights: [{ end: 350, frontType: 1, start: 0 }, { end: 1070, frontType: 2, start: 730 }, { end: 1700, frontType: 1, start: 1440 }], surface: 2, turn: 1 }, "10208": { corners: [{ length: 190, start: 292 }, { length: 190, start: 482 }, { length: 190, start: 1040 }, { length: 190, start: 1230 }, { length: 190, start: 1770 }, { length: 180, start: 1960 }], course: 1, courseSetStatus: [2], distance: 2400, distanceType: 3, finishTimeMax: 156e4, finishTimeMin: 1491e3, laneMax: 11e3, raceTrackId: 10002, slopes: [], straights: [{ end: 292, frontType: 2, start: 0 }, { end: 1040, frontType: 1, start: 672 }, { end: 1770, frontType: 2, start: 1420 }, { end: 2400, frontType: 1, start: 2140 }], surface: 2, turn: 1 }, "10301": { corners: [], course: 1, courseSetStatus: [3], distance: 1e3, distanceType: 1, finishTimeMax: 57e4, finishTimeMin: 547e3, laneMax: 13500, raceTrackId: 10003, slopes: [], straights: [{ end: 1e3, frontType: 1, start: 0 }], surface: 1, turn: 4 }, "10302": { corners: [{ length: 200, start: 450 }, { length: 192, start: 650 }], course: 2, courseSetStatus: [], distance: 1200, distanceType: 1, finishTimeMax: 71e4, finishTimeMin: 675e3, laneMax: 13500, raceTrackId: 10003, slopes: [], straights: [{ end: 450, frontType: 2, start: 0 }, { end: 1200, frontType: 1, start: 842 }], surface: 1, turn: 2 }, "10303": { corners: [{ length: 200, start: 650 }, { length: 192, start: 850 }], course: 2, courseSetStatus: [], distance: 1400, distanceType: 2, finishTimeMax: 84e4, finishTimeMin: 8e5, laneMax: 13500, raceTrackId: 10003, slopes: [], straights: [{ end: 650, frontType: 2, start: 0 }, { end: 1400, frontType: 1, start: 1042 }], surface: 1, turn: 2 }, "10304": { corners: [{ length: 200, start: 550 }, { length: 192, start: 750 }], course: 3, courseSetStatus: [], distance: 1600, distanceType: 2, finishTimeMax: 95e4, finishTimeMin: 908e3, laneMax: 13500, raceTrackId: 10003, slopes: [{ length: 350, slope: 1e4, start: 250 }, { length: 300, slope: -15e3, start: 600 }], straights: [{ end: 550, frontType: 2, start: 0 }, { end: 1600, frontType: 1, start: 942 }], surface: 1, turn: 2 }, "10305": { corners: [{ length: 200, start: 750 }, { length: 192, start: 950 }], course: 3, courseSetStatus: [3], distance: 1800, distanceType: 2, finishTimeMax: 11e5, finishTimeMin: 1044e3, laneMax: 13500, raceTrackId: 10003, slopes: [{ length: 350, slope: 1e4, start: 450 }, { length: 300, slope: -15e3, start: 800 }], straights: [{ end: 750, frontType: 2, start: 0 }, { end: 1800, frontType: 1, start: 1142 }], surface: 1, turn: 2 }, "10306": { corners: [{ length: 200, start: 420 }, { length: 200, start: 620 }, { length: 200, start: 1250 }, { length: 192, start: 1450 }], course: 2, courseSetStatus: [2, 3], distance: 2e3, distanceType: 3, finishTimeMax: 123e4, finishTimeMin: 1171e3, laneMax: 13500, raceTrackId: 10003, slopes: [], straights: [{ end: 420, frontType: 1, start: 0 }, { end: 1250, frontType: 2, start: 820 }, { end: 2e3, frontType: 1, start: 1642 }], surface: 1, turn: 2 }, "10307": { corners: [{ length: 200, start: 950 }, { length: 192, start: 1150 }], course: 3, courseSetStatus: [2, 3], distance: 2e3, distanceType: 3, finishTimeMax: 123e4, finishTimeMin: 1171e3, laneMax: 13500, raceTrackId: 10003, slopes: [{ length: 350, slope: 1e4, start: 650 }, { length: 300, slope: -15e3, start: 1e3 }], straights: [{ end: 950, frontType: 2, start: 0 }, { end: 2e3, frontType: 1, start: 1342 }], surface: 1, turn: 2 }, "10308": { corners: [{ length: 200, start: 650 }, { length: 200, start: 850 }, { length: 200, start: 1450 }, { length: 192, start: 1650 }], course: 2, courseSetStatus: [1], distance: 2200, distanceType: 3, finishTimeMax: 135e4, finishTimeMin: 1302e3, laneMax: 13500, raceTrackId: 10003, slopes: [], straights: [{ end: 650, frontType: 1, start: 0 }, { end: 1450, frontType: 2, start: 1050 }, { end: 2200, frontType: 1, start: 1842 }], surface: 1, turn: 2 }, "10309": { corners: [{ length: 200, start: 810 }, { length: 200, start: 1010 }, { length: 200, start: 1650 }, { length: 192, start: 1850 }], course: 2, courseSetStatus: [], distance: 2400, distanceType: 3, finishTimeMax: 149e4, finishTimeMin: 1416e3, laneMax: 13500, raceTrackId: 10003, slopes: [], straights: [{ end: 810, frontType: 1, start: 0 }, { end: 1650, frontType: 2, start: 1210 }, { end: 2400, frontType: 1, start: 2042 }], surface: 1, turn: 2 }, "10310": { corners: [{ length: 160, start: 540 }, { length: 147, start: 700 }], course: 1, courseSetStatus: [], distance: 1200, distanceType: 1, finishTimeMax: 77e4, finishTimeMin: 69e4, laneMax: 11e3, raceTrackId: 10003, slopes: [], straights: [{ end: 540, frontType: 2, start: 0 }, { end: 1200, frontType: 1, start: 847 }], surface: 2, turn: 2 }, "10311": { corners: [{ length: 160, start: 400 }, { length: 160, start: 560 }, { length: 160, start: 1140 }, { length: 147, start: 1300 }], course: 1, courseSetStatus: [5], distance: 1800, distanceType: 2, finishTimeMax: 118e4, finishTimeMin: 1081e3, laneMax: 11e3, raceTrackId: 10003, slopes: [], straights: [{ end: 400, frontType: 1, start: 0 }, { end: 1140, frontType: 2, start: 720 }, { end: 1800, frontType: 1, start: 1447 }], surface: 2, turn: 2 }, "10312": { corners: [{ length: 160, start: 380 }, { length: 160, start: 540 }, { length: 160, start: 1120 }, { length: 160, start: 1280 }, { length: 160, start: 1850 }, { length: 160, start: 2010 }], course: 1, courseSetStatus: [], distance: 2500, distanceType: 4, finishTimeMax: 164e4, finishTimeMin: 1591e3, laneMax: 11e3, raceTrackId: 10003, slopes: [], straights: [{ end: 380, frontType: 2, start: 0 }, { end: 1120, frontType: 1, start: 700 }, { end: 1850, frontType: 2, start: 1440 }, { end: 2500, frontType: 1, start: 2170 }], surface: 2, turn: 2 }, "10401": { corners: [{ length: 300, start: 420 }, { length: 188, start: 720 }], course: 1, courseSetStatus: [], distance: 1200, distanceType: 1, finishTimeMax: 71e4, finishTimeMin: 675e3, laneMax: 13e3, raceTrackId: 10004, slopes: [{ length: 100, slope: 15e3, start: 180 }], straights: [{ end: 420, frontType: 2, start: 0 }, { end: 1200, frontType: 1, start: 908 }], surface: 1, turn: 1 }, "10402": { corners: [{ length: 200, start: 330 }, { length: 200, start: 530 }, { length: 300, start: 1020 }, { length: 188, start: 1320 }], course: 1, courseSetStatus: [2], distance: 1800, distanceType: 2, finishTimeMax: 11e5, finishTimeMin: 1044e3, laneMax: 13e3, raceTrackId: 10004, slopes: [{ length: 100, slope: 15e3, start: 780 }], straights: [{ end: 330, frontType: 1, start: 0 }, { end: 1020, frontType: 2, start: 730 }, { end: 1800, frontType: 1, start: 1508 }], surface: 1, turn: 1 }, "10403": { corners: [{ length: 200, start: 530 }, { length: 200, start: 730 }, { length: 300, start: 1220 }, { length: 188, start: 1520 }], course: 1, courseSetStatus: [2], distance: 2e3, distanceType: 3, finishTimeMax: 123e4, finishTimeMin: 1171e3, laneMax: 13e3, raceTrackId: 10004, slopes: [{ length: 100, slope: 15e3, start: 980 }], straights: [{ end: 530, frontType: 1, start: 0 }, { end: 1220, frontType: 2, start: 930 }, { end: 2e3, frontType: 1, start: 1708 }], surface: 1, turn: 1 }, "10404": { corners: [{ length: 300, start: 220 }, { length: 200, start: 520 }, { length: 200, start: 1130 }, { length: 200, start: 1330 }, { length: 300, start: 1820 }, { length: 188, start: 2120 }], course: 1, courseSetStatus: [], distance: 2600, distanceType: 4, finishTimeMax: 165e4, finishTimeMin: 1576e3, laneMax: 13e3, raceTrackId: 10004, slopes: [{ length: 80, slope: 15e3, start: 0 }, { length: 100, slope: 15e3, start: 1580 }], straights: [{ end: 220, frontType: 2, start: 0 }, { end: 1130, frontType: 1, start: 720 }, { end: 1820, frontType: 2, start: 1530 }, { end: 2600, frontType: 1, start: 2308 }], surface: 1, turn: 1 }, "10405": { corners: [{ length: 210, start: 500 }, { length: 145, start: 710 }], course: 1, courseSetStatus: [], distance: 1150, distanceType: 1, finishTimeMax: 72e4, finishTimeMin: 666e3, laneMax: 11500, raceTrackId: 10004, slopes: [], straights: [{ end: 500, frontType: 2, start: 0 }, { end: 1150, frontType: 1, start: 855 }], surface: 2, turn: 1 }, "10406": { corners: [{ length: 170, start: 360 }, { length: 170, start: 530 }, { length: 210, start: 1050 }, { length: 145, start: 1260 }], course: 1, courseSetStatus: [3], distance: 1700, distanceType: 2, finishTimeMax: 113e4, finishTimeMin: 1014e3, laneMax: 11500, raceTrackId: 10004, slopes: [{ length: 320, slope: -1e4, start: 285 }], straights: [{ end: 360, frontType: 1, start: 0 }, { end: 1050, frontType: 2, start: 700 }, { end: 1700, frontType: 1, start: 1405 }], surface: 2, turn: 1 }, "10407": { corners: [{ length: 210, start: 310 }, { length: 160, start: 520 }, { length: 170, start: 1060 }, { length: 170, start: 1230 }, { length: 210, start: 1750 }, { length: 145, start: 1960 }], course: 1, courseSetStatus: [2], distance: 2400, distanceType: 3, finishTimeMax: 156e4, finishTimeMin: 1491e3, laneMax: 11500, raceTrackId: 10004, slopes: [], straights: [{ end: 310, frontType: 2, start: 0 }, { end: 1060, frontType: 1, start: 680 }, { end: 1750, frontType: 2, start: 1400 }, { end: 2400, frontType: 1, start: 2105 }], surface: 2, turn: 1 }, "10501": { corners: [{ length: 350, start: 300 }, { length: 240, start: 650 }], course: 3, courseSetStatus: [], distance: 1200, distanceType: 1, finishTimeMax: 71e4, finishTimeMin: 675e3, laneMax: 12e3, raceTrackId: 10005, slopes: [{ length: 200, slope: -15e3, start: 0 }, { length: 110, slope: 2e4, start: 1025 }], straights: [{ end: 1200, frontType: 1, start: 890 }], surface: 1, turn: 1 }, "10502": { corners: [{ length: 450, start: 50 }, { length: 350, start: 700 }, { length: 240, start: 1050 }], course: 3, courseSetStatus: [3], distance: 1600, distanceType: 2, finishTimeMax: 95e4, finishTimeMin: 908e3, laneMax: 12e3, raceTrackId: 10005, slopes: [{ length: 300, slope: -15e3, start: 300 }, { length: 110, slope: 2e4, start: 1425 }], straights: [{ end: 1600, frontType: 1, start: 1290 }], surface: 1, turn: 1 }, "10503": { corners: [{ length: 250, start: 175 }, { length: 250, start: 425 }, { length: 250, start: 1e3 }, { length: 240, start: 1250 }], course: 2, courseSetStatus: [], distance: 1800, distanceType: 2, finishTimeMax: 11e5, finishTimeMin: 1044e3, laneMax: 12e3, raceTrackId: 10005, slopes: [{ length: 35, slope: 2e4, start: 1 }, { length: 200, slope: 15e3, start: 125 }, { length: 400, slope: -15e3, start: 425 }, { length: 110, slope: 2e4, start: 1625 }], straights: [{ end: 175, frontType: 1, start: 0 }, { end: 1e3, frontType: 2, start: 675 }, { end: 1800, frontType: 1, start: 1490 }], surface: 1, turn: 1 }, "10504": { corners: [{ length: 250, start: 375 }, { length: 250, start: 625 }, { length: 250, start: 1200 }, { length: 240, start: 1450 }], course: 2, courseSetStatus: [1], distance: 2e3, distanceType: 3, finishTimeMax: 123e4, finishTimeMin: 1171e3, laneMax: 12e3, raceTrackId: 10005, slopes: [{ length: 110, slope: 2e4, start: 125 }, { length: 200, slope: 15e3, start: 325 }, { length: 400, slope: -15e3, start: 625 }, { length: 110, slope: 2e4, start: 1825 }], straights: [{ end: 375, frontType: 1, start: 0 }, { end: 1200, frontType: 2, start: 875 }, { end: 2e3, frontType: 1, start: 1690 }], surface: 1, turn: 1 }, "10505": { corners: [{ length: 247, start: 403 }, { length: 450, start: 650 }, { length: 350, start: 1300 }, { length: 240, start: 1650 }], course: 3, courseSetStatus: [2, 4], distance: 2200, distanceType: 3, finishTimeMax: 135e4, finishTimeMin: 1302e3, laneMax: 12e3, raceTrackId: 10005, slopes: [{ length: 110, slope: 2e4, start: 153 }, { length: 200, slope: 15e3, start: 353 }, { length: 300, slope: -15e3, start: 900 }, { length: 110, slope: 2e4, start: 2025 }], straights: [{ end: 403, frontType: 1, start: 0 }, { end: 2200, frontType: 1, start: 1890 }], surface: 1, turn: 1 }, "10506": { corners: [{ length: 146, start: 100 }, { length: 250, start: 246 }, { length: 250, start: 875 }, { length: 250, start: 1125 }, { length: 250, start: 1700 }, { length: 240, start: 1950 }], course: 2, courseSetStatus: [2, 4], distance: 2500, distanceType: 4, finishTimeMax: 157e4, finishTimeMin: 1487e3, laneMax: 12e3, raceTrackId: 10005, slopes: [{ length: 110, slope: 2e4, start: 621 }, { length: 200, slope: 15e3, start: 825 }, { length: 400, slope: -15e3, start: 1125 }, { length: 110, slope: 2e4, start: 2325 }], straights: [{ end: 875, frontType: 1, start: 496 }, { end: 1700, frontType: 2, start: 1375 }, { end: 2500, frontType: 1, start: 2190 }], surface: 1, turn: 1 }, "10507": { corners: [{ length: 250, start: 290 }, { length: 250, start: 540 }, { length: 250, start: 1115 }, { length: 250, start: 1365 }, { length: 250, start: 1975 }, { length: 250, start: 2225 }, { length: 250, start: 2800 }, { length: 240, start: 3050 }], course: 2, courseSetStatus: [2], distance: 3600, distanceType: 4, finishTimeMax: 227e4, finishTimeMin: 2231e3, laneMax: 12e3, raceTrackId: 10005, slopes: [{ length: 110, slope: 2e4, start: 40 }, { length: 200, slope: 15e3, start: 240 }, { length: 400, slope: -15e3, start: 540 }, { length: 110, slope: 2e4, start: 1740 }, { length: 200, slope: 15e3, start: 1925 }, { length: 400, slope: -15e3, start: 2225 }, { length: 110, slope: 2e4, start: 3425 }], straights: [{ end: 290, frontType: 1, start: 0 }, { end: 1115, frontType: 2, start: 790 }, { end: 1975, frontType: 1, start: 1615 }, { end: 2800, frontType: 2, start: 2475 }, { end: 3600, frontType: 1, start: 3290 }], surface: 1, turn: 1 }, "10508": { corners: [{ length: 200, start: 500 }, { length: 192, start: 700 }], course: 1, courseSetStatus: [3], distance: 1200, distanceType: 1, finishTimeMax: 77e4, finishTimeMin: 69e4, laneMax: 12e3, raceTrackId: 10005, slopes: [{ length: 175, slope: -15e3, start: 175 }, { length: 175, slope: 15e3, start: 1e3 }], straights: [{ end: 500, frontType: 2, start: 0 }, { end: 1200, frontType: 1, start: 892 }], surface: 2, turn: 1 }, "10509": { corners: [{ length: 200, start: 350 }, { length: 200, start: 550 }, { length: 200, start: 1100 }, { length: 192, start: 1300 }], course: 1, courseSetStatus: [3], distance: 1800, distanceType: 2, finishTimeMax: 118e4, finishTimeMin: 1081e3, laneMax: 12e3, raceTrackId: 10005, slopes: [{ length: 175, slope: 15e3, start: 100 }, { length: 175, slope: 1e4, start: 350 }, { length: 175, slope: -15e3, start: 775 }, { length: 175, slope: 15e3, start: 1600 }], straights: [{ end: 350, frontType: 1, start: 0 }, { end: 1100, frontType: 1, start: 750 }, { end: 1800, frontType: 1, start: 1492 }], surface: 2, turn: 1 }, "10510": { corners: [{ length: 200, start: 200 }, { length: 200, start: 400 }, { length: 200, start: 950 }, { length: 200, start: 1150 }, { length: 200, start: 1700 }, { length: 192, start: 1900 }], course: 1, courseSetStatus: [2], distance: 2400, distanceType: 3, finishTimeMax: 156e4, finishTimeMin: 1491e3, laneMax: 12e3, raceTrackId: 10005, slopes: [], straights: [{ end: 200, frontType: 2, start: 0 }, { end: 950, frontType: 1, start: 600 }, { end: 1700, frontType: 2, start: 1350 }, { end: 2400, frontType: 1, start: 2092 }], surface: 2, turn: 1 }, "10511": { corners: [{ length: 200, start: 300 }, { length: 200, start: 500 }, { length: 200, start: 1050 }, { length: 200, start: 1250 }, { length: 200, start: 1800 }, { length: 192, start: 2e3 }], course: 1, courseSetStatus: [], distance: 2500, distanceType: 4, finishTimeMax: 164e4, finishTimeMin: 1591e3, laneMax: 12e3, raceTrackId: 10005, slopes: [], straights: [{ end: 300, frontType: 2, start: 0 }, { end: 1050, frontType: 1, start: 700 }, { end: 1800, frontType: 2, start: 1450 }, { end: 2500, frontType: 1, start: 2192 }], surface: 2, turn: 1 }, "10601": { corners: [{ length: 275, start: 350 }, { length: 250, start: 625 }], course: 1, courseSetStatus: [2, 3], distance: 1400, distanceType: 2, finishTimeMax: 84e4, finishTimeMin: 8e5, laneMax: 15e3, raceTrackId: 10006, slopes: [{ length: 75, slope: 2e4, start: 125 }, { length: 250, slope: -15e3, start: 250 }, { length: 150, slope: 15e3, start: 950 }], straights: [{ end: 350, frontType: 2, start: 0 }, { end: 1400, frontType: 1, start: 875 }], surface: 1, turn: 2 }, "10602": { corners: [{ length: 275, start: 550 }, { length: 250, start: 825 }], course: 1, courseSetStatus: [2, 4], distance: 1600, distanceType: 2, finishTimeMax: 95e4, finishTimeMin: 908e3, laneMax: 15e3, raceTrackId: 10006, slopes: [{ length: 75, slope: 2e4, start: 325 }, { length: 250, slope: -15e3, start: 450 }, { length: 150, slope: 15e3, start: 1150 }], straights: [{ end: 550, frontType: 2, start: 0 }, { end: 1600, frontType: 1, start: 1075 }], surface: 1, turn: 2 }, "10603": { corners: [{ length: 250, start: 75 }, { length: 275, start: 750 }, { length: 250, start: 1025 }], course: 1, courseSetStatus: [1], distance: 1800, distanceType: 2, finishTimeMax: 11e5, finishTimeMin: 1044e3, laneMax: 15e3, raceTrackId: 10006, slopes: [{ length: 75, slope: 2e4, start: 525 }, { length: 250, slope: -15e3, start: 650 }, { length: 150, slope: 15e3, start: 1350 }], straights: [{ end: 750, frontType: 2, start: 325 }, { end: 1800, frontType: 1, start: 1275 }], surface: 1, turn: 2 }, "10604": { corners: [{ length: 200, start: 200 }, { length: 275, start: 950 }, { length: 250, start: 1225 }], course: 1, courseSetStatus: [], distance: 2e3, distanceType: 3, finishTimeMax: 123e4, finishTimeMin: 1171e3, laneMax: 15e3, raceTrackId: 10006, slopes: [{ length: 75, slope: 2e4, start: 725 }, { length: 250, slope: -15e3, start: 850 }, { length: 150, slope: 15e3, start: 1550 }], straights: [{ end: 950, frontType: 2, start: 400 }, { end: 2e3, frontType: 1, start: 1475 }], surface: 1, turn: 2 }, "10605": { corners: [{ length: 250, start: 225 }, { length: 325, start: 475 }, { length: 275, start: 1250 }, { length: 250, start: 1525 }], course: 1, courseSetStatus: [3], distance: 2300, distanceType: 3, finishTimeMax: 143e4, finishTimeMin: 1393e3, laneMax: 15e3, raceTrackId: 10006, slopes: [{ length: 75, slope: 2e4, start: 1025 }, { length: 250, slope: -15e3, start: 1150 }, { length: 150, slope: 15e3, start: 1850 }], straights: [{ end: 225, frontType: 1, start: 0 }, { end: 1250, frontType: 2, start: 800 }, { end: 2300, frontType: 1, start: 1775 }], surface: 1, turn: 2 }, "10606": { corners: [{ length: 250, start: 325 }, { length: 325, start: 575 }, { length: 275, start: 1350 }, { length: 250, start: 1625 }], course: 1, courseSetStatus: [], distance: 2400, distanceType: 3, finishTimeMax: 149e4, finishTimeMin: 1416e3, laneMax: 15e3, raceTrackId: 10006, slopes: [{ length: 40, slope: 15e3, start: 0 }, { length: 75, slope: 2e4, start: 1125 }, { length: 250, slope: -15e3, start: 1250 }, { length: 150, slope: 15e3, start: 1950 }], straights: [{ end: 325, frontType: 1, start: 0 }, { end: 1350, frontType: 2, start: 900 }, { end: 2400, frontType: 1, start: 1875 }], surface: 1, turn: 2 }, "10607": { corners: [{ length: 250, start: 425 }, { length: 325, start: 675 }, { length: 275, start: 1450 }, { length: 250, start: 1725 }], course: 1, courseSetStatus: [2], distance: 2500, distanceType: 4, finishTimeMax: 157e4, finishTimeMin: 1487e3, laneMax: 15e3, raceTrackId: 10006, slopes: [{ length: 140, slope: 15e3, start: 0 }, { length: 75, slope: 2e4, start: 1225 }, { length: 250, slope: -15e3, start: 1350 }, { length: 150, slope: 15e3, start: 2050 }], straights: [{ end: 425, frontType: 1, start: 0 }, { end: 1450, frontType: 2, start: 1e3 }, { end: 2500, frontType: 1, start: 1975 }], surface: 1, turn: 2 }, "10608": { corners: [{ length: 275, start: 292 }, { length: 275, start: 567 }, { length: 250, start: 1325 }, { length: 325, start: 1575 }, { length: 275, start: 2350 }, { length: 250, start: 2625 }], course: 1, courseSetStatus: [], distance: 3400, distanceType: 4, finishTimeMax: 214e4, finishTimeMin: 2099e3, laneMax: 15e3, raceTrackId: 10006, slopes: [{ length: 75, slope: 2e4, start: 67 }, { length: 250, slope: -15e3, start: 192 }, { length: 150, slope: 15e3, start: 892 }, { length: 75, slope: 2e4, start: 2125 }, { length: 250, slope: -15e3, start: 2250 }, { length: 150, slope: 15e3, start: 2950 }], straights: [{ end: 292, frontType: 2, start: 0 }, { end: 1325, frontType: 1, start: 842 }, { end: 2350, frontType: 2, start: 1900 }, { end: 3400, frontType: 1, start: 2875 }], surface: 1, turn: 2 }, "10609": { corners: [{ length: 225, start: 350 }, { length: 224, start: 575 }], course: 1, courseSetStatus: [1], distance: 1300, distanceType: 2, finishTimeMax: 82e4, finishTimeMin: 766e3, laneMax: 12500, raceTrackId: 10006, slopes: [{ length: 200, slope: -1e4, start: 275 }, { length: 250, slope: 15e3, start: 800 }], straights: [{ end: 350, frontType: 2, start: 0 }, { end: 1300, frontType: 1, start: 799 }], surface: 2, turn: 2 }, "10610": { corners: [{ length: 225, start: 450 }, { length: 224, start: 675 }], course: 1, courseSetStatus: [2], distance: 1400, distanceType: 2, finishTimeMax: 94e4, finishTimeMin: 808e3, laneMax: 12500, raceTrackId: 10006, slopes: [{ length: 200, slope: -1e4, start: 375 }, { length: 250, slope: 15e3, start: 900 }], straights: [{ end: 450, frontType: 2, start: 0 }, { end: 1400, frontType: 1, start: 899 }], surface: 2, turn: 2 }, "10611": { corners: [{ length: 225, start: 650 }, { length: 224, start: 875 }], course: 1, courseSetStatus: [1, 2], distance: 1600, distanceType: 2, finishTimeMax: 108e4, finishTimeMin: 941e3, laneMax: 12500, raceTrackId: 10006, slopes: [{ length: 200, slope: -1e4, start: 575 }, { length: 250, slope: 15e3, start: 1100 }], straights: [{ end: 650, frontType: 2, start: 0 }, { end: 1600, frontType: 1, start: 1099 }], surface: 2, turn: 2 }, "10612": { corners: [{ length: 250, start: 200 }, { length: 250, start: 450 }, { length: 225, start: 1150 }, { length: 224, start: 1375 }], course: 1, courseSetStatus: [], distance: 2100, distanceType: 3, finishTimeMax: 133e4, finishTimeMin: 1274e3, laneMax: 12500, raceTrackId: 10006, slopes: [{ length: 200, slope: -1e4, start: 1075 }, { length: 250, slope: 15e3, start: 1600 }], straights: [{ end: 200, frontType: 1, start: 0 }, { end: 1150, frontType: 2, start: 700 }, { end: 2100, frontType: 1, start: 1599 }], surface: 2, turn: 2 }, "10613": { corners: [{ length: 250, start: 500 }, { length: 250, start: 750 }, { length: 225, start: 1450 }, { length: 225, start: 1675 }, { length: 500, start: 2348 }], course: 1, courseSetStatus: [2], distance: 2400, distanceType: 3, finishTimeMax: 156e4, finishTimeMin: 1491e3, laneMax: 12500, raceTrackId: 10006, slopes: [], straights: [{ end: 500, frontType: 1, start: 0 }, { end: 1450, frontType: 2, start: 1e3 }, { end: 2400, frontType: 1, start: 1900 }], surface: 2, turn: 2 }, "10701": { corners: [{ length: 250, start: 300 }, { length: 238, start: 550 }], course: 1, courseSetStatus: [], distance: 1200, distanceType: 1, finishTimeMax: 71e4, finishTimeMin: 675e3, laneMax: 14400, raceTrackId: 10007, slopes: [{ length: 775, slope: -1e4, start: 100 }, { length: 100, slope: 2e4, start: 875 }], straights: [{ end: 300, frontType: 2, start: 0 }, { end: 1200, frontType: 1, start: 788 }], surface: 1, turn: 2 }, "10702": { corners: [{ length: 250, start: 500 }, { length: 238, start: 750 }], course: 1, courseSetStatus: [], distance: 1400, distanceType: 2, finishTimeMax: 84e4, finishTimeMin: 8e5, laneMax: 14400, raceTrackId: 10007, slopes: [{ length: 775, slope: -1e4, start: 300 }, { length: 100, slope: 2e4, start: 1075 }], straights: [{ end: 500, frontType: 2, start: 0 }, { end: 1400, frontType: 1, start: 988 }], surface: 1, turn: 2 }, "10703": { corners: [{ length: 150, start: 150 }, { length: 250, start: 700 }, { length: 238, start: 950 }], course: 1, courseSetStatus: [1], distance: 1600, distanceType: 2, finishTimeMax: 95e4, finishTimeMin: 908e3, laneMax: 14400, raceTrackId: 10007, slopes: [{ length: 775, slope: -1e4, start: 500 }, { length: 100, slope: 2e4, start: 1275 }], straights: [{ end: 700, frontType: 2, start: 300 }, { end: 1600, frontType: 1, start: 1188 }], surface: 1, turn: 2 }, "10704": { corners: [{ length: 200, start: 300 }, { length: 200, start: 500 }, { length: 250, start: 1100 }, { length: 238, start: 1350 }], course: 1, courseSetStatus: [], distance: 2e3, distanceType: 3, finishTimeMax: 123e4, finishTimeMin: 1171e3, laneMax: 14400, raceTrackId: 10007, slopes: [{ length: 50, slope: 2e4, start: 0 }, { length: 775, slope: -1e4, start: 900 }, { length: 100, slope: 2e4, start: 1675 }], straights: [{ end: 300, frontType: 1, start: 0 }, { end: 1100, frontType: 2, start: 700 }, { end: 2e3, frontType: 1, start: 1588 }], surface: 1, turn: 2 }, "10705": { corners: [{ length: 200, start: 500 }, { length: 200, start: 700 }, { length: 250, start: 1300 }, { length: 238, start: 1550 }], course: 1, courseSetStatus: [2], distance: 2200, distanceType: 3, finishTimeMax: 135e4, finishTimeMin: 1302e3, laneMax: 14400, raceTrackId: 10007, slopes: [{ length: 150, slope: -1e4, start: 0 }, { length: 100, slope: 2e4, start: 150 }, { length: 775, slope: -1e4, start: 1100 }, { length: 100, slope: 2e4, start: 1875 }], straights: [{ end: 500, frontType: 1, start: 0 }, { end: 1300, frontType: 2, start: 900 }, { end: 2200, frontType: 1, start: 1788 }], surface: 1, turn: 2 }, "10706": { corners: [{ length: 200, start: 400 }, { length: 190, start: 600 }], course: 1, courseSetStatus: [], distance: 1200, distanceType: 1, finishTimeMax: 77e4, finishTimeMin: 69e4, laneMax: 13e3, raceTrackId: 10007, slopes: [], straights: [{ end: 400, frontType: 2, start: 0 }, { end: 1200, frontType: 1, start: 790 }], surface: 2, turn: 2 }, "10707": { corners: [{ length: 200, start: 600 }, { length: 190, start: 800 }], course: 1, courseSetStatus: [], distance: 1400, distanceType: 2, finishTimeMax: 94e4, finishTimeMin: 808e3, laneMax: 13e3, raceTrackId: 10007, slopes: [{ length: 600, slope: -15e3, start: 425 }, { length: 150, slope: 15e3, start: 1025 }], straights: [{ end: 600, frontType: 2, start: 0 }, { end: 1400, frontType: 1, start: 990 }], surface: 2, turn: 2 }, "10708": { corners: [{ length: 165, start: 270 }, { length: 165, start: 435 }, { length: 200, start: 1e3 }, { length: 190, start: 1200 }], course: 1, courseSetStatus: [2], distance: 1800, distanceType: 2, finishTimeMax: 118e4, finishTimeMin: 1081e3, laneMax: 13e3, raceTrackId: 10007, slopes: [{ length: 50, slope: 15e3, start: 0 }, { length: 600, slope: -15e3, start: 825 }, { length: 150, slope: 15e3, start: 1425 }], straights: [{ end: 270, frontType: 1, start: 0 }, { end: 1e3, frontType: 2, start: 600 }, { end: 1800, frontType: 1, start: 1390 }], surface: 2, turn: 2 }, "10709": { corners: [{ length: 165, start: 370 }, { length: 165, start: 535 }, { length: 200, start: 1100 }, { length: 190, start: 1300 }], course: 1, courseSetStatus: [], distance: 1900, distanceType: 3, finishTimeMax: 123e4, finishTimeMin: 1142e3, laneMax: 13e3, raceTrackId: 10007, slopes: [], straights: [{ end: 370, frontType: 1, start: 0 }, { end: 1100, frontType: 2, start: 700 }, { end: 1900, frontType: 1, start: 1490 }], surface: 2, turn: 2 }, "10801": { corners: [{ length: 275, start: 320 }, { length: 277, start: 595 }], course: 2, courseSetStatus: [], distance: 1200, distanceType: 1, finishTimeMax: 71e4, finishTimeMin: 675e3, laneMax: 14100, raceTrackId: 10008, slopes: [{ length: 175, slope: 15e3, start: 120 }, { length: 150, slope: -15e3, start: 420 }], straights: [{ end: 320, frontType: 2, start: 0 }, { end: 1200, frontType: 1, start: 872 }], surface: 1, turn: 1 }, "10802": { corners: [{ length: 275, start: 520 }, { length: 277, start: 795 }], course: 2, courseSetStatus: [], distance: 1400, distanceType: 2, finishTimeMax: 84e4, finishTimeMin: 8e5, laneMax: 14100, raceTrackId: 10008, slopes: [{ length: 175, slope: 15e3, start: 320 }, { length: 150, slope: -15e3, start: 620 }], straights: [{ end: 520, frontType: 2, start: 0 }, { end: 1400, frontType: 1, start: 1072 }], surface: 1, turn: 1 }, "10803": { corners: [{ length: 250, start: 500 }, { length: 247, start: 750 }], course: 3, courseSetStatus: [], distance: 1400, distanceType: 2, finishTimeMax: 84e4, finishTimeMin: 8e5, laneMax: 14100, raceTrackId: 10008, slopes: [{ length: 100, slope: 2e4, start: 250 }, { length: 225, slope: 1e4, start: 350 }, { length: 150, slope: -2e4, start: 575 }], straights: [{ end: 500, frontType: 2, start: 0 }, { end: 1400, frontType: 1, start: 997 }], surface: 1, turn: 1 }, "10804": { corners: [{ length: 275, start: 720 }, { length: 277, start: 995 }], course: 2, courseSetStatus: [1], distance: 1600, distanceType: 2, finishTimeMax: 95e4, finishTimeMin: 908e3, laneMax: 14100, raceTrackId: 10008, slopes: [{ length: 175, slope: 15e3, start: 520 }, { length: 150, slope: -15e3, start: 820 }], straights: [{ end: 720, frontType: 2, start: 200 }, { end: 1600, frontType: 1, start: 1272 }], surface: 1, turn: 1 }, "10805": { corners: [{ length: 250, start: 700 }, { length: 247, start: 950 }], course: 3, courseSetStatus: [1], distance: 1600, distanceType: 2, finishTimeMax: 95e4, finishTimeMin: 908e3, laneMax: 14100, raceTrackId: 10008, slopes: [{ length: 100, slope: 2e4, start: 450 }, { length: 225, slope: 1e4, start: 550 }, { length: 150, slope: -2e4, start: 775 }], straights: [{ end: 700, frontType: 2, start: 200 }, { end: 1600, frontType: 1, start: 1197 }], surface: 1, turn: 1 }, "10806": { corners: [{ length: 250, start: 900 }, { length: 247, start: 1150 }], course: 3, courseSetStatus: [], distance: 1800, distanceType: 2, finishTimeMax: 11e5, finishTimeMin: 1044e3, laneMax: 14100, raceTrackId: 10008, slopes: [{ length: 100, slope: 2e4, start: 650 }, { length: 225, slope: 1e4, start: 750 }, { length: 150, slope: -2e4, start: 975 }], straights: [{ end: 900, frontType: 2, start: 400 }, { end: 1800, frontType: 1, start: 1397 }], surface: 1, turn: 1 }, "10807": { corners: [{ length: 185, start: 400 }, { length: 185, start: 585 }, { length: 275, start: 1120 }, { length: 277, start: 1395 }], course: 2, courseSetStatus: [3], distance: 2e3, distanceType: 3, finishTimeMax: 123e4, finishTimeMin: 1171e3, laneMax: 14100, raceTrackId: 10008, slopes: [{ length: 175, slope: 15e3, start: 970 }, { length: 150, slope: -15e3, start: 1270 }], straights: [{ end: 400, frontType: 1, start: 0 }, { end: 1120, frontType: 2, start: 770 }, { end: 2e3, frontType: 1, start: 1672 }], surface: 1, turn: 1 }, "10808": { corners: [{ length: 200, start: 400 }, { length: 200, start: 600 }, { length: 250, start: 1300 }, { length: 247, start: 1550 }], course: 3, courseSetStatus: [1], distance: 2200, distanceType: 3, finishTimeMax: 135e4, finishTimeMin: 1302e3, laneMax: 14100, raceTrackId: 10008, slopes: [{ length: 100, slope: 2e4, start: 1050 }, { length: 225, slope: 1e4, start: 1150 }, { length: 150, slope: -2e4, start: 1375 }], straights: [{ end: 400, frontType: 1, start: 0 }, { end: 1300, frontType: 2, start: 800 }, { end: 2200, frontType: 1, start: 1797 }], surface: 1, turn: 1 }, "10809": { corners: [{ length: 200, start: 600 }, { length: 200, start: 800 }, { length: 250, start: 1500 }, { length: 247, start: 1750 }], course: 3, courseSetStatus: [3], distance: 2400, distanceType: 3, finishTimeMax: 149e4, finishTimeMin: 1416e3, laneMax: 14100, raceTrackId: 10008, slopes: [{ length: 100, slope: 2e4, start: 1250 }, { length: 225, slope: 1e4, start: 1350 }, { length: 150, slope: -2e4, start: 1575 }], straights: [{ end: 600, frontType: 1, start: 0 }, { end: 1500, frontType: 2, start: 1e3 }, { end: 2400, frontType: 1, start: 1997 }], surface: 1, turn: 1 }, "10810": { corners: [{ length: 250, start: 261 }, { length: 250, start: 511 }, { length: 200, start: 1250 }, { length: 200, start: 1450 }, { length: 250, start: 2100 }, { length: 247, start: 2350 }], course: 3, courseSetStatus: [3, 5], distance: 3e3, distanceType: 4, finishTimeMax: 19e5, finishTimeMin: 1815e3, laneMax: 14100, raceTrackId: 10008, slopes: [{ length: 100, slope: 2e4, start: 11 }, { length: 225, slope: 1e4, start: 111 }, { length: 150, slope: -2e4, start: 336 }, { length: 100, slope: 2e4, start: 1850 }, { length: 225, slope: 1e4, start: 1950 }, { length: 150, slope: -2e4, start: 2175 }], straights: [{ end: 261, frontType: 2, start: 0 }, { end: 1250, frontType: 1, start: 761 }, { end: 2100, frontType: 2, start: 1650 }, { end: 3e3, frontType: 1, start: 2597 }], surface: 1, turn: 1 }, "10811": { corners: [{ length: 250, start: 458 }, { length: 250, start: 708 }, { length: 200, start: 1450 }, { length: 200, start: 1650 }, { length: 250, start: 2300 }, { length: 247, start: 2550 }], course: 3, courseSetStatus: [], distance: 3200, distanceType: 4, finishTimeMax: 204e4, finishTimeMin: 193e4, laneMax: 14100, raceTrackId: 10008, slopes: [{ length: 100, slope: 2e4, start: 208 }, { length: 225, slope: 1e4, start: 308 }, { length: 150, slope: -2e4, start: 533 }, { length: 100, slope: 2e4, start: 2050 }, { length: 225, slope: 1e4, start: 2150 }, { length: 150, slope: -2e4, start: 2375 }], straights: [{ end: 458, frontType: 2, start: 0 }, { end: 1450, frontType: 1, start: 958 }, { end: 2300, frontType: 2, start: 1850 }, { end: 3200, frontType: 1, start: 2797 }], surface: 1, turn: 1 }, "10812": { corners: [{ length: 225, start: 400 }, { length: 246, start: 625 }], course: 1, courseSetStatus: [], distance: 1200, distanceType: 1, finishTimeMax: 77e4, finishTimeMin: 69e4, laneMax: 13e3, raceTrackId: 10008, slopes: [{ length: 200, slope: 15e3, start: 175 }, { length: 200, slope: -15e3, start: 475 }], straights: [{ end: 400, frontType: 2, start: 0 }, { end: 1200, frontType: 1, start: 871 }], surface: 2, turn: 1 }, "10813": { corners: [{ length: 225, start: 600 }, { length: 246, start: 825 }], course: 1, courseSetStatus: [], distance: 1400, distanceType: 2, finishTimeMax: 94e4, finishTimeMin: 808e3, laneMax: 13e3, raceTrackId: 10008, slopes: [{ length: 200, slope: 15e3, start: 375 }, { length: 200, slope: -15e3, start: 675 }], straights: [{ end: 600, frontType: 2, start: 100 }, { end: 1400, frontType: 1, start: 1071 }], surface: 2, turn: 1 }, "10814": { corners: [{ length: 150, start: 300 }, { length: 150, start: 450 }, { length: 225, start: 1e3 }, { length: 246, start: 1225 }], course: 1, courseSetStatus: [], distance: 1800, distanceType: 2, finishTimeMax: 118e4, finishTimeMin: 1081e3, laneMax: 13e3, raceTrackId: 10008, slopes: [{ length: 200, slope: 15e3, start: 775 }, { length: 200, slope: -15e3, start: 1075 }], straights: [{ end: 300, frontType: 1, start: 0 }, { end: 1e3, frontType: 2, start: 600 }, { end: 1800, frontType: 1, start: 1471 }], surface: 2, turn: 1 }, "10815": { corners: [{ length: 150, start: 400 }, { length: 150, start: 550 }, { length: 225, start: 1100 }, { length: 246, start: 1325 }], course: 1, courseSetStatus: [], distance: 1900, distanceType: 3, finishTimeMax: 123e4, finishTimeMin: 1142e3, laneMax: 13e3, raceTrackId: 10008, slopes: [{ length: 200, slope: 15e3, start: 875 }, { length: 200, slope: -15e3, start: 1175 }], straights: [{ end: 400, frontType: 1, start: 0 }, { end: 1100, frontType: 2, start: 700 }, { end: 1900, frontType: 1, start: 1571 }], surface: 2, turn: 1 }, "10901": { corners: [{ length: 300, start: 250 }, { length: 294, start: 550 }], course: 2, courseSetStatus: [], distance: 1200, distanceType: 1, finishTimeMax: 71e4, finishTimeMin: 675e3, laneMax: 12500, raceTrackId: 10009, slopes: [{ length: 595, slope: -1e4, start: 400 }, { length: 125, slope: 2e4, start: 1e3 }], straights: [{ end: 250, frontType: 2, start: 0 }, { end: 1200, frontType: 1, start: 844 }], surface: 1, turn: 1 }, "10902": { corners: [{ length: 300, start: 450 }, { length: 294, start: 750 }], course: 2, courseSetStatus: [], distance: 1400, distanceType: 2, finishTimeMax: 84e4, finishTimeMin: 8e5, laneMax: 12500, raceTrackId: 10009, slopes: [{ length: 595, slope: -1e4, start: 600 }, { length: 125, slope: 2e4, start: 1200 }], straights: [{ end: 450, frontType: 2, start: 0 }, { end: 1400, frontType: 1, start: 1044 }], surface: 1, turn: 1 }, "10903": { corners: [{ length: 350, start: 450 }, { length: 327, start: 800 }], course: 3, courseSetStatus: [3], distance: 1600, distanceType: 2, finishTimeMax: 95e4, finishTimeMin: 908e3, laneMax: 12500, raceTrackId: 10009, slopes: [{ length: 400, slope: -1e4, start: 950 }, { length: 120, slope: 2e4, start: 1405 }], straights: [{ end: 450, frontType: 2, start: 0 }, { end: 1600, frontType: 1, start: 1127 }], surface: 1, turn: 1 }, "10904": { corners: [{ length: 350, start: 650 }, { length: 327, start: 1e3 }], course: 3, courseSetStatus: [3], distance: 1800, distanceType: 2, finishTimeMax: 11e5, finishTimeMin: 1044e3, laneMax: 12500, raceTrackId: 10009, slopes: [{ length: 400, slope: -1e4, start: 1150 }, { length: 120, slope: 2e4, start: 1605 }], straights: [{ end: 650, frontType: 2, start: 0 }, { end: 1800, frontType: 1, start: 1327 }], surface: 1, turn: 1 }, "10905": { corners: [{ length: 190, start: 370 }, { length: 190, start: 560 }, { length: 300, start: 1050 }, { length: 294, start: 1350 }], course: 2, courseSetStatus: [4], distance: 2e3, distanceType: 3, finishTimeMax: 123e4, finishTimeMin: 1171e3, laneMax: 12500, raceTrackId: 10009, slopes: [{ length: 140, slope: -1e4, start: 0 }, { length: 125, slope: 2e4, start: 145 }, { length: 595, slope: -1e4, start: 1200 }, { length: 125, slope: 2e4, start: 1800 }], straights: [{ end: 370, frontType: 1, start: 0 }, { end: 1050, frontType: 2, start: 750 }, { end: 2e3, frontType: 1, start: 1644 }], surface: 1, turn: 1 }, "10906": { corners: [{ length: 190, start: 520 }, { length: 190, start: 710 }, { length: 300, start: 1250 }, { length: 294, start: 1550 }], course: 2, courseSetStatus: [1], distance: 2200, distanceType: 3, finishTimeMax: 135e4, finishTimeMin: 1302e3, laneMax: 12500, raceTrackId: 10009, slopes: [{ length: 290, slope: -1e4, start: 0 }, { length: 125, slope: 2e4, start: 295 }, { length: 595, slope: -1e4, start: 1400 }, { length: 125, slope: 2e4, start: 2e3 }], straights: [{ end: 520, frontType: 1, start: 0 }, { end: 1250, frontType: 2, start: 900 }, { end: 2200, frontType: 1, start: 1844 }], surface: 1, turn: 1 }, "10907": { corners: [{ length: 190, start: 382 }, { length: 190, start: 558 }, { length: 350, start: 1250 }, { length: 327, start: 1600 }], course: 3, courseSetStatus: [3], distance: 2400, distanceType: 3, finishTimeMax: 149e4, finishTimeMin: 1416e3, laneMax: 12500, raceTrackId: 10009, slopes: [{ length: 132, slope: -1e4, start: 0 }, { length: 120, slope: 2e4, start: 187 }, { length: 400, slope: -1e4, start: 1750 }, { length: 120, slope: 2e4, start: 2205 }], straights: [{ end: 1250, frontType: 2, start: 750 }, { end: 2400, frontType: 1, start: 1927 }], surface: 1, turn: 1 }, "10908": { corners: [{ length: 190, start: 570 }, { length: 190, start: 760 }, { length: 350, start: 1450 }, { length: 327, start: 1800 }], course: 3, courseSetStatus: [], distance: 2600, distanceType: 4, finishTimeMax: 165e4, finishTimeMin: 1576e3, laneMax: 12500, raceTrackId: 10009, slopes: [{ length: 315, slope: -1e4, start: 0 }, { length: 120, slope: 2e4, start: 370 }, { length: 400, slope: -1e4, start: 1950 }, { length: 120, slope: 2e4, start: 2405 }], straights: [{ end: 570, frontType: 1, start: 0 }, { end: 1450, frontType: 2, start: 950 }, { end: 2600, frontType: 1, start: 2127 }], surface: 1, turn: 1 }, "10909": { corners: [{ length: 300, start: 348 }, { length: 300, start: 648 }, { length: 190, start: 1320 }, { length: 190, start: 1510 }, { length: 300, start: 2050 }, { length: 294, start: 2350 }], course: 2, courseSetStatus: [3], distance: 3e3, distanceType: 4, finishTimeMax: 19e5, finishTimeMin: 1815e3, laneMax: 12500, raceTrackId: 10009, slopes: [{ length: 595, slope: -1e4, start: 498 }, { length: 125, slope: 2e4, start: 1095 }, { length: 595, slope: -1e4, start: 2200 }, { length: 125, slope: 2e4, start: 2800 }], straights: [{ end: 348, frontType: 2, start: 0 }, { end: 1320, frontType: 1, start: 948 }, { end: 2050, frontType: 2, start: 1700 }, { end: 3e3, frontType: 1, start: 2644 }], surface: 1, turn: 1 }, "10910": { corners: [{ length: 250, start: 350 }, { length: 248, start: 600 }], course: 1, courseSetStatus: [], distance: 1200, distanceType: 1, finishTimeMax: 77e4, finishTimeMin: 69e4, laneMax: 12e3, raceTrackId: 10009, slopes: [], straights: [{ end: 350, frontType: 2, start: 0 }, { end: 1200, frontType: 1, start: 848 }], surface: 2, turn: 1 }, "10911": { corners: [{ length: 250, start: 550 }, { length: 248, start: 800 }], course: 1, courseSetStatus: [], distance: 1400, distanceType: 2, finishTimeMax: 94e4, finishTimeMin: 808e3, laneMax: 12e3, raceTrackId: 10009, slopes: [{ length: 125, slope: 15e3, start: 1200 }], straights: [{ end: 550, frontType: 2, start: 0 }, { end: 1400, frontType: 1, start: 1048 }], surface: 2, turn: 1 }, "10912": { corners: [{ length: 150, start: 330 }, { length: 150, start: 480 }, { length: 250, start: 950 }, { length: 248, start: 1200 }], course: 1, courseSetStatus: [], distance: 1800, distanceType: 2, finishTimeMax: 118e4, finishTimeMin: 1081e3, laneMax: 12e3, raceTrackId: 10009, slopes: [{ length: 125, slope: 15e3, start: 105 }, { length: 125, slope: 15e3, start: 1599 }], straights: [{ end: 330, frontType: 1, start: 0 }, { end: 950, frontType: 2, start: 630 }, { end: 1800, frontType: 1, start: 1448 }], surface: 2, turn: 1 }, "10913": { corners: [{ length: 150, start: 500 }, { length: 150, start: 650 }, { length: 250, start: 1150 }, { length: 248, start: 1400 }], course: 1, courseSetStatus: [2, 3], distance: 2e3, distanceType: 3, finishTimeMax: 129e4, finishTimeMin: 1219e3, laneMax: 12e3, raceTrackId: 10009, slopes: [{ length: 125, slope: 15e3, start: 275 }, { length: 125, slope: 15e3, start: 1800 }], straights: [{ end: 500, frontType: 1, start: 0 }, { end: 1150, frontType: 2, start: 800 }, { end: 2e3, frontType: 1, start: 1648 }], surface: 2, turn: 1 }, "10914": { corners: [{ length: 350, start: 370 }, { length: 350, start: 720 }, { length: 190, start: 1520 }, { length: 190, start: 1710 }, { length: 300, start: 2250 }, { length: 294, start: 2550 }], course: 4, courseSetStatus: [], distance: 3200, distanceType: 4, finishTimeMax: 204e4, finishTimeMin: 193e4, laneMax: 12500, raceTrackId: 10009, slopes: [{ length: 400, slope: -1e4, start: 870 }, { length: 120, slope: 2e4, start: 1325 }, { length: 595, slope: -1e4, start: 2400 }, { length: 125, slope: 2e4, start: 3e3 }], straights: [{ end: 370, frontType: 2, start: 0 }, { end: 1520, frontType: 1, start: 1070 }, { end: 2250, frontType: 2, start: 1900 }, { end: 3200, frontType: 1, start: 2844 }], surface: 1, turn: 1 }, "11001": { corners: [{ length: 205, start: 500 }, { length: 202, start: 705 }], course: 1, courseSetStatus: [1], distance: 1200, distanceType: 1, finishTimeMax: 71e4, finishTimeMin: 675e3, laneMax: 14500, raceTrackId: 10010, slopes: [{ length: 60, slope: -15e3, start: 0 }], straights: [{ end: 500, frontType: 2, start: 0 }, { end: 1200, frontType: 1, start: 907 }], surface: 1, turn: 1 }, "11002": { corners: [{ length: 205, start: 290 }, { length: 205, start: 495 }, { length: 205, start: 1100 }, { length: 202, start: 1305 }], course: 1, courseSetStatus: [], distance: 1800, distanceType: 2, finishTimeMax: 11e5, finishTimeMin: 1044e3, laneMax: 14500, raceTrackId: 10010, slopes: [{ length: 255, slope: 15e3, start: 280 }], straights: [{ end: 290, frontType: 1, start: 0 }, { end: 1100, frontType: 2, start: 700 }, { end: 1800, frontType: 1, start: 1507 }], surface: 1, turn: 1 }, "11003": { corners: [{ length: 205, start: 490 }, { length: 205, start: 695 }, { length: 205, start: 1300 }, { length: 202, start: 1505 }], course: 1, courseSetStatus: [3], distance: 2e3, distanceType: 3, finishTimeMax: 123e4, finishTimeMin: 1171e3, laneMax: 14500, raceTrackId: 10010, slopes: [{ length: 255, slope: 15e3, start: 480 }], straights: [{ end: 490, frontType: 1, start: 0 }, { end: 1300, frontType: 2, start: 900 }, { end: 2e3, frontType: 1, start: 1707 }], surface: 1, turn: 1 }, "11004": { corners: [{ length: 205, start: 309 }, { length: 205, start: 514 }, { length: 205, start: 1110 }, { length: 205, start: 1315 }, { length: 205, start: 1900 }, { length: 202, start: 2105 }], course: 1, courseSetStatus: [2], distance: 2600, distanceType: 4, finishTimeMax: 165e4, finishTimeMin: 1576e3, laneMax: 14500, raceTrackId: 10010, slopes: [{ length: 255, slope: 15e3, start: 1100 }], straights: [{ end: 309, frontType: 2, start: 0 }, { end: 1110, frontType: 1, start: 719 }, { end: 1900, frontType: 2, start: 1520 }, { end: 2600, frontType: 1, start: 2307 }], surface: 1, turn: 1 }, "11005": { corners: [{ length: 180, start: 360 }, { length: 169, start: 540 }], course: 1, courseSetStatus: [1], distance: 1e3, distanceType: 1, finishTimeMax: 63e4, finishTimeMin: 574e3, laneMax: 12e3, raceTrackId: 10010, slopes: [], straights: [{ end: 360, frontType: 2, start: 0 }, { end: 1e3, frontType: 1, start: 709 }], surface: 2, turn: 1 }, "11006": { corners: [{ length: 180, start: 340 }, { length: 180, start: 520 }, { length: 180, start: 1060 }, { length: 169, start: 1240 }], course: 1, courseSetStatus: [], distance: 1700, distanceType: 2, finishTimeMax: 113e4, finishTimeMin: 1014e3, laneMax: 12e3, raceTrackId: 10010, slopes: [{ length: 150, slope: 15e3, start: 370 }], straights: [{ end: 340, frontType: 1, start: 0 }, { end: 1060, frontType: 2, start: 700 }, { end: 1700, frontType: 1, start: 1409 }], surface: 2, turn: 1 }, "11007": { corners: [{ length: 180, start: 312 }, { length: 180, start: 492 }, { length: 180, start: 1040 }, { length: 180, start: 1220 }, { length: 180, start: 1760 }, { length: 169, start: 1940 }], course: 1, courseSetStatus: [], distance: 2400, distanceType: 3, finishTimeMax: 156e4, finishTimeMin: 1491e3, laneMax: 12e3, raceTrackId: 10010, slopes: [], straights: [{ end: 312, frontType: 2, start: 0 }, { end: 1040, frontType: 1, start: 672 }, { end: 1760, frontType: 2, start: 1400 }, { end: 2400, frontType: 1, start: 2109 }], surface: 2, turn: 1 }, "11101": { corners: [{ length: 150, start: 500 }, { length: 164, start: 650 }], course: 1, courseSetStatus: [4, 5], distance: 1200, distanceType: 1, finishTimeMax: 77e4, finishTimeMin: 69e4, laneMax: 12e3, raceTrackId: 10101, slopes: [], straights: [{ end: 500, frontType: 2, start: 0 }, { end: 1200, frontType: 1, start: 814 }], surface: 2, turn: 1 }, "11102": { corners: [{ length: 150, start: 300 }, { length: 150, start: 500 }, { length: 150, start: 1100 }, { length: 164, start: 1250 }], course: 1, courseSetStatus: [3], distance: 1800, distanceType: 2, finishTimeMax: 118e4, finishTimeMin: 1081e3, laneMax: 12e3, raceTrackId: 10101, slopes: [], straights: [{ end: 301, frontType: 1, start: 0 }, { end: 1100.23, frontType: 2, start: 600 }, { end: 1800, frontType: 1, start: 1414 }], surface: 2, turn: 1 }, "11103": { corners: [{ length: 150, start: 500 }, { length: 150, start: 650 }, { length: 150, start: 1300 }, { length: 164, start: 1450 }], course: 1, courseSetStatus: [2], distance: 2e3, distanceType: 3, finishTimeMax: 129e4, finishTimeMin: 1219e3, laneMax: 12e3, raceTrackId: 10101, slopes: [], straights: [{ end: 500, frontType: 1, start: 0 }, { end: 1300, frontType: 2, start: 800 }, { end: 2e3, frontType: 1, start: 1614 }], surface: 2, turn: 1 }, "11203": { corners: [{ length: 417, start: 1e3 }, { length: 200, start: 1417 }], course: 1, courseSetStatus: [2, 3], distance: 2400, distanceType: 3, finishTimeMax: 165e4, finishTimeMin: 145e4, laneMax: 12e3, raceTrackId: 10201, slopes: [{ length: 600, slope: 2e4, start: 400 }, { length: 383, slope: -2e4, start: 1017 }, { length: 217, slope: -15e3, start: 1400 }], straights: [{ end: 1e3, frontType: 2, start: 0 }, { end: 1866, frontType: 3, start: 1617 }, { end: 2400, frontType: 1, start: 1867 }], surface: 1, turn: 1 }, "11301": { corners: [{ length: 100, start: 300 }, { length: 100, start: 400 }, { length: 100, start: 900 }, { length: 100, start: 1e3 }], course: 1, courseSetStatus: [5], distance: 1400, distanceType: 2, finishTimeMax: 94e4, finishTimeMin: 87e4, laneMax: 13500, raceTrackId: 10103, slopes: [], straights: [{ end: 300, frontType: 1, start: 0 }, { end: 900, frontType: 2, start: 500 }, { end: 1400, frontType: 1, start: 1100 }], surface: 2, turn: 2 }, "11302": { corners: [{ length: 100, start: 500 }, { length: 100, start: 600 }, { length: 100, start: 1100 }, { length: 100, start: 1200 }], course: 1, courseSetStatus: [5], distance: 1600, distanceType: 2, finishTimeMax: 108e4, finishTimeMin: 98e4, laneMax: 13500, raceTrackId: 10103, slopes: [], straights: [{ end: 500, frontType: 1, start: 100 }, { end: 1100, frontType: 2, start: 700 }, { end: 1600, frontType: 1, start: 1300 }], surface: 2, turn: 2 }, "11303": { corners: [{ length: 100, start: 400 }, { length: 100, start: 500 }, { length: 100, start: 1e3 }, { length: 100, start: 1100 }, { length: 100, start: 1600 }, { length: 100, start: 1700 }], course: 1, courseSetStatus: [2, 5], distance: 2100, distanceType: 3, finishTimeMax: 14e5, finishTimeMin: 131e4, laneMax: 13500, raceTrackId: 10103, slopes: [], straights: [{ end: 400, frontType: 2, start: 0 }, { end: 1e3, frontType: 1, start: 600 }, { end: 1600, frontType: 2, start: 1200 }, { end: 2100, frontType: 1, start: 1800 }], surface: 2, turn: 2 }, "11401": { corners: [{ length: 170, start: 370 }, { length: 152, start: 540 }], course: 1, courseSetStatus: [1], distance: 1e3, distanceType: 1, finishTimeMax: 63e4, finishTimeMin: 58e4, laneMax: 13500, raceTrackId: 10104, slopes: [], straights: [{ end: 370, frontType: 2, start: 0 }, { end: 1e3, frontType: 1, start: 692 }], surface: 2, turn: 2 }, "11402": { corners: [{ length: 180, start: 260 }, { length: 160, start: 440 }, { length: 170, start: 970 }, { length: 152, start: 1140 }], course: 1, courseSetStatus: [], distance: 1600, distanceType: 2, finishTimeMax: 108e4, finishTimeMin: 96e4, laneMax: 13500, raceTrackId: 10104, slopes: [], straights: [{ end: 260, frontType: 1, start: 0 }, { end: 970, frontType: 2, start: 600 }, { end: 1600, frontType: 1, start: 1292 }], surface: 2, turn: 2 }, "11403": { corners: [{ length: 180, start: 460 }, { length: 160, start: 640 }, { length: 170, start: 1170 }, { length: 152, start: 1340 }], course: 1, courseSetStatus: [], distance: 1800, distanceType: 2, finishTimeMax: 118e4, finishTimeMin: 108e4, laneMax: 13500, raceTrackId: 10104, slopes: [], straights: [{ end: 460, frontType: 1, start: 90 }, { end: 1170, frontType: 2, start: 800 }, { end: 1800, frontType: 1, start: 1492 }], surface: 2, turn: 2 }, "11404": { corners: [{ length: 170, start: 370 }, { length: 150, start: 540 }, { length: 180, start: 1060 }, { length: 160, start: 1240 }, { length: 170, start: 1770 }, { length: 152, start: 1940 }], course: 1, courseSetStatus: [2], distance: 2400, distanceType: 3, finishTimeMax: 156e4, finishTimeMin: 15e5, laneMax: 13500, raceTrackId: 10104, slopes: [], straights: [{ end: 370, frontType: 2, start: 0 }, { end: 1060, frontType: 1, start: 690 }, { end: 1770, frontType: 2, start: 1400 }, { end: 2400, frontType: 1, start: 2092 }], surface: 2, turn: 2 }, "11501": { corners: [{ length: 200, start: 500 }, { length: 200, start: 700 }], course: 1, courseSetStatus: [2], distance: 1200, distanceType: 1, finishTimeMax: 77e4, finishTimeMin: 69e4, laneMax: 13500, raceTrackId: 10105, slopes: [{ length: 375, slope: 1e4, start: 100 }, { length: 450, slope: -15e3, start: 475 }, { length: 175, slope: 1e4, start: 975 }], straights: [{ end: 500, frontType: 2, start: 100 }, { end: 1200, frontType: 1, start: 900 }], surface: 2, turn: 2 }, "11502": { corners: [{ length: 200, start: 900 }, { length: 200, start: 1100 }], course: 1, courseSetStatus: [2, 5], distance: 1600, distanceType: 2, finishTimeMax: 108e4, finishTimeMin: 93e4, laneMax: 13500, raceTrackId: 10105, slopes: [{ length: 375, slope: 1e4, start: 500 }, { length: 450, slope: -15e3, start: 875 }, { length: 175, slope: 1e4, start: 1375 }], straights: [{ end: 900, frontType: 2, start: 500 }, { end: 1600, frontType: 1, start: 1300 }], surface: 2, turn: 2 }, "11503": { corners: [{ length: 200, start: 300 }, { length: 200, start: 500 }, { length: 200, start: 1100 }, { length: 200, start: 1300 }], course: 1, courseSetStatus: [2, 5], distance: 1800, distanceType: 2, finishTimeMax: 118e4, finishTimeMin: 11e5, laneMax: 13500, raceTrackId: 10105, slopes: [{ length: 150, slope: 1e4, start: 0 }, { length: 450, slope: -15e3, start: 700 }, { length: 175, slope: 1e4, start: 1575 }], straights: [{ end: 300, frontType: 1, start: 0 }, { end: 1100, frontType: 2, start: 700 }, { end: 1800, frontType: 1, start: 1500 }], surface: 2, turn: 2 }, "11504": { corners: [{ length: 200, start: 500 }, { length: 200, start: 700 }, { length: 200, start: 1300 }, { length: 200, start: 1500 }], course: 1, courseSetStatus: [2], distance: 2e3, distanceType: 3, finishTimeMax: 129e4, finishTimeMin: 121e4, laneMax: 13500, raceTrackId: 10105, slopes: [{ length: 175, slope: 1e4, start: 175 }, { length: 375, slope: 1e4, start: 900 }, { length: 450, slope: -15e3, start: 1275 }, { length: 175, slope: 1e4, start: 1775 }], straights: [{ end: 500, frontType: 1, start: 100 }, { end: 1300, frontType: 2, start: 900 }, { end: 2e3, frontType: 1, start: 1700 }], surface: 2, turn: 2 } };

  // ../../skilltool/CourseData.ts
  var assert = __require("assert").strict;
  var Surface = /* @__PURE__ */ ((Surface2) => {
    Surface2[Surface2["Turf"] = 1] = "Turf";
    Surface2[Surface2["Dirt"] = 2] = "Dirt";
    return Surface2;
  })(Surface || {});
  var DistanceType = /* @__PURE__ */ ((DistanceType3) => {
    DistanceType3[DistanceType3["Short"] = 1] = "Short";
    DistanceType3[DistanceType3["Mile"] = 2] = "Mile";
    DistanceType3[DistanceType3["Mid"] = 3] = "Mid";
    DistanceType3[DistanceType3["Long"] = 4] = "Long";
    return DistanceType3;
  })(DistanceType || {});
  var Orientation = /* @__PURE__ */ ((Orientation2) => {
    Orientation2[Orientation2["Clockwise"] = 1] = "Clockwise";
    Orientation2[Orientation2["Counterclockwise"] = 2] = "Counterclockwise";
    return Orientation2;
  })(Orientation || {});
  var CourseHelpers;
  ((CourseHelpers2) => {
    function assertIsPhase(phase) {
      assert(phase == 0 || phase == 1 || phase == 2 || phase == 3);
    }
    CourseHelpers2.assertIsPhase = assertIsPhase;
    function assertIsSurface(surface) {
      assert(Surface.hasOwnProperty(surface));
    }
    CourseHelpers2.assertIsSurface = assertIsSurface;
    function assertIsDistanceType(distanceType) {
      assert(DistanceType.hasOwnProperty(distanceType));
    }
    CourseHelpers2.assertIsDistanceType = assertIsDistanceType;
    function assertIsOrientation(orientation) {
      assert(Orientation.hasOwnProperty(orientation));
    }
    CourseHelpers2.assertIsOrientation = assertIsOrientation;
    function isSortedByStart(arr) {
      const init = [true, -1];
      function isSorted(a4, b3) {
        return [a4[0] && b3.start > a4[1], b3.start];
      }
      return arr.reduce(isSorted, init)[0];
    }
    CourseHelpers2.isSortedByStart = isSortedByStart;
    function phaseStart(distance, phase) {
      switch (phase) {
        case 0:
          return 0;
        case 1:
          return distance * 1 / 6;
        case 2:
          return distance * 2 / 3;
        case 3:
          return distance * 5 / 6;
      }
    }
    CourseHelpers2.phaseStart = phaseStart;
    function phaseEnd(distance, phase) {
      switch (phase) {
        case 0:
          return distance * 1 / 6;
        case 1:
          return distance * 2 / 3;
        case 2:
          return distance * 5 / 6;
        case 3:
          return distance;
      }
    }
    CourseHelpers2.phaseEnd = phaseEnd;
    function courseSpeedModifier(course, stats) {
      const statvalues = [0, stats.speed, stats.stamina, stats.power, stats.guts, stats.wisdom].map((x2) => Math.min(x2, 901));
      return 1 + course.courseSetStatus.map(
        (stat) => (1 + Math.floor(statvalues[stat] / 300.01)) * 0.05
      ).reduce((a4, b3) => a4 + b3, 0) / Math.max(course.courseSetStatus.length, 1);
    }
    CourseHelpers2.courseSpeedModifier = courseSpeedModifier;
    function getCourse(courseId) {
      const course = course_data_default[courseId];
      if (!isSortedByStart(course.slopes))
        course.slopes.sort((a4, b3) => a4.start - b3.start);
      Object.keys(course).forEach((k3) => Object.freeze(course[k3]));
      return Object.freeze(course);
    }
    CourseHelpers2.getCourse = getCourse;
  })(CourseHelpers || (CourseHelpers = {}));

  // ../../skilltool/HorseTypes.ts
  var assert2 = __require("assert").strict;
  var Strategy = /* @__PURE__ */ ((Strategy2) => {
    Strategy2[Strategy2["Nige"] = 1] = "Nige";
    Strategy2[Strategy2["Senkou"] = 2] = "Senkou";
    Strategy2[Strategy2["Sasi"] = 3] = "Sasi";
    Strategy2[Strategy2["Oikomi"] = 4] = "Oikomi";
    Strategy2[Strategy2["Oonige"] = 5] = "Oonige";
    return Strategy2;
  })(Strategy || {});
  var StrategyHelpers;
  ((StrategyHelpers2) => {
    function assertIsStrategy(strategy) {
      assert2(Strategy.hasOwnProperty(strategy));
    }
    StrategyHelpers2.assertIsStrategy = assertIsStrategy;
    function strategyMatches(s1, s22) {
      return s1 == s22 || s1 == 1 /* Nige */ && s22 == 5 /* Oonige */ || s1 == 5 /* Oonige */ && s22 == 1 /* Nige */;
    }
    StrategyHelpers2.strategyMatches = strategyMatches;
  })(StrategyHelpers || (StrategyHelpers = {}));

  // ../../skilltool/Region.ts
  var Region = class _Region {
    constructor(start, end) {
      this.start = start;
      this.end = end;
    }
    intersect(other) {
      const start = Math.max(this.start, other.start);
      const end = Math.min(this.end, other.end);
      if (end <= start) {
        return new _Region(-1, -1);
      } else {
        return new _Region(start, end);
      }
    }
    fullyContains(other) {
      return this.start <= other.start && this.end >= other.end;
    }
  };
  var RegionList = class _RegionList extends Array {
    rmap(f3) {
      const out = new _RegionList();
      this.forEach((r3) => {
        const newr = f3(r3);
        if (Array.isArray(newr)) {
          newr.forEach((nr) => {
            if (nr.start > -1) {
              out.push(nr);
            }
          });
        } else if (newr.start > -1) {
          out.push(newr);
        }
      });
      return out;
    }
    union(other) {
      const u3 = [];
      const r3 = new _RegionList();
      u3.push.apply(u3, this);
      u3.push.apply(u3, other);
      if (u3.length == 0) {
        return r3;
      }
      u3.sort((a4, b3) => a4.start - b3.start);
      r3.push(u3.reduce((a4, b3) => {
        if (a4.fullyContains(b3)) {
          return a4;
        } else if (a4.start <= b3.start && b3.start < a4.end) {
          return new Region(a4.start, b3.end);
        } else if (a4.start < b3.end && b3.end <= a4.end) {
          return new Region(b3.start, a4.end);
        } else {
          r3.push(a4);
          return b3;
        }
      }));
      return r3;
    }
  };

  // ../../skilltool/ActivationSamplePolicy.ts
  var ImmediatePolicy = Object.freeze({
    sample(regions, _0, _1) {
      return regions.slice(0, 1);
    },
    reconcile(other) {
      return other.reconcileImmediate(this);
    },
    reconcileImmediate(other) {
      return other;
    },
    reconcileDistributionRandom(other) {
      return other;
    },
    reconcileRandom(other) {
      return other;
    },
    reconcileStraightRandom(other) {
      return other;
    },
    reconcileAllCornerRandom(other) {
      return other;
    }
  });
  var RandomPolicy = Object.freeze({
    sample(regions, nsamples, rng) {
      if (regions.length == 0) {
        return [];
      }
      let acc = 0;
      const weights = regions.map((r3) => acc += r3.end - r3.start);
      const samples = [];
      for (let i4 = 0; i4 < nsamples; ++i4) {
        const threshold = rng.uniform(acc);
        const region = regions.find((_, i5) => weights[i5] > threshold);
        samples.push(region.start + rng.uniform(region.end - region.start - 10));
      }
      return samples.map((pos) => new Region(pos, pos + 10));
    },
    reconcile(other) {
      return other.reconcileRandom(this);
    },
    reconcileImmediate(_) {
      return this;
    },
    reconcileDistributionRandom(other) {
      return this;
    },
    reconcileRandom(other) {
      return other;
    },
    reconcileStraightRandom(other) {
      return other;
    },
    reconcileAllCornerRandom(other) {
      return other;
    }
  });
  var DistributionRandomPolicy = class {
    sample(regions, nsamples, rng) {
      if (regions.length == 0) {
        return [];
      }
      const range = regions.reduce((acc, r3) => acc + r3.end - r3.start, 0);
      const rs = regions.slice().sort((a4, b3) => a4.start - b3.start);
      const randoms = this.distribution(range, nsamples, rng);
      const samples = [];
      for (let i4 = 0; i4 < nsamples; ++i4) {
        let pos = randoms[i4];
        for (let j3 = 0; ; j3++) {
          pos += rs[j3].start;
          if (pos > rs[j3].end) {
            pos -= rs[j3].end;
          } else {
            samples.push(new Region(pos, rs[j3].end));
            break;
          }
        }
      }
      return samples;
    }
    reconcile(other) {
      return other.reconcileDistributionRandom(this);
    }
    reconcileImmediate(_) {
      return this;
    }
    reconcileDistributionRandom(other) {
      if (this === other) {
        return this;
      }
      throw new Error("cannot reconcile different distributions");
    }
    reconcileRandom(other) {
      return other;
    }
    reconcileStraightRandom(other) {
      return other;
    }
    reconcileAllCornerRandom(other) {
      return other;
    }
  };
  var UniformRandomPolicy = class extends DistributionRandomPolicy {
    constructor() {
      super();
    }
    distribution(upper, nsamples, rng) {
      const nums = [];
      for (let i4 = 0; i4 < nsamples; ++i4) {
        nums.push(rng.uniform(upper));
      }
      return nums;
    }
  };
  var LogNormalRandomPolicy = class extends DistributionRandomPolicy {
    constructor(mu, sigma) {
      super();
      this.mu = mu;
      this.sigma = sigma;
    }
    distribution(upper, nsamples, rng) {
      let nums = [], min = Infinity, max = 0;
      const halfn = Math.ceil(nsamples / 2);
      for (let i4 = 0; i4 < halfn; ++i4) {
        let x2, y2, r22;
        do {
          x2 = rng.random() * 2 - 1;
          y2 = rng.random() * 2 - 1;
          r22 = x2 * x2 + y2 * y2;
        } while (r22 == 0 || r22 >= 1);
        const m3 = Math.sqrt(-2 * Math.log(r22) / r22) * this.sigma;
        const a4 = Math.exp(x2 * m3 + this.mu);
        const b3 = Math.exp(y2 * m3 + this.mu);
        min = Math.min(min, a4, b3);
        max = Math.max(max, a4, b3);
        nums.push(a4, b3);
      }
      const range = max - min;
      return nums.map((n3) => Math.floor(upper * (n3 - min) / range));
    }
  };
  var ErlangRandomPolicy = class extends DistributionRandomPolicy {
    constructor(k3, lambda) {
      super();
      this.k = k3;
      this.lambda = lambda;
    }
    distribution(upper, nsamples, rng) {
      const nums = [];
      let min = Infinity, max = 0;
      for (let i4 = 0; i4 < nsamples; ++i4) {
        let u3 = 1;
        for (let j3 = 0; j3 < this.k; ++j3) {
          u3 *= rng.random();
        }
        const n3 = -Math.log(u3) / this.lambda;
        min = Math.min(min, n3);
        max = Math.max(max, n3);
        nums.push(n3);
      }
      const range = nsamples == 1 ? 18 : max - min;
      return nums.map((n3) => Math.floor(upper * (n3 - min) / range));
    }
  };
  var StraightRandomPolicy = Object.freeze({
    sample(regions, nsamples, rng) {
      if (regions.length == 0) {
        return [];
      }
      const samples = [];
      for (let i4 = 0; i4 < nsamples; ++i4) {
        const r3 = regions[rng.uniform(regions.length)];
        samples.push(r3.start + rng.uniform(r3.end - r3.start - 10));
      }
      return samples.map((pos) => new Region(pos, pos + 10));
    },
    reconcile(other) {
      return other.reconcileStraightRandom(this);
    },
    reconcileImmediate(_) {
      return this;
    },
    reconcileDistributionRandom(_) {
      return this;
    },
    reconcileRandom(_) {
      return this;
    },
    reconcileStraightRandom(other) {
      return other;
    },
    reconcileAllCornerRandom(other) {
      throw new Error("cannot reconcile StraightRandomPolicy with AllCornerRandomPolicy");
    }
  });
  var AllCornerRandomPolicy = Object.freeze({
    placeTriggers(regions, rng) {
      const triggers = [];
      const candidates = regions.slice();
      candidates.sort((a4, b3) => a4.start - b3.start);
      while (triggers.length < 4 && candidates.length > 0) {
        const ci = rng.uniform(candidates.length);
        const c3 = candidates[ci];
        const start = c3.start + rng.uniform(c3.end - c3.start - 10);
        if (start + 20 <= c3.end) {
          candidates.splice(ci, 1, new Region(start + 10, c3.end));
        } else {
          candidates.splice(ci, 1);
        }
        candidates.splice(0, ci);
        triggers.push(start);
      }
      return new Region(triggers[0], triggers[0] + 10);
    },
    sample(regions, nsamples, rng) {
      const samples = [];
      for (let i4 = 0; i4 < nsamples; ++i4) {
        samples.push(this.placeTriggers(regions, rng));
      }
      return samples;
    },
    reconcile(other) {
      return other.reconcileAllCornerRandom(this);
    },
    reconcileImmediate(_) {
      return this;
    },
    reconcileDistributionRandom(_) {
      return this;
    },
    reconcileRandom(_) {
      return this;
    },
    reconcileStraightRandom(_) {
      throw new Error("cannot reconcile StraightRandomPolicy with AllCornerRandomPolicy");
    },
    reconcileAllCornerRandom(_) {
      return this;
    }
  });

  // ../../skilltool/ActivationConditions.ts
  var assert3 = __require("assert").strict;
  function kTrue(_) {
    return true;
  }
  function withDefaultCond(r3) {
    if (r3 instanceof RegionList) {
      return [r3, kTrue];
    }
    return r3;
  }
  var EqOperator = class {
    constructor(condition, argument) {
      this.condition = condition;
      this.argument = argument;
      this.samplePolicy = condition.samplePolicy;
    }
    apply(regions, course, horse2) {
      return withDefaultCond(this.condition.filterEq(regions, this.argument, course, horse2));
    }
  };
  var NeqOperator = class {
    constructor(condition, argument) {
      this.condition = condition;
      this.argument = argument;
      this.samplePolicy = condition.samplePolicy;
    }
    apply(regions, course, horse2) {
      return withDefaultCond(this.condition.filterNeq(regions, this.argument, course, horse2));
    }
  };
  var LtOperator = class {
    constructor(condition, argument) {
      this.condition = condition;
      this.argument = argument;
      this.samplePolicy = condition.samplePolicy;
    }
    apply(regions, course, horse2) {
      return withDefaultCond(this.condition.filterLt(regions, this.argument, course, horse2));
    }
  };
  var LteOperator = class {
    constructor(condition, argument) {
      this.condition = condition;
      this.argument = argument;
      this.samplePolicy = condition.samplePolicy;
    }
    apply(regions, course, horse2) {
      return withDefaultCond(this.condition.filterLte(regions, this.argument, course, horse2));
    }
  };
  var GtOperator = class {
    constructor(condition, argument) {
      this.condition = condition;
      this.argument = argument;
      this.samplePolicy = condition.samplePolicy;
    }
    apply(regions, course, horse2) {
      return withDefaultCond(this.condition.filterGt(regions, this.argument, course, horse2));
    }
  };
  var GteOperator = class {
    constructor(condition, argument) {
      this.condition = condition;
      this.argument = argument;
      this.samplePolicy = condition.samplePolicy;
    }
    apply(regions, course, horse2) {
      return withDefaultCond(this.condition.filterGte(regions, this.argument, course, horse2));
    }
  };
  var AndOperator = class {
    constructor(left, right) {
      this.left = left;
      this.right = right;
      this.samplePolicy = left.samplePolicy.reconcile(right.samplePolicy);
    }
    apply(regions, course, horse2) {
      const [leftval, leftcond] = this.left.apply(regions, course, horse2);
      const [rightval, rightcond] = this.right.apply(leftval, course, horse2);
      if (leftcond === kTrue && rightcond === kTrue) {
        return [rightval, kTrue];
      }
      return [rightval, (s3) => leftcond(s3) && rightcond(s3)];
    }
  };
  var OrOperator = class {
    constructor(left, right) {
      this.left = left;
      this.right = right;
      this.samplePolicy = left.samplePolicy.reconcile(right.samplePolicy);
    }
    apply(regions, course, horse2) {
      const [leftval, leftcond] = this.left.apply(regions, course, horse2);
      const [rightval, rightcond] = this.right.apply(regions, course, horse2);
      return [leftval.union(rightval), (s3) => leftcond(s3) || rightcond(s3)];
    }
  };
  function notSupported(_0, _1, _2, _3) {
    assert3(false, "unsupported comparison");
    throw 0;
  }
  function noop(regions, _1, _2, _3) {
    return regions;
  }
  var noopAll = Object.freeze({
    filterEq: noop,
    filterNeq: noop,
    filterLt: noop,
    filterLte: noop,
    filterGt: noop,
    filterGte: noop
  });
  var noopImmediate = Object.freeze(Object.assign({ samplePolicy: ImmediatePolicy }, noopAll));
  var noopRandom = Object.freeze(Object.assign({ samplePolicy: RandomPolicy }, noopAll));
  var defaultImmediate = Object.freeze({
    samplePolicy: ImmediatePolicy,
    filterEq: notSupported,
    filterNeq: notSupported,
    filterLt: notSupported,
    filterLte: notSupported,
    filterGt: notSupported,
    filterGte: notSupported
  });
  function immediate(o4) {
    return Object.assign({}, defaultImmediate, o4);
  }
  var defaultRandom = Object.freeze({
    samplePolicy: RandomPolicy,
    filterEq: notSupported,
    filterNeq: notSupported,
    filterLt: notSupported,
    filterLte: notSupported,
    filterGt: notSupported,
    filterGte: notSupported
  });
  function random(o4) {
    return Object.assign({}, defaultRandom, o4);
  }
  function distributionRandomFactory(cls) {
    const cache = /* @__PURE__ */ Object.create(null);
    return function(...args) {
      const o4 = args.pop();
      const key = args.join(",");
      const policy = key in cache ? cache[key] : cache[key] = Object.freeze(new cls(...args));
      return Object.assign({
        samplePolicy: policy,
        filterEq: notSupported,
        filterNeq: notSupported,
        filterLt: notSupported,
        filterLte: notSupported,
        filterGt: notSupported,
        filterGte: notSupported
      }, o4);
    };
  }
  var logNormalRandom = distributionRandomFactory(LogNormalRandomPolicy);
  var erlangRandom = distributionRandomFactory(ErlangRandomPolicy);
  var uniformRandom = distributionRandomFactory(UniformRandomPolicy);
  function noopErlangRandom(k3, lambda) {
    return erlangRandom(k3, lambda, noopAll);
  }
  var noopUniformRandom = uniformRandom(noopAll);
  var Conditions = Object.freeze({
    accumulatetime: immediate({
      filterGte(regions, t3, _0, _1) {
        return [regions, (s3) => s3.accumulatetime.t >= t3];
      }
    }),
    activate_count_all: immediate({
      filterLte(regions, n3, _0, _1) {
        return [regions, (s3) => s3.activateCount.reduce((a4, b3) => a4 + b3) <= n3];
      },
      filterGte(regions, n3, _0, _1) {
        return [regions, (s3) => s3.activateCount.reduce((a4, b3) => a4 + b3) >= n3];
      }
    }),
    activate_count_end_after: immediate({
      filterGte(regions, n3, _0, _1) {
        return [regions, (s3) => s3.activateCount[2] >= n3];
      }
    }),
    activate_count_heal: immediate({
      filterGte(regions, n3, _0, _1) {
        return [regions, (s3) => s3.activateCountHeal >= n3];
      }
    }),
    activate_count_middle: immediate({
      filterGte(regions, n3, _0, _1) {
        return [regions, (s3) => s3.activateCount[1] >= n3];
      }
    }),
    activate_count_start: immediate({
      filterGte(regions, n3, _0, _1) {
        return [regions, (s3) => s3.activateCount[0] >= n3];
      }
    }),
    all_corner_random: {
      samplePolicy: AllCornerRandomPolicy,
      filterEq(regions, one, course, _) {
        assert3(one == 1, "must be all_corner_random==1");
        const corners = course.corners.map((c3) => new Region(c3.start, c3.start + c3.length));
        return regions.rmap((r3) => corners.map((c3) => r3.intersect(c3)));
      },
      filterNeq: notSupported,
      filterLt: notSupported,
      filterLte: notSupported,
      filterGt: notSupported,
      filterGte: notSupported
    },
    always: noopImmediate,
    base_power: immediate({
      // NB. since skill conditions are processed before any skill activations, just using power here is base power (i.e. greens are not included)
      filterLt(regions, threshold, _, horse2) {
        return horse2.power < threshold ? regions : new RegionList();
      },
      filterLte(regions, threshold, _, horse2) {
        return horse2.power <= threshold ? regions : new RegionList();
      },
      filterGt(regions, threshold, _, horse2) {
        return horse2.power > threshold ? regions : new RegionList();
      },
      filterGte(regions, threshold, _, horse2) {
        return horse2.power >= threshold ? regions : new RegionList();
      }
    }),
    base_speed: immediate({
      filterLt(regions, threshold, _, horse2) {
        return horse2.speed < threshold ? regions : new RegionList();
      },
      filterLte(regions, threshold, _, horse2) {
        return horse2.speed <= threshold ? regions : new RegionList();
      },
      filterGt(regions, threshold, _, horse2) {
        return horse2.speed > threshold ? regions : new RegionList();
      },
      filterGte(regions, threshold, _, horse2) {
        return horse2.speed >= threshold ? regions : new RegionList();
      }
    }),
    base_stamina: immediate({
      filterLt(regions, threshold, _, horse2) {
        return horse2.stamina < threshold ? regions : new RegionList();
      },
      filterLte(regions, threshold, _, horse2) {
        return horse2.stamina <= threshold ? regions : new RegionList();
      },
      filterGt(regions, threshold, _, horse2) {
        return horse2.stamina > threshold ? regions : new RegionList();
      },
      filterGte(regions, threshold, _, horse2) {
        return horse2.stamina >= threshold ? regions : new RegionList();
      }
    }),
    bashin_diff_behind: noopErlangRandom(3, 2),
    bashin_diff_infront: noopErlangRandom(3, 2),
    behind_near_lane_time: noopErlangRandom(3, 2),
    // NB. at least in theory _set1 should have a slightly more early-biased distribution since it's technically easier to activate, but I don't
    // really think it makes much of a difference. Same with blocked_front vs blocked_front_continuetime I suppose.
    behind_near_lane_time_set1: noopErlangRandom(3, 2),
    blocked_all_continuetime: noopErlangRandom(3, 2),
    blocked_front: noopErlangRandom(3, 2),
    blocked_front_continuetime: noopErlangRandom(3, 2),
    blocked_side_continuetime: noopErlangRandom(3, 2),
    change_order_onetime: noopErlangRandom(3, 2),
    change_order_up_end_after: erlangRandom(3, 2, {
      filterGte(regions, _0, course, _1) {
        const bounds = new Region(CourseHelpers.phaseStart(course.distance, 2), course.distance);
        return regions.rmap((r3) => r3.intersect(bounds));
      }
    }),
    change_order_up_finalcorner_after: erlangRandom(3, 2, {
      filterGte(regions, _0, course, _1) {
        assert3(CourseHelpers.isSortedByStart(course.corners), "course corners must be sorted by start");
        if (course.corners.length == 0) {
          return new RegionList();
        }
        const finalCornerStart = course.corners[course.corners.length - 1].start;
        const bounds = new Region(finalCornerStart, course.distance);
        return regions.rmap((r3) => r3.intersect(bounds));
      }
    }),
    change_order_up_middle: erlangRandom(3, 2, {
      filterGte(regions, _0, course, _1) {
        const bounds = new Region(CourseHelpers.phaseStart(course.distance, 1), CourseHelpers.phaseEnd(course.distance, 1));
        return regions.rmap((r3) => r3.intersect(bounds));
      }
    }),
    compete_fight_count: uniformRandom({
      filterGt(regions, _0, course, _1) {
        assert3(CourseHelpers.isSortedByStart(course.straights), "course straights must be sorted by start");
        const lastStraight = course.straights[course.straights.length - 1];
        return regions.rmap((r3) => r3.intersect(lastStraight));
      }
    }),
    corner: immediate({
      filterEq(regions, cornerNum, course, _) {
        assert3(CourseHelpers.isSortedByStart(course.corners), "course corners must be sorted by start");
        if (cornerNum == 0) {
          let lastEnd = 0;
          const nonCorners = course.corners.map((c3) => {
            const r3 = new Region(lastEnd, c3.start);
            lastEnd = c3.start + c3.length;
            return r3;
          });
          if (lastEnd != course.distance) {
            nonCorners.push(new Region(lastEnd, course.distance));
          }
          return regions.rmap((r3) => nonCorners.map((s3) => r3.intersect(s3)));
        } else if (course.corners.length + cornerNum >= 5) {
          const corners = [];
          for (let cornerIdx = course.corners.length + cornerNum - 5; cornerIdx >= 0; cornerIdx -= 4) {
            const corner = course.corners[cornerIdx];
            corners.push(new Region(corner.start, corner.start + corner.length));
          }
          corners.reverse();
          return regions.rmap((r3) => corners.map((c3) => r3.intersect(c3)));
        } else {
          return new RegionList();
        }
      },
      filterNeq(regions, cornerNum, course, _) {
        assert3(cornerNum == 0, "only supports corner!=0");
        const corners = course.corners.map((c3) => new Region(c3.start, c3.start + c3.length));
        return regions.rmap((r3) => corners.map((c3) => r3.intersect(c3)));
      }
    }),
    // FIXME this shouldn't actually be random, since in cases like corner_random==1@corner_random==2 it should sample
    // only from the first corner and not from the combined regions, so it needs its own sample policy
    // actually, that's slightly annoying to handle since corners come in back-to-back pairs, so their regions will
    // get merged by the union operation.
    // the real way to fix this is to finally allow placing multiple triggers, then each branch of an @ can simply
    // place its own trigger and the problem goes away.
    corner_random: random({
      filterEq(regions, cornerNum, course, _) {
        assert3(CourseHelpers.isSortedByStart(course.corners), "course corners must be sorted by start");
        if (course.corners.length + cornerNum >= 5) {
          const corner = course.corners[course.corners.length + cornerNum - 5];
          const cornerBounds = new Region(corner.start, corner.start + corner.length);
          return regions.rmap((r3) => r3.intersect(cornerBounds));
        } else {
          return new RegionList();
        }
      }
    }),
    course_distance: immediate({
      filterEq(regions, distance, course, _) {
        return distance == course.distance ? regions : new RegionList();
      },
      filterNeq(regions, distance, course, _) {
        return distance != course.distance ? regions : new RegionList();
      },
      filterLt(regions, distance, course, _) {
        return distance < course.distance ? regions : new RegionList();
      },
      filterLte(regions, distance, course, _) {
        return distance <= course.distance ? regions : new RegionList();
      },
      filterGt(regions, distance, course, _) {
        return distance > course.distance ? regions : new RegionList();
      },
      filterGte(regions, distance, course, _) {
        return distance >= course.distance ? regions : new RegionList();
      }
    }),
    distance_diff_rate: noopImmediate,
    distance_diff_top: noopImmediate,
    distance_rate: immediate({
      filterLte(regions, rate, course, _) {
        const bounds = new Region(0, course.distance * rate / 100);
        return regions.rmap((r3) => r3.intersect(bounds));
      },
      filterGte(regions, rate, course, _) {
        const bounds = new Region(course.distance * rate / 100, course.distance);
        return regions.rmap((r3) => r3.intersect(bounds));
      }
    }),
    distance_rate_after_random: random({
      filterEq(regions, rate, course, _) {
        const bounds = new Region(course.distance * rate / 100, course.distance);
        return regions.rmap((r3) => r3.intersect(bounds));
      }
    }),
    distance_type: immediate({
      filterEq(regions, distanceType, course, _) {
        CourseHelpers.assertIsDistanceType(distanceType);
        if (course.distanceType == distanceType) {
          return regions;
        } else {
          return new RegionList();
        }
      },
      filterNeq(regions, distanceType, course, _) {
        CourseHelpers.assertIsDistanceType(distanceType);
        if (course.distanceType != distanceType) {
          return regions;
        } else {
          return new RegionList();
        }
      }
    }),
    down_slope_random: random({
      filterEq(regions, one, course, _) {
        assert3(one == 1, "must be down_slope_random==1");
        const slopes = course.slopes.filter((s3) => s3.slope < 0).map((s3) => new Region(s3.start, s3.start + s3.length));
        return regions.rmap((r3) => slopes.map((s3) => r3.intersect(s3)));
      }
    }),
    grade: noopImmediate,
    // TODO pass race conditions to filters
    ground_condition: noopImmediate,
    // TODO pass race conditions to filters
    ground_type: immediate({
      filterEq(regions, surface, course, _) {
        CourseHelpers.assertIsSurface(surface);
        return course.surface == surface ? regions : new RegionList();
      }
    }),
    // TODO in order to properly simulate skills that depend on hp_per this condition should pass a dynamic condition on to the
    // race solver. This is a bit more long-term since that would require simulating stamina, and therefore recoveries, and honestly
    // would be kind of a pain in general, and probably impossible to do accurately due to things like 位置取り争い that depend on other
    // umas, as well as random factors like downhill accel mode.
    // The only skill likely severely affected by this is Akebono's unique.
    hp_per: noopImmediate,
    infront_near_lane_time: noopErlangRandom(3, 2),
    is_activate_other_skill_detail: noopImmediate,
    // TODO FIXME
    is_basis_distance: immediate({
      filterEq(regions, flag, course, _) {
        assert3(flag == 0 || flag == 1, "must be is_basis_distance==0 or is_basis_distance==1");
        return Math.max(course.distance % 400, 1) == flag ? regions : new RegionList();
      }
    }),
    is_badstart: noopImmediate,
    is_behind_in: noopImmediate,
    is_finalcorner: immediate({
      filterEq(regions, flag, course, _) {
        assert3(flag == 0 || flag == 1, "must be is_finalcorner==0 or is_finalcorner==1");
        assert3(CourseHelpers.isSortedByStart(course.corners), "course corners must be sorted by start");
        if (course.corners.length == 0) {
          return new RegionList();
        }
        const finalCornerStart = course.corners[course.corners.length - 1].start;
        const bounds = flag ? new Region(finalCornerStart, course.distance) : new Region(0, finalCornerStart);
        return regions.rmap((r3) => r3.intersect(bounds));
      }
    }),
    is_finalcorner_laterhalf: immediate({
      filterEq(regions, one, course, _) {
        assert3(one == 1, "must be is_finalcorner_laterhalf==1");
        assert3(CourseHelpers.isSortedByStart(course.corners), "course corners must be sorted by start");
        if (course.corners.length == 0) {
          return new RegionList();
        }
        const fc = course.corners[course.corners.length - 1];
        const bounds = new Region((fc.start + fc.start + fc.length) / 2, fc.start + fc.length);
        return regions.rmap((r3) => r3.intersect(bounds));
      }
    }),
    is_finalcorner_random: random({
      filterEq(regions, one, course, _) {
        assert3(one == 1, "must be is_finalcorner_random==1");
        assert3(CourseHelpers.isSortedByStart(course.corners), "course corners must be sorted by start");
        if (course.corners.length == 0) {
          return new RegionList();
        }
        const fc = course.corners[course.corners.length - 1];
        const bounds = new Region(fc.start, fc.start + fc.length);
        return regions.rmap((r3) => r3.intersect(bounds));
      }
    }),
    is_lastspurt: immediate({
      filterEq(regions, one, course, _) {
        assert3(one == 1, "must be is_lastspurt==1");
        const bounds = new Region(CourseHelpers.phaseStart(course.distance, 2), course.distance);
        return regions.rmap((r3) => r3.intersect(bounds));
      }
    }),
    is_last_straight: immediate({
      filterEq(regions, one, course, _) {
        assert3(one == 1, "must be is_last_straight_onetime==1");
        assert3(CourseHelpers.isSortedByStart(course.straights), "course straights must be sorted by start");
        const lastStraight = course.straights[course.straights.length - 1];
        return regions.rmap((r3) => r3.intersect(lastStraight));
      }
    }),
    is_last_straight_onetime: immediate({
      filterEq(regions, one, course, _) {
        assert3(one == 1, "must be is_last_straight_onetime==1");
        assert3(CourseHelpers.isSortedByStart(course.straights), "course straights must be sorted by start");
        const lastStraightStart = course.straights[course.straights.length - 1].start;
        const trigger = new Region(lastStraightStart, lastStraightStart + 10);
        return regions.rmap((r3) => r3.intersect(trigger));
      }
    }),
    is_move_lane: noopErlangRandom(5, 1),
    is_overtake: noopErlangRandom(1, 2),
    is_surrounded: noopErlangRandom(3, 2),
    lane_type: noopImmediate,
    lastspurt: noopImmediate,
    near_count: noopErlangRandom(3, 2),
    order: noopImmediate,
    order_rate: noopImmediate,
    order_rate_in20_continue: noopImmediate,
    order_rate_in40_continue: noopImmediate,
    order_rate_in80_continue: noopImmediate,
    order_rate_out20_continue: noopImmediate,
    order_rate_out40_continue: noopImmediate,
    order_rate_out50_continue: noopImmediate,
    order_rate_out70_continue: noopImmediate,
    overtake_target_no_order_up_time: noopErlangRandom(3, 2),
    overtake_target_time: noopErlangRandom(3, 2),
    phase: {
      samplePolicy: ImmediatePolicy,
      filterEq(regions, phase, course, _) {
        CourseHelpers.assertIsPhase(phase);
        const bounds = new Region(CourseHelpers.phaseStart(course.distance, phase), CourseHelpers.phaseEnd(course.distance, phase));
        return regions.rmap((r3) => r3.intersect(bounds));
      },
      filterNeq: notSupported,
      filterLt(regions, phase, course, _) {
        CourseHelpers.assertIsPhase(phase);
        assert3(phase > 0, "phase == 0");
        const bounds = new Region(0, CourseHelpers.phaseStart(course.distance, phase - 1));
        return regions.rmap((r3) => r3.intersect(bounds));
      },
      filterLte(regions, phase, course, _) {
        CourseHelpers.assertIsPhase(phase);
        const bounds = new Region(0, CourseHelpers.phaseStart(course.distance, phase));
        return regions.rmap((r3) => r3.intersect(bounds));
      },
      filterGt(regions, phase, course, _) {
        CourseHelpers.assertIsPhase(phase);
        assert3(phase < 3, "phase > 2");
        const bounds = new Region(CourseHelpers.phaseStart(course.distance, phase + 1), course.distance);
        return regions.rmap((r3) => r3.intersect(bounds));
      },
      filterGte(regions, phase, course, _) {
        CourseHelpers.assertIsPhase(phase);
        const bounds = new Region(CourseHelpers.phaseStart(course.distance, phase), course.distance);
        return regions.rmap((r3) => r3.intersect(bounds));
      }
    },
    phase_corner_random: random({
      filterEq(regions, phase, course, _) {
        CourseHelpers.assertIsPhase(phase);
        const phaseStart = CourseHelpers.phaseStart(course.distance, phase);
        const phaseEnd = CourseHelpers.phaseEnd(course.distance, phase);
        const corners = course.corners.filter((c3) => c3.start >= phaseStart && c3.start < phaseEnd || c3.start + c3.length >= phaseStart && c3.start + c3.length < phaseEnd).map((c3) => new Region(Math.max(c3.start, phaseStart), Math.min(c3.start + c3.length, phaseEnd)));
        return regions.rmap((r3) => corners.map((c3) => r3.intersect(c3)));
      }
    }),
    phase_firsthalf_random: random({
      filterEq(regions, phase, course, _) {
        CourseHelpers.assertIsPhase(phase);
        const start = CourseHelpers.phaseStart(course.distance, phase);
        const end = CourseHelpers.phaseEnd(course.distance, phase);
        const bounds = new Region(start, (start + end) / 2);
        return regions.rmap((r3) => r3.intersect(bounds));
      }
    }),
    phase_firstquarter_random: random({
      filterEq(regions, phase, course, _) {
        CourseHelpers.assertIsPhase(phase);
        const start = CourseHelpers.phaseStart(course.distance, phase);
        const end = CourseHelpers.phaseEnd(course.distance, phase);
        const bounds = new Region(start, (start + end) / 4);
        return regions.rmap((r3) => r3.intersect(bounds));
      }
    }),
    phase_laterhalf_random: random({
      filterEq(regions, phase, course, _) {
        CourseHelpers.assertIsPhase(phase);
        const start = CourseHelpers.phaseStart(course.distance, phase);
        const end = CourseHelpers.phaseEnd(course.distance, phase);
        const bounds = new Region((start + end) / 2, end);
        return regions.rmap((r3) => r3.intersect(bounds));
      }
    }),
    phase_random: random({
      filterEq(regions, phase, course, _) {
        CourseHelpers.assertIsPhase(phase);
        const bounds = new Region(CourseHelpers.phaseStart(course.distance, phase), CourseHelpers.phaseEnd(course.distance, phase));
        return regions.rmap((r3) => r3.intersect(bounds));
      }
    }),
    popularity: noopImmediate,
    post_number: noopImmediate,
    remain_distance: immediate({
      filterLte(regions, remain, course, _) {
        const bounds = new Region(course.distance - remain, course.distance);
        return regions.rmap((r3) => r3.intersect(bounds));
      },
      filterGte(regions, remain, course, _) {
        const bounds = new Region(0, course.distance - remain);
        return regions.rmap((r3) => r3.intersect(bounds));
      }
    }),
    rotation: immediate({
      filterEq(regions, rotation, course, _) {
        CourseHelpers.assertIsOrientation(rotation);
        return course.turn == rotation ? regions : new RegionList();
      }
    }),
    running_style: immediate({
      filterEq(regions, strategy, _, horse2) {
        StrategyHelpers.assertIsStrategy(strategy);
        if (StrategyHelpers.strategyMatches(horse2.strategy, strategy)) {
          return regions;
        } else {
          return new RegionList();
        }
      }
    }),
    running_style_count_same: noopImmediate,
    running_style_count_same_rate: noopImmediate,
    running_style_equal_popularity_one: noopImmediate,
    same_skill_horse_count: noopImmediate,
    season: noopImmediate,
    // TODO pass race conditions to filters
    slope: immediate({
      filterEq(regions, slopeType, course, _) {
        assert3(slopeType == 0 || slopeType == 1 || slopeType == 2, "slopeType");
        assert3(CourseHelpers.isSortedByStart(course.slopes), "course slopes must be sorted by slope start");
        let lastEnd = 0;
        const slopes = course.slopes.filter((s3) => slopeType != 2 && s3.slope > 0 || slopeType != 1 && s3.slope < 0);
        const slopeR = slopeType == 0 ? slopes.map((s3) => {
          const r3 = new Region(lastEnd, s3.start);
          lastEnd = s3.start + s3.length;
          return r3;
        }) : slopes.map((s3) => new Region(s3.start, s3.start + s3.length));
        if (slopeType == 0 && lastEnd != course.distance) {
          slopeR.push(new Region(lastEnd, course.distance));
        }
        return regions.rmap((r3) => slopeR.map((s3) => r3.intersect(s3)));
      }
    }),
    straight_front_type: immediate({
      filterEq(regions, frontType, course, _) {
        assert3(frontType == 1 || frontType == 2, "frontType");
        const straights = course.straights.filter((s3) => s3.frontType == frontType);
        return regions.rmap((r3) => straights.map((s3) => r3.intersect(s3)));
      }
    }),
    straight_random: {
      samplePolicy: StraightRandomPolicy,
      filterEq(regions, one, course, _) {
        assert3(one == 1, "must be straight_random==1");
        return regions.rmap((r3) => course.straights.map((s3) => r3.intersect(s3)));
      },
      filterNeq: notSupported,
      filterLt: notSupported,
      filterLte: notSupported,
      filterGt: notSupported,
      filterGte: notSupported
    },
    temptation_count: noopImmediate,
    track_id: immediate({
      filterEq(regions, trackId, course, _) {
        return trackId == course.raceTrackId ? regions : new RegionList();
      }
    }),
    up_slope_random: random({
      filterEq(regions, one, course, _) {
        assert3(one == 1, "must be up_slope_random==1");
        const slopes = course.slopes.filter((s3) => s3.slope > 0).map((s3) => new Region(s3.start, s3.start + s3.length));
        return regions.rmap((r3) => slopes.map((s3) => r3.intersect(s3)));
      }
    }),
    weather: noopImmediate
    // TODO pass race conditions to filters
  });

  // ../../skilltool/ConditionParser.ts
  var ParseError = class extends Error {
    constructor(msg) {
      super(msg);
    }
  };
  function isId(c3) {
    return "a".charCodeAt(0) <= c3 && c3 <= "z".charCodeAt(0) || "0".charCodeAt(0) <= c3 && c3 <= "9".charCodeAt(0) || c3 == "_".charCodeAt(0);
  }
  function* tokenize(s3) {
    var i4 = 0;
    while (i4 < s3.length) {
      var c3 = s3.charCodeAt(i4);
      if ("0".charCodeAt(0) <= c3 && c3 <= "9".charCodeAt(0)) {
        var n3 = 0;
        while ("0".charCodeAt(0) <= c3 && c3 <= "9".charCodeAt(0)) {
          n3 *= 10;
          n3 += c3 - "0".charCodeAt(0);
          c3 = s3.charCodeAt(++i4);
        }
        yield new IntValue(n3);
      } else if (isId(c3)) {
        var idstart = i4;
        while (isId(c3)) {
          c3 = s3.charCodeAt(++i4);
        }
        yield new Identifier(s3.slice(idstart, i4));
      } else
        switch (s3[i4]) {
          case "=":
            if (s3[++i4] != "=")
              throw new ParseError("expected =");
            ++i4;
            yield OperatorEq;
            break;
          case "!":
            if (s3[++i4] != "=")
              throw new ParseError("expected =");
            ++i4;
            yield OperatorNeq;
            break;
          case "<":
            if (s3[++i4] == "=") {
              ++i4;
              yield OperatorLte;
            } else {
              yield OperatorLt;
            }
            break;
          case ">":
            if (s3[++i4] == "=") {
              ++i4;
              yield OperatorGte;
            } else {
              yield OperatorGt;
            }
            break;
          case "@":
            yield OperatorOr;
            ++i4;
            break;
          case "&":
            yield OperatorAnd;
            ++i4;
            break;
          default:
            throw new ParseError("invalid character");
        }
    }
    return Eof;
  }
  function parseAny(tokens, options = {}) {
    const opts = Object.assign({ conditions: Conditions }, options);
    const state = { current: Eof, next: tokens.next().value, tokens, conditions: opts.conditions };
    return expression(state, 0);
  }
  function parse(tokens, options = {}) {
    const node = parseAny(tokens, options);
    if (node.type != 2 /* Op */) {
      throw new ParseError("expected comparison or operator");
    }
    return node.op;
  }
  function expression(state, rbp) {
    state.current = state.next;
    state.next = state.tokens.next().value;
    var left = state.current.nud(state);
    while (rbp < state.next.lbp) {
      state.current = state.next;
      state.next = state.tokens.next().value;
      left = state.current.led(state, left);
    }
    return left;
  }
  var Eof = Object.freeze({
    lbp: 0,
    led: (state, left) => {
      throw new ParseError("unexpected eof");
    },
    nud: (state) => {
      throw new ParseError("unexpected eof");
    }
  });
  var CmpOp = class {
    constructor(lbp, opclass) {
      this.lbp = lbp;
      this.opclass = opclass;
    }
    led(state, left) {
      if (left.type != 1 /* Cond */)
        throw new ParseError("expected condition on left hand side of comparison");
      const right = expression(state, this.lbp);
      if (right.type != 0 /* Int */)
        throw new ParseError("expected number on right hand side of comparison");
      return { type: 2 /* Op */, op: new this.opclass(left.cond, right.value) };
    }
    nud(state) {
      throw new ParseError("expected expression");
    }
  };
  var LogicalOp = class {
    constructor(lbp, opclass) {
      this.lbp = lbp;
      this.opclass = opclass;
    }
    led(state, left) {
      if (left.type != 2 /* Op */)
        throw new ParseError("expected comparison on left hand side of operator");
      const right = expression(state, this.lbp);
      if (right.type != 2 /* Op */)
        throw new ParseError("expected comparison on right hand side of operator");
      return { type: 2 /* Op */, op: new this.opclass(left.op, right.op) };
    }
    nud(state) {
      throw new ParseError("expected expression");
    }
  };
  var OperatorEq = Object.freeze(new CmpOp(30, EqOperator));
  var OperatorNeq = Object.freeze(new CmpOp(30, NeqOperator));
  var OperatorLt = Object.freeze(new CmpOp(30, LtOperator));
  var OperatorLte = Object.freeze(new CmpOp(30, LteOperator));
  var OperatorGt = Object.freeze(new CmpOp(30, GtOperator));
  var OperatorGte = Object.freeze(new CmpOp(30, GteOperator));
  var OperatorAnd = Object.freeze(new LogicalOp(20, AndOperator));
  var OperatorOr = Object.freeze(new LogicalOp(10, OrOperator));
  var IntValue = class {
    constructor(value) {
      this.lbp = 0;
      this.value = value;
    }
    led(state, left) {
      throw new ParseError("unexpected integer literal");
    }
    nud(state) {
      return { type: 0 /* Int */, value: this.value };
    }
  };
  var Identifier = class {
    constructor(value) {
      this.lbp = 0;
      this.value = value;
    }
    led(state, left) {
      throw new ParseError("unexpected identifier");
    }
    nud(state) {
      return { type: 1 /* Cond */, cond: state.conditions[this.value] };
    }
  };

  // ../../skilltool/tools/ConditionMatcher.ts
  var assert4 = __require("assert").strict;
  function isCmpOperator(tree) {
    return "condition" in tree;
  }
  function assertIsCmpOperator(tree) {
    assert4(isCmpOperator(tree));
  }
  function assertIsLogicalOp(tree) {
    assert4("left" in tree && "right" in tree);
  }
  function flatten(node, conds) {
    assertIsCmpOperator(node.right);
    conds.push(node.right);
    if (node.left instanceof AndOperator) {
      return flatten(node.left, conds);
    }
    assertIsCmpOperator(node.left);
    conds.push(node.left);
    return conds;
  }
  function condMatcher(cond, node) {
    if (isCmpOperator(node)) {
      if ("argument" in cond) {
        return node.condition === cond.condition && node.argument == cond.argument && Object.getPrototypeOf(cond) === Object.getPrototypeOf(node);
      } else {
        return node.condition === cond;
      }
    }
    assertIsLogicalOp(node);
    return condMatcher(cond, node.left) || condMatcher(cond, node.right);
  }
  function andMatcher(conds, node) {
    if (node instanceof OrOperator) {
      const conds2 = conds.slice();
      return andMatcher(conds, node.left) || andMatcher(conds2, node.right);
    } else if (node instanceof AndOperator) {
      assertIsCmpOperator(node.right);
      const idx = conds.findIndex((c3) => condMatcher(c3, node.right));
      if (idx != -1) {
        conds.splice(idx, 1);
      }
      return conds.length == 0 || andMatcher(conds, node.left);
    } else {
      assertIsCmpOperator(node);
      return conds.length == 1 && condMatcher(conds[0], node);
    }
  }
  function treeMatch(match, tree) {
    switch (match.type) {
      case 2 /* Op */:
        if (match.op instanceof AndOperator) {
          return andMatcher(flatten(match.op, []), tree);
        } else if (isCmpOperator(match.op)) {
          return condMatcher(match.op, tree);
        } else {
          throw new Error("doesn't support @ in search conditions");
        }
      case 1 /* Cond */:
        return condMatcher(match.cond, tree);
        break;
      case 0 /* Int */:
        throw new Error("doesn't support sole integer as search condition");
    }
  }
  var mockSamplePolicy = Object.freeze({
    sample(_0, _1) {
      assert4(false);
    },
    reconcile(_) {
      return this;
    },
    reconcileAsap(_) {
      return this;
    },
    reconcileLogNormalRandom(_) {
      return this;
    },
    reconcileRandom(_) {
      return this;
    },
    reconcileStraightRandom(_) {
      return this;
    },
    reconcileAllCornerRandom(_) {
      return this;
    }
  });
  var mockConditions = new Proxy({}, {
    get(cache, prop) {
      if (cache.hasOwnProperty(prop)) {
        return cache[prop];
      }
      return cache[prop] = { name: prop, samplePolicy: mockSamplePolicy };
    }
  });

  // ../../skilltool/RaceSolver.ts
  var assert5 = __require("assert").strict;
  var Speed;
  ((Speed2) => {
    Speed2.StrategyPhaseCoefficient = Object.freeze([
      [],
      // strategies start numbered at 1
      [1, 0.98, 0.962],
      [0.978, 0.991, 0.975],
      [0.938, 0.998, 0.994],
      [0.931, 1, 1],
      [1.063, 0.962, 0.95]
    ].map((a4) => Object.freeze(a4)));
    Speed2.DistanceProficiencyModifier = Object.freeze([1.05, 1, 0.9, 0.8, 0.6, 0.4, 0.2, 0.1]);
  })(Speed || (Speed = {}));
  var Acceleration;
  ((Acceleration2) => {
    Acceleration2.StrategyPhaseCoefficient = Object.freeze([
      [],
      [1, 1, 0.996],
      [0.985, 1, 0.996],
      [0.975, 1, 1],
      [0.945, 1, 0.997],
      [1.17, 0.94, 0.956]
    ].map((a4) => Object.freeze(a4)));
    Acceleration2.GroundTypeProficiencyModifier = Object.freeze([1.05, 1, 0.9, 0.8, 0.7, 0.5, 0.3, 0.1]);
    Acceleration2.DistanceProficiencyModifier = Object.freeze([1, 1, 1, 1, 1, 0.6, 0.5, 0.4]);
  })(Acceleration || (Acceleration = {}));
  var PositionKeep;
  ((PositionKeep2) => {
    PositionKeep2.BaseMinimumThreshold = Object.freeze([0, 0, 3, 6.5, 7.5]);
    PositionKeep2.BaseMaximumThreshold = Object.freeze([0, 0, 5, 7, 8]);
    function courseFactor(distance) {
      return 8e-4 * (distance - 1e3) + 1;
    }
    PositionKeep2.courseFactor = courseFactor;
    function minThreshold(strategy, distance) {
      return PositionKeep2.BaseMinimumThreshold[strategy] * (strategy == 2 /* Senkou */ ? 1 : courseFactor(distance));
    }
    PositionKeep2.minThreshold = minThreshold;
    function maxThreshold(strategy, distance) {
      return PositionKeep2.BaseMaximumThreshold[strategy] * courseFactor(distance);
    }
    PositionKeep2.maxThreshold = maxThreshold;
  })(PositionKeep || (PositionKeep = {}));
  var SkillType = /* @__PURE__ */ ((SkillType2) => {
    SkillType2[SkillType2["SpeedUp"] = 1] = "SpeedUp";
    SkillType2[SkillType2["StaminaUp"] = 2] = "StaminaUp";
    SkillType2[SkillType2["PowerUp"] = 3] = "PowerUp";
    SkillType2[SkillType2["GutsUp"] = 4] = "GutsUp";
    SkillType2[SkillType2["WisdomUp"] = 5] = "WisdomUp";
    SkillType2[SkillType2["Recovery"] = 9] = "Recovery";
    SkillType2[SkillType2["CurrentSpeed"] = 21] = "CurrentSpeed";
    SkillType2[SkillType2["CurrentSpeedWithNaturalDeceleration"] = 22] = "CurrentSpeedWithNaturalDeceleration";
    SkillType2[SkillType2["TargetSpeed"] = 27] = "TargetSpeed";
    SkillType2[SkillType2["Accel"] = 31] = "Accel";
    SkillType2[SkillType2["ActivateRandomGold"] = 37] = "ActivateRandomGold";
    return SkillType2;
  })(SkillType || {});

  // ../../skilltool/data/skill_data.json
  var skill_data_default = { "100011": { alternatives: [{ baseDuration: 5e4, condition: "phase>=2&order>=1&order_rate<=50&change_order_onetime<0", effects: [{ modifier: 3500, type: 22 }, { modifier: 1e3, type: 31 }], precondition: "" }], rarity: 5 }, "100021": { alternatives: [{ baseDuration: 5e4, condition: "distance_rate>=50&order==1&bashin_diff_behind>=1", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 5 }, "100031": { alternatives: [{ baseDuration: 5e4, condition: "is_last_straight==1", effects: [{ modifier: 4500, type: 27 }], precondition: "phase>=2&order<=3&bashin_diff_infront<=1&is_overtake==1" }], rarity: 5 }, "100041": { alternatives: [{ baseDuration: 4e4, condition: "is_finalcorner==1&order<=5&order_rate<=50", effects: [{ modifier: 4e3, type: 31 }], precondition: "" }], rarity: 5 }, "100051": { alternatives: [{ baseDuration: 5e4, condition: "remain_distance<=300", effects: [{ modifier: 4500, type: 27 }], precondition: "phase>=2&order_rate<=40&behind_near_lane_time_set1>=1" }], rarity: 5 }, "100061": { alternatives: [{ baseDuration: 5e4, condition: "order>=2&order<=5&order_rate<=50&remain_distance<=201&remain_distance>=199", effects: [{ modifier: 4500, type: 27 }], precondition: "" }], rarity: 5 }, "100071": { alternatives: [{ baseDuration: 6e4, condition: "distance_rate>=50&distance_rate<=60&order_rate>50", effects: [{ modifier: 2500, type: 27 }], precondition: "" }], rarity: 4 }, "100081": { alternatives: [{ baseDuration: 5e4, condition: "order>=3&order_rate<=50&remain_distance<=200&bashin_diff_infront<=1@order>=3&order_rate<=50&remain_distance<=200&bashin_diff_behind<=1", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 4 }, "100091": { alternatives: [{ baseDuration: 5e4, condition: "distance_rate>=50&order==1&bashin_diff_behind<=1@distance_rate>=50&order==2&is_overtake==1", effects: [{ modifier: 2500, type: 27 }, { modifier: 3e3, type: 31 }], precondition: "" }], rarity: 4 }, "100101": { alternatives: [{ baseDuration: 5e4, condition: "is_finalcorner_laterhalf==1&corner!=0&order>=3&order_rate<=40", effects: [{ modifier: 4e3, type: 31 }], precondition: "" }], rarity: 5 }, "100101111": { alternatives: [{ baseDuration: 3e4, condition: "running_style==2&phase_random==1", effects: [{ modifier: 550, type: 9 }, { modifier: 1500, type: 27 }], precondition: "" }], rarity: 6 }, "100101211": { alternatives: [{ baseDuration: 24e3, condition: "is_lastspurt==1&phase_firsthalf_random==3", effects: [{ modifier: 4500, type: 27 }], precondition: "" }], rarity: 6 }, "100102111": { alternatives: [{ baseDuration: 4e4, condition: "running_style==3&phase_random==1&order_rate>=40", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 6 }, "100102211": { alternatives: [{ baseDuration: 4e4, condition: "phase==1&change_order_onetime<0", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 6 }, "100103111": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==4&phase==2&change_order_onetime<0", effects: [{ modifier: 3500, type: 27 }, { modifier: 1e3, type: 31 }, { modifier: 150, type: 9 }], precondition: "" }], rarity: 6 }, "100103211": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==4&is_finalcorner_random==1", effects: [{ modifier: 4500, type: 27 }], precondition: "" }], rarity: 6 }, "100111": { alternatives: [{ baseDuration: 5e4, condition: "is_last_straight==1&change_order_onetime<0&order>=3", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 4 }, "100121": { alternatives: [{ baseDuration: 5e4, condition: "is_last_straight==1", effects: [{ modifier: 3500, type: 27 }], precondition: "is_finalcorner==1&is_behind_in==1&change_order_onetime<0&order_rate>=40" }], rarity: 5 }, "100131": { alternatives: [{ baseDuration: 5e4, condition: "is_finalcorner==1&corner!=0&distance_diff_rate<=30&distance_type==4&lastspurt==2", effects: [{ modifier: 4500, type: 27 }], precondition: "" }, { baseDuration: 5e4, condition: "is_finalcorner==1&corner!=0&distance_diff_rate<=30", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 5 }, "100141": { alternatives: [{ baseDuration: 5e4, condition: "is_last_straight==1&hp_per>=30&order<=2", effects: [{ modifier: 2500, type: 27 }, { modifier: 3e3, type: 31 }], precondition: "" }], rarity: 4 }, "100151": { alternatives: [{ baseDuration: 5e4, condition: "is_finalcorner==1&bashin_diff_behind<=1&order<=4@is_finalcorner==1&bashin_diff_infront<=1&order<=4", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 5 }, "100161": { alternatives: [{ baseDuration: 5e4, condition: "is_finalcorner==1&order>=2&order_rate<=75&is_behind_in==1&change_order_onetime<0", effects: [{ modifier: 4500, type: 27 }], precondition: "phase==1&blocked_side_continuetime>=2" }, { baseDuration: 5e4, condition: "is_finalcorner==1&order>=2&order_rate<=75&is_behind_in==1&change_order_onetime<0", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 5 }, "100171": { alternatives: [{ baseDuration: 5e4, condition: "is_last_straight==1&change_order_up_end_after>=3", effects: [{ modifier: 4500, type: 27 }], precondition: "" }], rarity: 5 }, "100181": { alternatives: [{ baseDuration: 5e4, condition: "is_finalcorner==1&corner!=0&order>=3&change_order_onetime<0", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 4 }, "100191": { alternatives: [{ baseDuration: 5e4, condition: "change_order_up_end_after>=2", effects: [{ modifier: 3500, type: 27 }, { modifier: 350, type: 28 }], precondition: "" }], rarity: 5 }, "100201": { alternatives: [{ baseDuration: 4e4, condition: "phase>=2&corner!=0&order==1", effects: [{ modifier: 4e3, type: 31 }], precondition: "" }], rarity: 5 }, "100201111": { alternatives: [{ baseDuration: 3e4, condition: "always==1", effects: [{ modifier: 4e3, type: 10 }, { modifier: 2e3, type: 31 }], precondition: "" }], rarity: 6 }, "100201211": { alternatives: [{ baseDuration: 3e4, condition: "running_style==1&is_finalcorner_random==1&order==1", effects: [{ modifier: 4e3, type: 31 }, { modifier: 1500, type: 22 }], precondition: "" }], rarity: 6 }, "100202111": { alternatives: [{ baseDuration: 3e4, condition: "running_style==1&phase_random==1&order_rate<=50", effects: [{ modifier: 4500, type: 27 }], precondition: "" }], rarity: 6 }, "100202211": { alternatives: [{ baseDuration: 15e3, condition: "distance_type==3&phase==0", effects: [{ modifier: 5e3, type: 31 }], precondition: "" }], rarity: 6 }, "100211": { alternatives: [{ baseDuration: 5e4, condition: "distance_rate>=50&corner==0&order_rate>=70&order_rate<=75&is_overtake==1@distance_rate>=50&corner==0&order_rate<=30&order_rate>=20", effects: [{ modifier: 3500, type: 27 }, { modifier: 1e3, type: 31 }], precondition: "" }], rarity: 5 }, "100221": { alternatives: [{ baseDuration: 5e4, condition: "distance_rate>=50&order>=2&order_rate<=40&blocked_side_continuetime>=2", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 5 }, "100231": { alternatives: [{ baseDuration: 5e4, condition: "phase>=2&is_finalcorner==1&order<=4&temptation_count==0", effects: [{ modifier: 4500, type: 27 }], precondition: "" }, { baseDuration: 5e4, condition: "phase>=2&is_finalcorner==1&order<=4", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 5 }, "100241": { alternatives: [{ baseDuration: 5e4, condition: "is_finalcorner==1&blocked_side_continuetime>=2&order<=3", effects: [{ modifier: 2500, type: 27 }, { modifier: 3e3, type: 31 }], precondition: "" }], rarity: 4 }, "100251": { alternatives: [{ baseDuration: 6e4, condition: "distance_rate>=50&order_rate>=40&order_rate<=70", effects: [{ modifier: 2500, type: 27 }, { modifier: -500, type: 21 }], precondition: "" }], rarity: 5 }, "100261": { alternatives: [{ baseDuration: 5e4, condition: "is_badstart==0&order<=3&is_last_straight==1&order_rate_in20_continue==1", effects: [{ modifier: 4500, type: 27 }], precondition: "" }, { baseDuration: 5e4, condition: "is_badstart==0&order<=3&is_last_straight==1", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 5 }, "100271": { alternatives: [{ baseDuration: 4e4, condition: "phase>=2&corner!=0&order_rate>=65&order_rate<=70", effects: [{ modifier: 4e3, type: 31 }], precondition: "" }], rarity: 4 }, "100281": { alternatives: [{ baseDuration: 5e4, condition: "distance_rate>=45&distance_rate<=60&order>=3&order_rate<=50&hp_per<=70", effects: [{ modifier: 2500, type: 27 }, { modifier: 3e3, type: 31 }], precondition: "" }], rarity: 5 }, "100291": { alternatives: [{ baseDuration: 5e4, condition: "distance_diff_top<=5&remain_distance<=300&order_rate<=40", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 5 }, "100301": { alternatives: [{ baseDuration: 5e4, condition: "is_last_straight==1", effects: [{ modifier: 3500, type: 27 }], precondition: "phase>=2&order<=4&change_order_onetime<0" }], rarity: 5 }, "100301111": { alternatives: [{ baseDuration: 3e4, condition: "running_style==2&is_move_lane==1@running_style==2&is_move_lane==2", effects: [{ modifier: 3e3, type: 31 }, { modifier: 2500, type: 27 }], precondition: "" }], rarity: 6 }, "100301211": { alternatives: [{ baseDuration: 4e4, condition: "distance_type==3&phase_random==1", effects: [{ modifier: 350, type: 28 }, { modifier: 3e3, type: 31 }, { modifier: 2500, type: 27 }], precondition: "" }], rarity: 6 }, "100302111": { alternatives: [{ baseDuration: 3e4, condition: "running_style==2&phase_random==1&order_rate<=50", effects: [{ modifier: 550, type: 9 }, { modifier: 1500, type: 27 }], precondition: "" }], rarity: 6 }, "100302211": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==3&is_move_lane==1&accumulatetime>=10@distance_type==3&is_move_lane==2&accumulatetime>=10", effects: [{ modifier: 550, type: 9 }, { modifier: 1500, type: 27 }], precondition: "" }], rarity: 6 }, "100303111": { alternatives: [{ baseDuration: 18e3, condition: "running_style==2&course_distance>=2400&course_distance<=2500&phase_firstquarter_random==2&order_rate<=50&base_stamina>=1000", effects: [{ modifier: 5e3, type: 31 }], precondition: "" }, { baseDuration: 18e3, condition: "running_style==2&course_distance<2400&phase_firsthalf_random==2&order_rate<=50@running_style==2&course_distance>2500&phase_firsthalf_random==2&order_rate<=50@running_style==2&course_distance>=2400&course_distance<=2500&phase_firsthalf_random==2&order_rate<=50&base_stamina<1000", effects: [{ modifier: 4e3, type: 31 }], precondition: "" }], rarity: 6 }, "100303211": { alternatives: [{ baseDuration: 3e4, condition: "running_style==2&order_rate<=50&phase_laterhalf_random==1", effects: [{ modifier: 350, type: 9 }, { modifier: 2500, type: 27 }], precondition: "" }], rarity: 6 }, "100311": { alternatives: [{ baseDuration: 5e4, condition: "remain_distance<=299&remain_distance>=295&order<=2&slope==0@remain_distance<=299&remain_distance>=295&order<=2&slope==2", effects: [{ modifier: 4500, type: 27 }], precondition: "remain_distance<=305&remain_distance>=300&slope==1" }, { baseDuration: 5e4, condition: "remain_distance<=299&remain_distance>=295&order<=2", effects: [{ modifier: 2500, type: 27 }], precondition: "" }], rarity: 5 }, "100321": { alternatives: [{ baseDuration: 4e4, condition: "distance_rate>=50&corner!=0&order>=3&order_rate<=40", effects: [{ modifier: 550, type: 9 }, { modifier: 2500, type: 27 }], precondition: "" }], rarity: 4 }, "100331": { alternatives: [{ baseDuration: 5e4, condition: "is_last_straight==1&distance_diff_top>=5&order_rate<80", effects: [{ modifier: 3500, type: 27 }], precondition: "" }, { baseDuration: 5e4, condition: "is_last_straight==1&distance_diff_top>=5&order_rate>=80", effects: [{ modifier: 4500, type: 27 }], precondition: "" }], rarity: 5 }, "100341": { alternatives: [{ baseDuration: 5e4, condition: "compete_fight_count>0", effects: [{ modifier: 4500, type: 27 }], precondition: "distance_rate>=50&order_rate_out40_continue==1" }], rarity: 5 }, "100351": { alternatives: [{ baseDuration: 5e4, condition: "is_last_straight==1&order<=5", effects: [{ modifier: 3500, type: 27 }], precondition: "is_finalcorner==1&blocked_side_continuetime>=2" }], rarity: 4 }, "100361": { alternatives: [{ baseDuration: 5e4, condition: "is_last_straight==1", effects: [{ modifier: 3500, type: 27 }, { modifier: 350, type: 28 }], precondition: "is_finalcorner==1&order_rate>=40&order_rate<=75&lane_type==0" }], rarity: 5 }, "100371": { alternatives: [{ baseDuration: 5e4, condition: "temptation_count==0&order>=3&is_last_straight==1&order_rate_in80_continue==1&order_rate_out40_continue==1", effects: [{ modifier: 4500, type: 27 }], precondition: "" }, { baseDuration: 5e4, condition: "temptation_count==0&order>=3&is_last_straight==1", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 5 }, "100381": { alternatives: [{ baseDuration: 5e4, condition: "distance_rate>=50&distance_rate<=65&order>=2&order_rate<=40&change_order_onetime<0", effects: [{ modifier: 2500, type: 27 }, { modifier: 3e3, type: 31 }], precondition: "" }], rarity: 5 }, "100391": { alternatives: [{ baseDuration: 5e4, condition: "is_last_straight==1&blocked_side_continuetime>=2", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 5 }, "100401": { alternatives: [{ baseDuration: 6e4, condition: "distance_rate>=50&order_rate>=40&order_rate<=70&is_overtake==1", effects: [{ modifier: 3e3, type: 31 }], precondition: "" }], rarity: 5 }, "100401111": { alternatives: [{ baseDuration: 24e3, condition: "distance_type==2&phase_random==1&order_rate<=50", effects: [{ modifier: 4500, type: 27 }], precondition: "" }], rarity: 6 }, "100401211": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==2&distance_rate>=50&order==1", effects: [{ modifier: 4500, type: 27 }], precondition: "" }], rarity: 6 }, "100402111": { alternatives: [{ baseDuration: 0, condition: "running_style==1&slope==1&accumulatetime>=10", effects: [{ modifier: 750, type: 9 }], precondition: "" }], rarity: 6 }, "100402211": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==2&phase_laterhalf_random==0&order_rate<=50", effects: [{ modifier: 4500, type: 27 }], precondition: "" }], rarity: 6 }, "100411": { alternatives: [{ baseDuration: 5e4, condition: "distance_rate>=50&order<=3&blocked_side_continuetime>=2", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 4 }, "100421": { alternatives: [{ baseDuration: 5e4, condition: "remain_distance<=201&remain_distance>=199&distance_diff_top<=5&order>=2", effects: [{ modifier: 4500, type: 27 }], precondition: "" }, { baseDuration: 5e4, condition: "remain_distance<=201&remain_distance>=199&distance_diff_top<=10&order>=2", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 5 }, "100431": { alternatives: [{ baseDuration: 5e4, condition: "compete_fight_count>0&ground_type==2", effects: [{ modifier: 2500, type: 27 }, { modifier: 4e3, type: 31 }], precondition: "" }, { baseDuration: 5e4, condition: "compete_fight_count>0", effects: [{ modifier: 2500, type: 27 }], precondition: "" }], rarity: 5 }, "100441": { alternatives: [{ baseDuration: 6e4, condition: "remain_distance<=300", effects: [{ modifier: 3500, type: 27 }], precondition: "order_rate_out50_continue==1&temptation_count==0&is_finalcorner==1" }], rarity: 5 }, "100451": { alternatives: [{ baseDuration: 0, condition: "phase_random==1&order>=2&order_rate<=40", effects: [{ modifier: 750, type: 9 }], precondition: "" }], rarity: 4 }, "100461": { alternatives: [{ baseDuration: 5e4, condition: "phase==1&corner==0&order<=2&bashin_diff_behind<=1", effects: [{ modifier: 2500, type: 27 }, { modifier: 3e3, type: 31 }], precondition: "" }], rarity: 5 }, "100471": { alternatives: [{ baseDuration: 5e4, condition: "phase>=2&remain_distance<=401&remain_distance>=399&order_rate<=40&grade==100&popularity<=3", effects: [{ modifier: 4500, type: 27 }], precondition: "" }, { baseDuration: 5e4, condition: "phase>=2&remain_distance<=401&remain_distance>=399&order_rate<=40", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 5 }, "100481": { alternatives: [{ baseDuration: 5e4, condition: "is_last_straight==1&order_rate<=40&overtake_target_time>=1@is_last_straight==1&order_rate<=40&is_overtake==1", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 5 }, "100491": { alternatives: [{ baseDuration: 5e4, condition: "remain_distance<=400&order_rate>=30&order_rate<=50&popularity>=4", effects: [{ modifier: 4500, type: 27 }], precondition: "is_finalcorner==1&is_overtake==1" }, { baseDuration: 5e4, condition: "remain_distance<=400&order_rate>=30&order_rate<=50&popularity<4", effects: [{ modifier: 3500, type: 27 }], precondition: "is_finalcorner==1&is_overtake==1" }], rarity: 5 }, "100501": { alternatives: [{ baseDuration: 5e4, condition: "is_finalcorner==1&order_rate>=40&order_rate<=75&is_overtake==1", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 5 }, "100501111": { alternatives: [{ baseDuration: 24e3, condition: "distance_type==2&is_overtake==1&accumulatetime>=5", effects: [{ modifier: 4500, type: 27 }], precondition: "" }], rarity: 6 }, "100501211": { alternatives: [{ baseDuration: 3e4, condition: "running_style==2&phase_random==1&order_rate<=50", effects: [{ modifier: 550, type: 9 }, { modifier: 1500, type: 27 }], precondition: "" }], rarity: 6 }, "100502111": { alternatives: [{ baseDuration: 3e4, condition: "phase==1&order_rate<=50&temptation_opponent_count_behind>=1", effects: [{ modifier: -300, type: 9 }, { modifier: 3500, type: 27 }], precondition: "" }], rarity: 6 }, "100502211": { alternatives: [{ baseDuration: 18e3, condition: "running_style==2&is_finalcorner_random==1&order_rate<=50", effects: [{ modifier: 4500, type: 27 }], precondition: "" }], rarity: 6 }, "100511": { alternatives: [{ baseDuration: 4e4, condition: "phase>=2&is_finalcorner_laterhalf==1&order>=3&order_rate<=40@phase>=2&is_finalcorner==1&corner==0&order>=3&order_rate<=40", effects: [{ modifier: 4e3, type: 31 }], precondition: "phase==1&blocked_side_continuetime>=2&corner!=0" }], rarity: 5 }, "100521": { alternatives: [{ baseDuration: 0, condition: "is_finalcorner==1&corner!=0&order_rate>50&near_count>=1", effects: [{ modifier: 550, type: 9 }], precondition: "" }], rarity: 4 }, "100531": { alternatives: [{ baseDuration: 2e4, condition: "phase>=2&order_rate>=50&is_finalcorner==1&bashin_diff_infront<=1", effects: [{ modifier: 1e3, type: 31 }, { modifier: 1e3, type: 31 }], precondition: "" }], rarity: 5 }, "100551": { alternatives: [{ baseDuration: 5e4, condition: "distance_rate<=50&distance_rate>=40&order_rate<=80&order_rate>=50&near_count>=1&visiblehorse>=4", effects: [{ modifier: 4e3, type: 27 }], precondition: "" }, { baseDuration: 5e4, condition: "distance_rate<=50&distance_rate>=40&order_rate<=80&order_rate>=50&near_count>=1", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 5 }, "100561": { alternatives: [{ baseDuration: 5e4, condition: "phase>=2&order>=3&blocked_front==1", effects: [{ modifier: 3500, type: 27 }, { modifier: 1e3, type: 31 }], precondition: "" }], rarity: 4 }, "100571": { alternatives: [{ baseDuration: 6e4, condition: "distance_type==3&phase_laterhalf_random==1&order_rate>50@distance_type==4&phase_laterhalf_random==1&order_rate>50", effects: [{ modifier: 2500, type: 27 }], precondition: "" }, { baseDuration: 6e4, condition: "distance_type==1&phase_laterhalf_random==1&order_rate>50@distance_type==2&phase_laterhalf_random==1&order_rate>50", effects: [{ modifier: 2500, type: 27 }], precondition: "" }], rarity: 5 }, "100581": { alternatives: [{ baseDuration: 5e4, condition: "phase>=2&change_order_onetime<0", effects: [{ modifier: 2500, type: 27 }, { modifier: 3e3, type: 31 }], precondition: "" }], rarity: 5 }, "100591": { alternatives: [{ baseDuration: 4e4, condition: "phase>=2&corner!=0&is_finalcorner==0&temptation_count==0&order_rate>=50&order_rate<=70@phase==1&corner!=0&is_finalcorner==1&temptation_count==0&order_rate>=50&order_rate<=70", effects: [{ modifier: 4e3, type: 31 }], precondition: "" }], rarity: 5 }, "100601": { alternatives: [{ baseDuration: 5e4, condition: "phase>=2&order==3&bashin_diff_behind<=1", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 4 }, "100601111": { alternatives: [{ baseDuration: 0, condition: "running_style==2&phase_random==1", effects: [{ modifier: 750, type: 9 }], precondition: "" }], rarity: 6 }, "100601121": { alternatives: [{ baseDuration: 3e4, condition: "running_style==2&phase_random==1", effects: [{ modifier: 150, type: 9 }, { modifier: 3500, type: 27 }], precondition: "" }], rarity: 6 }, "100601211": { alternatives: [{ baseDuration: 3e4, condition: "all_corner_random==1", effects: [{ modifier: 4e3, type: 31 }, { modifier: 150, type: 9 }], precondition: "" }], rarity: 6 }, "100602111": { alternatives: [{ baseDuration: 0, condition: "running_style==2&phase_random==1", effects: [{ modifier: 750, type: 9 }], precondition: "" }], rarity: 6 }, "100602211": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==4&is_finalcorner==1&corner!=0&lane_type==0", effects: [{ modifier: 3500, type: 27 }, { modifier: 150, type: 9 }], precondition: "" }], rarity: 6 }, "100611": { alternatives: [{ baseDuration: 5e4, condition: "temptation_count==0&remain_distance<=201&remain_distance>=199&order>=4&order_rate<=70", effects: [{ modifier: 4500, type: 27 }], precondition: "" }], rarity: 4 }, "100621": { alternatives: [{ baseDuration: 5e4, condition: "distance_rate>=50&phase==1&order>=3&order_rate<=70", effects: [{ modifier: 550, type: 9 }, { modifier: 2500, type: 27 }], precondition: "" }], rarity: 4 }, "100641": { alternatives: [{ baseDuration: 6e4, condition: "distance_rate>=50&order_rate_in20_continue==1", effects: [{ modifier: 550, type: 9 }, { modifier: 2500, type: 27 }], precondition: "" }], rarity: 5 }, "100651": { alternatives: [{ baseDuration: 6e4, condition: "distance_type==1&phase_laterhalf_random==1&order_rate<=50@distance_type==2&phase_laterhalf_random==1&order_rate<=50", effects: [{ modifier: 2500, type: 27 }], precondition: "" }, { baseDuration: 5e4, condition: "distance_type==3&phase_laterhalf_random==1&order_rate<=50@distance_type==4&phase_laterhalf_random==1&order_rate<=50", effects: [{ modifier: 2500, type: 27 }], precondition: "" }], rarity: 5 }, "100661": { alternatives: [{ baseDuration: 13e4, condition: "distance_rate>=34&distance_rate<=36&order==1&bashin_diff_behind>=1", effects: [{ modifier: 1500, type: 27 }], precondition: "" }, { baseDuration: 5e6, condition: "phase==3&is_activate_other_skill_detail==1", effects: [{ modifier: -500, type: 21 }], precondition: "" }], rarity: 4 }, "100671": { alternatives: [{ baseDuration: 5e4, condition: "is_last_straight_onetime==1&order>=2&order<=5&distance_diff_top<=5", effects: [{ modifier: 4500, type: 27 }], precondition: "" }, { baseDuration: 5e4, condition: "is_last_straight_onetime==1&order>=2&order<=5&distance_diff_top>5", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 5 }, "100681": { alternatives: [{ baseDuration: 5e4, condition: "phase==2&straight_front_type==2&order<=2", effects: [{ modifier: 2500, type: 27 }, { modifier: 3e3, type: 31 }], precondition: "" }, { baseDuration: 5e4, condition: "distance_rate>=50&corner==3&order<=2", effects: [{ modifier: 2500, type: 27 }], precondition: "" }], rarity: 5 }, "100691": { alternatives: [{ baseDuration: 5e4, condition: "remain_distance<=300&order_rate<=40&bashin_diff_infront<=1", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 5 }, "100701": { alternatives: [{ baseDuration: 4e4, condition: "remain_distance>=799&remain_distance<=801&order_rate>=30&order_rate<=60&course_distance==2400&popularity<=3", effects: [{ modifier: 5e3, type: 31 }], precondition: "" }, { baseDuration: 4e4, condition: "remain_distance>=799&remain_distance<=801&order_rate>=30&order_rate<=60", effects: [{ modifier: 2e3, type: 31 }], precondition: "" }], rarity: 5 }, "100701111": { alternatives: [{ baseDuration: 3e4, condition: "running_style==4&is_move_lane==1@running_style==4&is_move_lane==2", effects: [{ modifier: 1e5, type: 8 }, { modifier: 150, type: 9 }], precondition: "" }], rarity: 6 }, "100701211": { alternatives: [{ baseDuration: 3e4, condition: "running_style==4&slope==2&accumulatetime>=10", effects: [{ modifier: 550, type: 9 }, { modifier: 1500, type: 27 }], precondition: "" }], rarity: 6 }, "100702111": { alternatives: [{ baseDuration: 4e4, condition: "distance_type==4&is_finalcorner==1&corner!=0&lane_type==0", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 6 }, "100702211": { alternatives: [{ baseDuration: 4e4, condition: "distance_type==3&phase_random==1&order_rate>=50", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 6 }, "100703111": { alternatives: [{ baseDuration: 9e3, condition: "running_style==4&is_lastspurt==1&corner==0", effects: [{ modifier: 4e3, type: 31 }], precondition: "" }, { baseDuration: 3e4, condition: "is_activate_other_skill_detail==1&is_last_straight==1", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 6 }, "100703211": { alternatives: [{ baseDuration: -1, condition: "ground_condition==2@ground_condition==3@ground_condition==4", effects: [{ modifier: 1e3, type: 14 }, { modifier: 8e5, type: 3 }, { modifier: 8e5, type: 1 }], precondition: "" }], rarity: 6 }, "10071": { alternatives: [{ baseDuration: 6e4, condition: "distance_rate>=50&distance_rate<=60&order_rate>50", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 3 }, "100711": { alternatives: [{ baseDuration: 4e4, condition: "is_last_straight==1&bashin_diff_behind<=1", effects: [{ modifier: 4500, type: 27 }, { modifier: -100, type: 9 }], precondition: "" }], rarity: 5 }, "100721": { alternatives: [{ baseDuration: 5e4, condition: "remain_distance<=300&order_rate<=40", effects: [{ modifier: 3500, type: 27 }], precondition: "is_finalcorner==1&change_order_onetime<0" }], rarity: 5 }, "100741": { alternatives: [{ baseDuration: 5e4, condition: "distance_rate>=50&order_rate>=40&order_rate<=80", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 5 }, "100761": { alternatives: [{ baseDuration: 6e4, condition: "distance_type==4&distance_rate>=50&distance_rate<=51&order_rate>=30&order_rate<=80", effects: [{ modifier: 2500, type: 27 }, { modifier: 750, type: 9 }], precondition: "" }, { baseDuration: 5e4, condition: "distance_rate>=50&distance_rate<=51&order_rate>=30&order_rate<=80", effects: [{ modifier: 2500, type: 27 }], precondition: "" }], rarity: 5 }, "100771": { alternatives: [{ baseDuration: 5e4, condition: "remain_distance<=401&remain_distance>=399&distance_diff_top_float<=25&distance_type==4", effects: [{ modifier: 5500, type: 27 }], precondition: "distance_rate>=60&phase==1&order>=2&order_rate<=40" }, { baseDuration: 5e4, condition: "remain_distance<=401&remain_distance>=399", effects: [{ modifier: 4500, type: 27 }], precondition: "distance_rate>=60&phase==1&order>=2&order_rate<=40" }], rarity: 5 }, "100781": { alternatives: [{ baseDuration: 8e4, condition: "is_finalcorner_laterhalf==1&distance_diff_rate<=50&order==2", effects: [{ modifier: 2e3, type: 31 }], precondition: "distance_rate>=50&order_rate_out20_continue==1" }, { baseDuration: 8e4, condition: "is_finalcorner_laterhalf==1&distance_diff_rate<=50", effects: [{ modifier: 1e3, type: 31 }], precondition: "distance_rate>=50&order_rate_out20_continue==1" }], rarity: 5 }, "100801111": { alternatives: [{ baseDuration: 3e4, condition: "phase==1&corner==0", effects: [{ modifier: 550, type: 9 }, { modifier: 1500, type: 27 }], precondition: "" }], rarity: 6 }, "100801211": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==2&phase_random==2&order_rate>50", effects: [{ modifier: 5e3, type: 31 }], precondition: "" }], rarity: 6 }, "100802111": { alternatives: [{ baseDuration: 3e4, condition: "infront_near_lane_time>=1&is_lastspurt==1&hp_per>=1", effects: [{ modifier: 4e3, type: 31 }, { modifier: 250, type: 28 }, { modifier: 150, type: 9 }], precondition: "" }], rarity: 6 }, "100802211": { alternatives: [{ baseDuration: 24e3, condition: "running_style==3&is_last_straight==1&order>=2&distance_diff_top<=10", effects: [{ modifier: 5500, type: 27 }], precondition: "" }], rarity: 6 }, "10081": { alternatives: [{ baseDuration: 5e4, condition: "order>=3&order_rate<=50&remain_distance<=200&bashin_diff_infront<=1@order>=3&order_rate<=50&remain_distance<=200&bashin_diff_behind<=1", effects: [{ modifier: 2500, type: 27 }], precondition: "" }], rarity: 3 }, "100831": { alternatives: [{ baseDuration: 6e4, condition: "distance_rate>=40&corner==0&slope==2&order_rate>=40&order_rate<=80", effects: [{ modifier: 3500, type: 27 }], precondition: "" }, { baseDuration: 5e4, condition: "distance_rate>=40&corner==0&order_rate>=40&order_rate<=80", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 5 }, "100841": { alternatives: [{ baseDuration: 5e4, condition: "is_last_straight==1&track_id==10006&distance_type==3", effects: [{ modifier: 5500, type: 22 }], precondition: "phase>=2&order_rate>=50" }, { baseDuration: 5e4, condition: "is_last_straight==1", effects: [{ modifier: 3500, type: 22 }], precondition: "phase>=2&order_rate>=50" }], rarity: 5 }, "100851": { alternatives: [{ baseDuration: 5e4, condition: "distance_rate>=66&distance_rate<=68&order_rate>=60&order_rate<=90&temptation_count==0", effects: [{ modifier: 2500, type: 22 }, { modifier: -500, type: 21 }], precondition: "" }], rarity: 5 }, "100861": { alternatives: [{ baseDuration: 5e4, condition: "remain_distance>=999&remain_distance<=1001&order_rate>=20&order_rate<=50", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 5 }, "100871": { alternatives: [{ baseDuration: 5e4, condition: "remain_distance<=400&order<=2&overtake_target_time>=1", effects: [{ modifier: 2500, type: 27 }, { modifier: 3e3, type: 31 }], precondition: "" }], rarity: 5 }, "100901111": { alternatives: [{ baseDuration: 24e3, condition: "distance_type==3&phase_random==1&order_rate<=50", effects: [{ modifier: 3500, type: 27 }, { modifier: 150, type: 9 }], precondition: "" }], rarity: 6 }, "100901211": { alternatives: [{ baseDuration: 3e4, condition: "running_style==2&phase_random==1&order_rate<=50", effects: [{ modifier: 550, type: 9 }, { modifier: 1500, type: 27 }], precondition: "" }], rarity: 6 }, "100902111": { alternatives: [{ baseDuration: 0, condition: "running_style==1&slope==1&accumulatetime>=10", effects: [{ modifier: 750, type: 9 }], precondition: "" }], rarity: 6 }, "100902211": { alternatives: [{ baseDuration: 24e3, condition: "running_style==1&is_last_straight==1&order==1&bashin_diff_behind<=1", effects: [{ modifier: 5500, type: 27 }], precondition: "" }], rarity: 6 }, "10091": { alternatives: [{ baseDuration: 5e4, condition: "distance_rate>=50&order==1&bashin_diff_behind<=1@distance_rate>=50&order==2&is_overtake==1", effects: [{ modifier: 1500, type: 27 }, { modifier: 2e3, type: 31 }], precondition: "" }], rarity: 3 }, "100931": { alternatives: [{ baseDuration: 5e4, condition: "distance_type==1&phase_firsthalf_random==2&order_rate<=50&order_rate>=20@distance_type==2&phase_firsthalf_random==2&order_rate<=50&order_rate>=20", effects: [{ modifier: 3500, type: 22 }], precondition: "" }, { baseDuration: 5e4, condition: "distance_type==3&phase_firsthalf_random==2&order_rate<=50&order_rate>=20@distance_type==4&phase_firsthalf_random==2&order_rate<=50&order_rate>=20", effects: [{ modifier: 2500, type: 22 }], precondition: "" }], rarity: 5 }, "100981": { alternatives: [{ baseDuration: 5e4, condition: "phase_laterhalf_random==1", effects: [{ modifier: 2500, type: 27 }, { modifier: 500, type: 27 }, { modifier: 500, type: 31 }], precondition: "" }], rarity: 5 }, "100991": { alternatives: [{ baseDuration: 4e4, condition: "is_lastspurt==1&order_rate<=40&order_rate>=30&ground_type==2&lastspurt==2", effects: [{ modifier: 4e3, type: 31 }], precondition: "phase==1&blocked_side_continuetime>=2&corner!=0" }, { baseDuration: 4e4, condition: "is_lastspurt==1&order_rate<=40&order_rate>=30&ground_type==2", effects: [{ modifier: 2e3, type: 31 }], precondition: "phase==1&blocked_side_continuetime>=2&corner!=0" }], rarity: 5 }, "101001": { alternatives: [{ baseDuration: 5e4, condition: "remain_distance>=299&remain_distance<=301&order_rate>=20&order_rate<=40&distance_diff_top<=5&ground_type==2", effects: [{ modifier: 2500, type: 27 }, { modifier: 2500, type: 22 }], precondition: "" }, { baseDuration: 5e4, condition: "remain_distance>=299&remain_distance<=301&order_rate>=20&order_rate<=40", effects: [{ modifier: 2500, type: 27 }], precondition: "" }], rarity: 5 }, "101001111": { alternatives: [{ baseDuration: 24e3, condition: "distance_type==2&phase_random==1&order_rate<=50", effects: [{ modifier: 4500, type: 27 }], precondition: "" }], rarity: 6 }, "101001211": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==2&phase_laterhalf_random==0&accumulatetime>=5&order_rate<=50", effects: [{ modifier: 4500, type: 27 }], precondition: "" }], rarity: 6 }, "101002111": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==2&phase_laterhalf_random==0&accumulatetime>=5&order_rate<=50", effects: [{ modifier: 4500, type: 27 }], precondition: "" }], rarity: 6 }, "101002211": { alternatives: [{ baseDuration: 18e3, condition: "running_style==2&phase_firsthalf_random==2&order_rate<=50", effects: [{ modifier: 4e3, type: 31 }, { modifier: 5e4, type: 8 }], precondition: "" }], rarity: 6 }, "101041": { alternatives: [{ baseDuration: 6e4, condition: "corner==3&order==1&track_id==10006&distance_type==3", effects: [{ modifier: 2500, type: 27 }, { modifier: 350, type: 9 }], precondition: "" }, { baseDuration: 5e4, condition: "corner==3&order==1", effects: [{ modifier: 2500, type: 27 }, { modifier: 350, type: 9 }], precondition: "" }], rarity: 5 }, "101051": { alternatives: [{ baseDuration: 5e4, condition: "distance_rate>=50&distance_rate<=55&order_rate>=40&order_rate<=80&distance_type==3&activate_count_all>=7", effects: [{ modifier: 4500, type: 27 }], precondition: "" }, { baseDuration: 5e4, condition: "distance_rate>=50&distance_rate<=55&order_rate>=40&order_rate<=80", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 5 }, "101061": { alternatives: [{ baseDuration: 6e4, condition: "distance_type==4&order_rate>=40&order_rate<=70&is_finalcorner_laterhalf==1&popularity>=4", effects: [{ modifier: 4500, type: 27 }], precondition: "" }, { baseDuration: 6e4, condition: "order_rate>=40&order_rate<=70&is_finalcorner_laterhalf==1", effects: [{ modifier: 2500, type: 27 }], precondition: "" }], rarity: 5 }, "101101111": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==3&phase_random==2", effects: [{ modifier: 4500, type: 27 }], precondition: "" }], rarity: 6 }, "101101211": { alternatives: [{ baseDuration: 18e3, condition: "running_style==3&phase_firsthalf_random==2&order_rate>=40", effects: [{ modifier: 4e3, type: 31 }, { modifier: 5e4, type: 8 }], precondition: "" }], rarity: 6 }, "101102111": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==4&phase_random==1", effects: [{ modifier: 550, type: 9 }, { modifier: 1500, type: 27 }], precondition: "" }], rarity: 6 }, "101102211": { alternatives: [{ baseDuration: 3e4, condition: "running_style==3&phase_random==1&order_rate>=40", effects: [{ modifier: 550, type: 9 }, { modifier: 1500, type: 27 }], precondition: "" }], rarity: 6 }, "10111": { alternatives: [{ baseDuration: 5e4, condition: "is_last_straight==1&change_order_onetime<0&order>=3", effects: [{ modifier: 2500, type: 27 }], precondition: "" }], rarity: 3 }, "101201111": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==3&is_finalcorner==1&corner!=0&is_overtake==1", effects: [{ modifier: 4500, type: 27 }, { modifier: 1e3, type: 31 }], precondition: "" }], rarity: 6 }, "101201211": { alternatives: [{ baseDuration: 3e4, condition: "running_style==4&phase_firsthalf_random==3&is_lastspurt==1", effects: [{ modifier: 4500, type: 27 }], precondition: "phase>=2&distance_diff_rate>=50" }], rarity: 6 }, "101202111": { alternatives: [{ baseDuration: 4e4, condition: "running_style==4&phase_random==1&order_rate>=50", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 6 }, "101202211": { alternatives: [{ baseDuration: 4e4, condition: "running_style==4&distance_type==3&phase_firsthalf_random==2", effects: [{ modifier: 4e3, type: 31 }], precondition: "distance_rate>=66&temptation_count==0" }], rarity: 6 }, "101301111": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==4&phase_random==1&order_rate<=50", effects: [{ modifier: 4500, type: 27 }], precondition: "" }], rarity: 6 }, "101301211": { alternatives: [{ baseDuration: 3e4, condition: "running_style==2&phase_laterhalf_random==0&order_rate<=50", effects: [{ modifier: 550, type: 9 }, { modifier: 1500, type: 27 }], precondition: "" }], rarity: 6 }, "101302111": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==4&phase_random==1", effects: [{ modifier: 550, type: 9 }, { modifier: 1500, type: 27 }], precondition: "" }], rarity: 6 }, "101302211": { alternatives: [{ baseDuration: 3e4, condition: "straight_random==1", effects: [{ modifier: 4500, type: 27 }], precondition: "" }], rarity: 6 }, "101303111": { alternatives: [{ baseDuration: 4e4, condition: "distance_type==4&phase_laterhalf_random==1&order_rate<=50", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 6 }, "101303211": { alternatives: [{ baseDuration: 0, condition: "is_badstart==0&running_style==2&distance_type==4&phase_firsthalf_random==1", effects: [{ modifier: 950, type: 9 }], precondition: "" }], rarity: 6 }, "101401111": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==3&phase_random==0", effects: [{ modifier: 15e4, type: 8 }, { modifier: 1500, type: 27 }], precondition: "" }], rarity: 6 }, "101401211": { alternatives: [{ baseDuration: 3e4, condition: "running_style==2&phase_laterhalf_random==0&order_rate<=50", effects: [{ modifier: 550, type: 9 }, { modifier: 1500, type: 27 }], precondition: "" }], rarity: 6 }, "101402111": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==2&phase_random==2&order_rate>50", effects: [{ modifier: 5e3, type: 31 }], precondition: "" }], rarity: 6 }, "101402211": { alternatives: [{ baseDuration: 4e4, condition: "running_style==3&is_finalcorner==1&corner!=0&is_behind_in==1&change_order_onetime<0", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 6 }, "10141": { alternatives: [{ baseDuration: 5e4, condition: "is_last_straight==1&hp_per>=30&order<=2", effects: [{ modifier: 1500, type: 27 }, { modifier: 2e3, type: 31 }], precondition: "" }], rarity: 3 }, "101501111": { alternatives: [{ baseDuration: 4e4, condition: "running_style==2&is_finalcorner_random==1&order_rate<=50", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 6 }, "101501211": { alternatives: [{ baseDuration: 24e3, condition: "distance_type==3&phase_random==1&order_rate<=50", effects: [{ modifier: 4500, type: 27 }], precondition: "" }], rarity: 6 }, "101502111": { alternatives: [{ baseDuration: 0, condition: "corner_random==1@corner_random==2@corner_random==3@corner_random==4", effects: [{ modifier: 750, type: 9 }], precondition: "" }], rarity: 6 }, "101502211": { alternatives: [{ baseDuration: 24e3, condition: "distance_type==4&phase_laterhalf_random==1&order_rate<=50", effects: [{ modifier: 4500, type: 27 }], precondition: "" }], rarity: 6 }, "101601111": { alternatives: [{ baseDuration: 3e4, condition: "straight_random==1", effects: [{ modifier: 4500, type: 27 }], precondition: "" }], rarity: 6 }, "101601211": { alternatives: [{ baseDuration: 24e3, condition: "is_lastspurt==1&phase_firsthalf_random==3", effects: [{ modifier: 4500, type: 27 }], precondition: "" }], rarity: 6 }, "101602111": { alternatives: [{ baseDuration: 4e4, condition: "running_style==2&distance_rate>=50&is_overtake==1@running_style==3&distance_rate>=50&is_overtake==1", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 6 }, "101602211": { alternatives: [{ baseDuration: 12e3, condition: "distance_type==4&running_style==2&phase==2", effects: [{ modifier: 5e3, type: 31 }], precondition: "distance_diff_top<=10&distance_rate>=60&phase==1" }], rarity: 6 }, "101701111": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==3&phase_random==2", effects: [{ modifier: 4500, type: 22 }], precondition: "" }], rarity: 6 }, "101701211": { alternatives: [{ baseDuration: 4e4, condition: "all_corner_random==1", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 6 }, "101702111": { alternatives: [{ baseDuration: 0, condition: "running_style==2&phase_laterhalf_random==0&order_rate<=50", effects: [{ modifier: 750, type: 9 }], precondition: "" }], rarity: 6 }, "101702211": { alternatives: [{ baseDuration: -1, condition: "season==3", effects: [{ modifier: 8e5, type: 1 }, { modifier: 8e5, type: 3 }], precondition: "" }], rarity: 6 }, "101801111": { alternatives: [{ baseDuration: 4e4, condition: "running_style==2&phase_random==2&order_rate<=50", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 6 }, "101801211": { alternatives: [{ baseDuration: 3e4, condition: "phase_random==2", effects: [{ modifier: 350, type: 28 }, { modifier: 1500, type: 22 }], precondition: "" }], rarity: 6 }, "101802111": { alternatives: [{ baseDuration: 4e4, condition: "distance_type==2&is_overtake==1&accumulatetime>=5", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 6 }, "101802211": { alternatives: [{ baseDuration: 3e4, condition: "all_corner_random==1", effects: [{ modifier: 4e3, type: 31 }, { modifier: 1500, type: 22 }], precondition: "" }], rarity: 6 }, "10181": { alternatives: [{ baseDuration: 5e4, condition: "is_finalcorner==1&corner!=0&order>=3&change_order_onetime<0", effects: [{ modifier: 2500, type: 27 }], precondition: "" }], rarity: 3 }, "101901111": { alternatives: [{ baseDuration: 3e4, condition: "near_count>=3&accumulatetime>=5", effects: [{ modifier: 3500, type: 27 }, { modifier: 150, type: 9 }], precondition: "" }], rarity: 6 }, "101901211": { alternatives: [{ baseDuration: 4e4, condition: "ground_type==2&phase_random==2", effects: [{ modifier: 350, type: 28 }, { modifier: 3e3, type: 31 }], precondition: "" }], rarity: 6 }, "101902111": { alternatives: [{ baseDuration: 18e3, condition: "phase==1&change_order_onetime<0", effects: [{ modifier: 3500, type: 27 }, { modifier: 150, type: 9 }], precondition: "" }], rarity: 6 }, "101902211": { alternatives: [{ baseDuration: 24e3, condition: "ground_type==2&phase_random==1&order_rate>=50", effects: [{ modifier: 3500, type: 27 }, { modifier: 150, type: 9 }], precondition: "" }], rarity: 6 }, "102001111": { alternatives: [{ baseDuration: 4e4, condition: "distance_type==4&phase_random==1&bashin_diff_behind>=1&order==1", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 6 }, "102001121": { alternatives: [{ baseDuration: 0, condition: "distance_type==3&phase_random==1", effects: [{ modifier: 750, type: 9 }], precondition: "" }], rarity: 6 }, "102001211": { alternatives: [{ baseDuration: 4e4, condition: "running_style==1&phase_random==1&order_rate<=50", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 6 }, "102002111": { alternatives: [{ baseDuration: 3e4, condition: "running_style==1&phase_random==1&order_rate<=50", effects: [{ modifier: 3500, type: 27 }, { modifier: 150, type: 9 }], precondition: "" }], rarity: 6 }, "102002211": { alternatives: [{ baseDuration: 3e4, condition: "running_style==1&phase<=1&change_order_onetime>0&accumulatetime>=5@running_style==1&phase<=1&blocked_side_continuetime>=2&accumulatetime>=5", effects: [{ modifier: 3500, type: 27 }, { modifier: 150, type: 9 }], precondition: "" }], rarity: 6 }, "102101111": { alternatives: [{ baseDuration: 24e3, condition: "running_style==3&phase_random==1&order_rate>=40", effects: [{ modifier: 4500, type: 27 }], precondition: "" }], rarity: 6 }, "102101211": { alternatives: [{ baseDuration: 3e4, condition: "activate_count_middle>=3", effects: [{ modifier: 4500, type: 27 }], precondition: "" }], rarity: 6 }, "102102111": { alternatives: [{ baseDuration: 24e3, condition: "distance_type==3&phase_random==1&order_rate<=50", effects: [{ modifier: 4500, type: 27 }], precondition: "" }], rarity: 6 }, "102102211": { alternatives: [{ baseDuration: 18e3, condition: "phase==1&change_order_onetime<0", effects: [{ modifier: 4500, type: 27 }], precondition: "" }], rarity: 6 }, "102201111": { alternatives: [{ baseDuration: 18e3, condition: "running_style==2&is_finalcorner_random==1&order_rate<=50", effects: [{ modifier: 3500, type: 27 }, { modifier: 150, type: 9 }], precondition: "" }], rarity: 6 }, "102201211": { alternatives: [{ baseDuration: 3e4, condition: "running_style==2&down_slope_random==1", effects: [{ modifier: 4e3, type: 31 }], precondition: "" }], rarity: 6 }, "102202111": { alternatives: [{ baseDuration: 24e3, condition: "distance_type==2&phase_random==1&order_rate<=50", effects: [{ modifier: 4500, type: 27 }], precondition: "" }], rarity: 6 }, "102202211": { alternatives: [{ baseDuration: 18e3, condition: "running_style==2&phase_firsthalf_random==2&order_rate<=50", effects: [{ modifier: 4e3, type: 31 }, { modifier: 5e4, type: 8 }], precondition: "" }], rarity: 6 }, "102301111": { alternatives: [{ baseDuration: 0, condition: "running_style==2&phase_laterhalf_random==0&order_rate<=50", effects: [{ modifier: 750, type: 9 }], precondition: "" }], rarity: 6 }, "102301211": { alternatives: [{ baseDuration: 0, condition: "distance_type==4&phase_random==1", effects: [{ modifier: 750, type: 9 }], precondition: "" }], rarity: 6 }, "102302111": { alternatives: [{ baseDuration: 0, condition: "distance_type==4&is_overtake==1&accumulatetime>=5", effects: [{ modifier: 750, type: 9 }], precondition: "" }], rarity: 6 }, "102302211": { alternatives: [{ baseDuration: 24e3, condition: "is_lastspurt==1&phase_firsthalf_random==3", effects: [{ modifier: 4500, type: 27 }], precondition: "" }], rarity: 6 }, "102401111": { alternatives: [{ baseDuration: 0, condition: "phase==1&corner==0", effects: [{ modifier: 750, type: 9 }], precondition: "" }], rarity: 6 }, "102401211": { alternatives: [{ baseDuration: 3e4, condition: "infront_near_lane_time>=1&is_lastspurt==1&hp_per>=1", effects: [{ modifier: 4e3, type: 31 }, { modifier: 250, type: 28 }, { modifier: 150, type: 9 }], precondition: "" }], rarity: 6 }, "102402111": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==3&phase==1&blocked_front_continuetime>=1", effects: [{ modifier: -300, type: 9 }, { modifier: 1500, type: 27 }], precondition: "" }], rarity: 6 }, "102402211": { alternatives: [{ baseDuration: 0, condition: "corner_random==1@corner_random==2@corner_random==3@corner_random==4", effects: [{ modifier: 750, type: 9 }], precondition: "" }], rarity: 6 }, "10241": { alternatives: [{ baseDuration: 5e4, condition: "is_finalcorner==1&blocked_side_continuetime>=2&order<=3", effects: [{ modifier: 1500, type: 27 }, { modifier: 2e3, type: 31 }], precondition: "" }], rarity: 3 }, "102501111": { alternatives: [{ baseDuration: 3e4, condition: "running_style==3&phase_random==1&order_rate>=40", effects: [{ modifier: 550, type: 9 }, { modifier: 1500, type: 27 }], precondition: "" }], rarity: 6 }, "102501211": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==4&phase_random==1&order>=5", effects: [{ modifier: -100, type: 9 }, { modifier: 350, type: 9 }, { modifier: 1500, type: 27 }], precondition: "" }], rarity: 6 }, "102601111": { alternatives: [{ baseDuration: 12e3, condition: "running_style==1&phase==0", effects: [{ modifier: 5e3, type: 31 }], precondition: "" }], rarity: 6 }, "102601211": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==3&phase_random==1&order<=3", effects: [{ modifier: 550, type: 9 }, { modifier: 1500, type: 27 }], precondition: "" }], rarity: 6 }, "102602111": { alternatives: [{ baseDuration: 3e4, condition: "running_style==1&phase_random==1&order_rate<=50", effects: [{ modifier: 3500, type: 27 }, { modifier: 150, type: 9 }], precondition: "" }], rarity: 6 }, "102602211": { alternatives: [{ baseDuration: -1, condition: "always==1", effects: [{ modifier: 4e3, type: 10 }, { modifier: 1e5, type: 32 }], precondition: "" }], rarity: 6 }, "102701111": { alternatives: [{ baseDuration: 24e3, condition: "distance_type==3&phase_random==1&order_rate<=50", effects: [{ modifier: 4500, type: 27 }], precondition: "" }], rarity: 6 }, "102701211": { alternatives: [{ baseDuration: 3e4, condition: "running_style==3&is_finalcorner==1&corner!=0&is_behind_in==1&change_order_onetime<0", effects: [{ modifier: 4500, type: 27 }], precondition: "" }], rarity: 6 }, "102702111": { alternatives: [{ baseDuration: 3e4, condition: "running_style==2&down_slope_random==1", effects: [{ modifier: 4e3, type: 31 }], precondition: "" }], rarity: 6 }, "102702211": { alternatives: [{ baseDuration: 24e3, condition: "down_slope_random==1", effects: [{ modifier: 4500, type: 27 }], precondition: "" }], rarity: 6 }, "10271": { alternatives: [{ baseDuration: 4e4, condition: "phase>=2&corner!=0&order_rate>=65&order_rate<=70", effects: [{ modifier: 3e3, type: 31 }], precondition: "" }], rarity: 3 }, "102801111": { alternatives: [{ baseDuration: 4e4, condition: "distance_type==1&phase_random==1", effects: [{ modifier: 350, type: 28 }, { modifier: 3e3, type: 31 }, { modifier: 1500, type: 27 }], precondition: "" }], rarity: 6 }, "102801211": { alternatives: [{ baseDuration: 3e4, condition: "running_style==2&phase_random==1", effects: [{ modifier: 550, type: 9 }, { modifier: 1500, type: 27 }], precondition: "" }], rarity: 6 }, "102901111": { alternatives: [{ baseDuration: 4e4, condition: "infront_near_lane_time>=1&is_lastspurt==1&hp_per>=1", effects: [{ modifier: 4e3, type: 31 }, { modifier: 250, type: 28 }], precondition: "" }], rarity: 6 }, "102901211": { alternatives: [{ baseDuration: 4e4, condition: "running_style==2&down_slope_random==1", effects: [{ modifier: 3e3, type: 31 }], precondition: "" }], rarity: 6 }, "103001111": { alternatives: [{ baseDuration: 3e4, condition: "running_style==2&down_slope_random==1", effects: [{ modifier: 3e3, type: 31 }, { modifier: 1500, type: 22 }], precondition: "" }], rarity: 6 }, "103001211": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==4&phase_random==1", effects: [{ modifier: 550, type: 9 }, { modifier: 1500, type: 27 }], precondition: "" }], rarity: 6 }, "103002111": { alternatives: [{ baseDuration: 3e4, condition: "running_style==2&phase_laterhalf_random==0&order_rate<=50", effects: [{ modifier: 550, type: 9 }, { modifier: 1500, type: 27 }], precondition: "" }], rarity: 6 }, "103002211": { alternatives: [{ baseDuration: 3e4, condition: "phase==1&order_rate<=50&temptation_opponent_count_behind>=1", effects: [{ modifier: -300, type: 9 }, { modifier: 3500, type: 27 }], precondition: "" }], rarity: 6 }, "103101111": { alternatives: [{ baseDuration: 3e4, condition: "running_style==1&slope==1&accumulatetime>=10", effects: [{ modifier: 550, type: 9 }, { modifier: 1500, type: 27 }], precondition: "" }], rarity: 6 }, "103101211": { alternatives: [{ baseDuration: 4e4, condition: "distance_type==3&phase_random==1&order<=3", effects: [{ modifier: 3500, type: 27 }, { modifier: -1500, type: 21 }], precondition: "" }], rarity: 6 }, "103102111": { alternatives: [{ baseDuration: -1, condition: "always==1", effects: [{ modifier: 4e3, type: 10 }, { modifier: 1e5, type: 32 }], precondition: "" }], rarity: 6 }, "103102211": { alternatives: [{ baseDuration: 3e4, condition: "running_style==1&all_corner_random==1", effects: [{ modifier: 3500, type: 27 }, { modifier: 2e3, type: 31 }], precondition: "" }], rarity: 6 }, "103201111": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==3&phase_random==2", effects: [{ modifier: 4500, type: 27 }], precondition: "" }], rarity: 6 }, "103201211": { alternatives: [{ baseDuration: 3e4, condition: "running_style==2&phase_random==1&order_rate<=50", effects: [{ modifier: 550, type: 9 }, { modifier: 1500, type: 27 }], precondition: "" }], rarity: 6 }, "103202111": { alternatives: [{ baseDuration: -1, condition: "running_style==2&distance_type==3&base_speed>=1200&base_wiz>=1200", effects: [{ modifier: 1e6, type: 1 }], precondition: "" }, { baseDuration: -1, condition: "running_style==2&distance_type==3&base_speed>=1200&base_wiz<1200", effects: [{ modifier: 8e5, type: 1 }], precondition: "" }], rarity: 6 }, "103202211": { alternatives: [{ baseDuration: 24e3, condition: "phase_random==1&running_style==2", effects: [{ modifier: 3500, type: 27 }, { modifier: 500, type: 27 }], precondition: "" }], rarity: 6 }, "10321": { alternatives: [{ baseDuration: 4e4, condition: "distance_rate>=50&corner!=0&order>=3&order_rate<=40", effects: [{ modifier: 350, type: 9 }, { modifier: 1500, type: 27 }], precondition: "" }], rarity: 3 }, "103301111": { alternatives: [{ baseDuration: 3e4, condition: "running_style==4&infront_near_lane_time>=1&accumulatetime>=10", effects: [{ modifier: 550, type: 9 }, { modifier: 1500, type: 27 }], precondition: "" }], rarity: 6 }, "103301211": { alternatives: [{ baseDuration: 3e4, condition: "running_style==4&phase_firsthalf_random==3&is_lastspurt==1", effects: [{ modifier: 4500, type: 27 }], precondition: "phase>=2&distance_diff_rate>=50" }], rarity: 6 }, "103401111": { alternatives: [{ baseDuration: 3e4, condition: "activate_count_middle>=3", effects: [{ modifier: 4500, type: 27 }], precondition: "" }], rarity: 6 }, "103401211": { alternatives: [{ baseDuration: 18e3, condition: "ground_type==2&phase_random==1&order_rate>=50", effects: [{ modifier: 750, type: 9 }, { modifier: 3500, type: 27 }], precondition: "" }], rarity: 6 }, "103401221": { alternatives: [{ baseDuration: 18e3, condition: "distance_type==3&phase_random==1&order_rate>=50", effects: [{ modifier: 350, type: 9 }, { modifier: 4500, type: 27 }], precondition: "" }], rarity: 6 }, "103402111": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==4&is_finalcorner==1&corner!=0&lane_type==0", effects: [{ modifier: 4500, type: 27 }], precondition: "" }], rarity: 6 }, "103402211": { alternatives: [{ baseDuration: 9e3, condition: "running_style==4&is_lastspurt==1&corner==0", effects: [{ modifier: 4e3, type: 31 }, { modifier: 5e4, type: 8 }], precondition: "" }], rarity: 6 }, "103501111": { alternatives: [{ baseDuration: 4e4, condition: "running_style==3&is_overtake==1&accumulatetime>=5", effects: [{ modifier: 3e3, type: 31 }, { modifier: 1500, type: 27 }], precondition: "" }], rarity: 6 }, "103501211": { alternatives: [{ baseDuration: 24e3, condition: "running_style==3&phase_random==1&order_rate>=40", effects: [{ modifier: 3500, type: 27 }, { modifier: 150, type: 9 }], precondition: "" }], rarity: 6 }, "103502111": { alternatives: [{ baseDuration: 4e4, condition: "running_style==3&up_slope_random==1", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 6 }, "103502211": { alternatives: [{ baseDuration: 4e4, condition: "distance_type==3&is_last_straight==1&phase>=2&order_rate>=20&order_rate<=60", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 6 }, "10351": { alternatives: [{ baseDuration: 5e4, condition: "is_last_straight==1&order<=5", effects: [{ modifier: 2500, type: 27 }], precondition: "is_finalcorner==1&blocked_side_continuetime>=2" }], rarity: 3 }, "103601111": { alternatives: [{ baseDuration: 24e3, condition: "distance_type==3&phase_random==1&order_rate>=50", effects: [{ modifier: 3500, type: 27 }, { modifier: 150, type: 9 }], precondition: "" }], rarity: 6 }, "103601211": { alternatives: [{ baseDuration: 3e4, condition: "running_style==4&straight_random==1", effects: [{ modifier: 3500, type: 27 }, { modifier: 1500, type: 22 }], precondition: "" }], rarity: 6 }, "103602111": { alternatives: [{ baseDuration: 0, condition: "distance_type==4&phase_random==1", effects: [{ modifier: -100, type: 9 }, { modifier: 550, type: 9 }], precondition: "" }], rarity: 6 }, "103602211": { alternatives: [{ baseDuration: 4e4, condition: "distance_type==4&is_finalcorner==1&corner!=0&lane_type==0", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 6 }, "103701111": { alternatives: [{ baseDuration: 3e4, condition: "phase_random==2", effects: [{ modifier: 350, type: 28 }, { modifier: 2500, type: 22 }], precondition: "" }], rarity: 6 }, "103701211": { alternatives: [{ baseDuration: 24e3, condition: "is_lastspurt==1&phase_firsthalf_random==3", effects: [{ modifier: 4500, type: 27 }], precondition: "" }], rarity: 6 }, "103702111": { alternatives: [{ baseDuration: 4e4, condition: "distance_type==3&phase_random==2", effects: [{ modifier: 3500, type: 22 }], precondition: "" }], rarity: 6 }, "103702121": { alternatives: [{ baseDuration: 0, condition: "distance_type==3&phase_random==1", effects: [{ modifier: 750, type: 9 }], precondition: "" }], rarity: 6 }, "103702211": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==3&straight_random==1", effects: [{ modifier: 4500, type: 27 }], precondition: "" }], rarity: 6 }, "103801111": { alternatives: [{ baseDuration: 3e4, condition: "running_style==2&phase_random==2&order_rate<=50", effects: [{ modifier: -5e4, type: 8 }, { modifier: 1500, type: 22 }], precondition: "" }], rarity: 6 }, "103801211": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==1&phase_random==0&order_rate<=50&accumulatetime>=5", effects: [{ modifier: -2500, type: 21 }, { modifier: 1500, type: 27 }], precondition: "" }], rarity: 6 }, "103802111": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==1&phase_random==0&order_rate<=50&accumulatetime>=5", effects: [{ modifier: -2500, type: 21 }, { modifier: 1500, type: 27 }], precondition: "" }], rarity: 6 }, "103802211": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==1&phase_random==2", effects: [{ modifier: 4e3, type: 31 }, { modifier: 5e4, type: 8 }], precondition: "" }], rarity: 6 }, "103901111": { alternatives: [{ baseDuration: 3e4, condition: "infront_near_lane_time>=1&is_lastspurt==1&hp_per>=1", effects: [{ modifier: 5e3, type: 31 }, { modifier: 250, type: 28 }], precondition: "" }], rarity: 6 }, "103901211": { alternatives: [{ baseDuration: 3e4, condition: "running_style==3&is_finalcorner==1&corner!=0&is_behind_in==1&change_order_onetime<0", effects: [{ modifier: 3500, type: 27 }, { modifier: 2e3, type: 31 }], precondition: "" }], rarity: 6 }, "103902111": { alternatives: [{ baseDuration: 24e3, condition: "running_style==3&is_last_straight==1&order>=2&distance_diff_top<=10", effects: [{ modifier: 5500, type: 27 }], precondition: "" }], rarity: 6 }, "103902211": { alternatives: [{ baseDuration: 24e3, condition: "distance_type==2&down_slope_random==1@distance_type==3&down_slope_random==1", effects: [{ modifier: 3500, type: 27 }, { modifier: 2e3, type: 31 }], precondition: "" }], rarity: 6 }, "104001111": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==2&phase_laterhalf_random==0&order_rate>50", effects: [{ modifier: 550, type: 9 }, { modifier: -2e3, type: 21 }, { modifier: 2500, type: 27 }], precondition: "" }], rarity: 6 }, "104001211": { alternatives: [{ baseDuration: 18e3, condition: "running_style==3&phase_firsthalf_random==2&order_rate>=40", effects: [{ modifier: 4e3, type: 31 }, { modifier: 5e4, type: 8 }], precondition: "" }], rarity: 6 }, "104002111": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==2&phase_random==0&order_rate>50&accumulatetime>=3", effects: [{ modifier: -3e3, type: 31 }, { modifier: 150, type: 9 }], precondition: "" }], rarity: 6 }, "104002211": { alternatives: [{ baseDuration: 3e4, condition: "running_style==3&phase_laterhalf_random==0&order_rate>=40", effects: [{ modifier: 550, type: 9 }, { modifier: 1500, type: 27 }], precondition: "" }], rarity: 6 }, "104101111": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==1&phase_random==2", effects: [{ modifier: 4e3, type: 31 }, { modifier: 1500, type: 27 }], precondition: "" }], rarity: 6 }, "104101211": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==1&phase==1&bashin_diff_behind>=3&order==1", effects: [{ modifier: 4500, type: 27 }], precondition: "" }], rarity: 6 }, "104102111": { alternatives: [{ baseDuration: 24e3, condition: "distance_type==1&phase_laterhalf_random==1&order_rate<=50", effects: [{ modifier: 4500, type: 27 }], precondition: "" }], rarity: 6 }, "104102211": { alternatives: [{ baseDuration: 4e4, condition: "distance_type==1&straight_random==1", effects: [{ modifier: 3500, type: 22 }], precondition: "" }], rarity: 6 }, "10411": { alternatives: [{ baseDuration: 5e4, condition: "distance_rate>=50&order<=3&blocked_side_continuetime>=2", effects: [{ modifier: 2500, type: 27 }], precondition: "" }], rarity: 3 }, "104201111": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==1&straight_random==1@distance_type==2&straight_random==1", effects: [{ modifier: 3500, type: 27 }, { modifier: 1500, type: 22 }], precondition: "" }], rarity: 6 }, "104201211": { alternatives: [{ baseDuration: 4e4, condition: "distance_type==2&is_overtake==1&accumulatetime>=5@distance_type==1&is_overtake==1&accumulatetime>=5", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 6 }, "104301111": { alternatives: [{ baseDuration: 3e4, condition: "ground_type==2&phase_random==3&order_rate<=50&is_lastspurt==1", effects: [{ modifier: 4500, type: 27 }], precondition: "" }], rarity: 6 }, "104301211": { alternatives: [{ baseDuration: -1, condition: "ground_type==2&ground_condition==3@ground_type==2&ground_condition==4", effects: [{ modifier: 8e5, type: 1 }, { modifier: 8e5, type: 3 }], precondition: "" }], rarity: 6 }, "104401111": { alternatives: [{ baseDuration: 3e4, condition: "running_style==4&slope==2&accumulatetime>=10", effects: [{ modifier: 550, type: 9 }, { modifier: 1500, type: 27 }], precondition: "" }], rarity: 6 }, "104401211": { alternatives: [{ baseDuration: 3e4, condition: "running_style==4&phase_random==2&order>=2", effects: [{ modifier: -2500, type: 21 }, { modifier: 1500, type: 22 }], precondition: "" }], rarity: 6 }, "104401221": { alternatives: [{ baseDuration: 4e4, condition: "running_style==4&phase_random==2", effects: [{ modifier: 3500, type: 22 }], precondition: "" }], rarity: 6 }, "104501111": { alternatives: [{ baseDuration: 4e4, condition: "running_style==2&phase_random==2&order_rate<=50", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 6 }, "104501211": { alternatives: [{ baseDuration: 0, condition: "corner_random==1@corner_random==2@corner_random==3@corner_random==4", effects: [{ modifier: 750, type: 9 }], precondition: "" }], rarity: 6 }, "104502111": { alternatives: [{ baseDuration: 24e3, condition: "all_corner_random==1", effects: [{ modifier: 3500, type: 27 }, { modifier: 150, type: 9 }], precondition: "" }], rarity: 6 }, "104502211": { alternatives: [{ baseDuration: 0, condition: "distance_type==3&phase==1&blocked_front_continuetime>=1", effects: [{ modifier: -300, type: 9 }, { modifier: 150, type: 9 }], precondition: "" }], rarity: 6 }, "10451": { alternatives: [{ baseDuration: 0, condition: "phase_random==1&order>=2&order_rate<=40", effects: [{ modifier: 550, type: 9 }], precondition: "" }], rarity: 3 }, "104601111": { alternatives: [{ baseDuration: 4e4, condition: "phase_random==0", effects: [{ modifier: 450, type: 28 }], precondition: "" }], rarity: 6 }, "104601121": { alternatives: [{ baseDuration: 4e4, condition: "phase_random==2", effects: [{ modifier: 2500, type: 22 }], precondition: "" }], rarity: 6 }, "104601211": { alternatives: [{ baseDuration: 24e3, condition: "ground_type==2&phase==1&blocked_side_continuetime>=2", effects: [{ modifier: 3500, type: 27 }, { modifier: 150, type: 9 }], precondition: "" }], rarity: 6 }, "104602111": { alternatives: [{ baseDuration: 24e3, condition: "ground_type==2&phase==1&blocked_side_continuetime>=2", effects: [{ modifier: 3500, type: 27 }, { modifier: 150, type: 9 }], precondition: "" }], rarity: 6 }, "104602211": { alternatives: [{ baseDuration: 3e4, condition: "ground_type==2&phase_random==2&order_rate<=50", effects: [{ modifier: 5e3, type: 31 }], precondition: "" }], rarity: 6 }, "104701111": { alternatives: [{ baseDuration: 0, condition: "running_style==2&phase_random==1&order_rate<=50", effects: [{ modifier: 750, type: 9 }], precondition: "" }], rarity: 6 }, "104701121": { alternatives: [{ baseDuration: 3e4, condition: "running_style==2&phase_random==1&order_rate<=50", effects: [{ modifier: 150, type: 9 }, { modifier: 3500, type: 27 }], precondition: "" }], rarity: 6 }, "104701211": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==3&all_corner_random==1@distance_type==4&all_corner_random==1", effects: [{ modifier: 4500, type: 27 }], precondition: "" }], rarity: 6 }, "104801111": { alternatives: [{ baseDuration: 18e3, condition: "running_style==3&phase_firsthalf_random==2@running_style==2&phase_firsthalf_random==2", effects: [{ modifier: 4e3, type: 31 }, { modifier: 150, type: 9 }], precondition: "" }], rarity: 6 }, "104801211": { alternatives: [{ baseDuration: 3e4, condition: "running_style==2&phase_random==1@running_style==3&phase_random==1", effects: [{ modifier: 550, type: 9 }, { modifier: 1500, type: 27 }], precondition: "" }], rarity: 6 }, "104802111": { alternatives: [{ baseDuration: 18e3, condition: "distance_type==3&is_finalcorner_random==1&order_rate>=40&track_id==10006", effects: [{ modifier: 4e3, type: 31 }, { modifier: 2500, type: 27 }], precondition: "" }, { baseDuration: 18e3, condition: "distance_type==3&is_finalcorner_random==1&order_rate>=40&track_id!=10006", effects: [{ modifier: 4e3, type: 31 }], precondition: "" }], rarity: 6 }, "104802211": { alternatives: [{ baseDuration: 24e3, condition: "running_style==3&distance_type==3&is_finalcorner_random==1&order_rate>=30&order_rate<=80&track_id==10006", effects: [{ modifier: 3500, type: 27 }, { modifier: 2e3, type: 31 }], precondition: "" }, { baseDuration: 24e3, condition: "running_style==3&is_finalcorner_random==1&order_rate>=30&order_rate<=80&track_id!=10006&distance_type!=3@running_style==3&is_finalcorner_random==1&order_rate>=30&order_rate<=80&track_id==10006&distance_type!=3@running_style==3&is_finalcorner_random==1&order_rate>=30&order_rate<=80&track_id!=10006&distance_type==3", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 6 }, "104901111": { alternatives: [{ baseDuration: 18e3, condition: "distance_rate_after_random==50", effects: [{ modifier: 5500, type: 27 }, { modifier: -1e4, type: 9 }], precondition: "" }], rarity: 6 }, "104901211": { alternatives: [{ baseDuration: -1, condition: "popularity<=3&random_lot==30", effects: [{ modifier: 1e6, type: 1 }, { modifier: 1e6, type: 3 }, { modifier: 1e6, type: 4 }], precondition: "" }, { baseDuration: -1, condition: "popularity>=4&random_lot==60", effects: [{ modifier: 1e6, type: 1 }, { modifier: 1e6, type: 3 }, { modifier: 1e6, type: 4 }], precondition: "" }], rarity: 6 }, "105001111": { alternatives: [{ baseDuration: 3e4, condition: "running_style==4&phase_random==1&distance_diff_rate>=75", effects: [{ modifier: 550, type: 9 }, { modifier: 1500, type: 27 }], precondition: "" }], rarity: 6 }, "105001211": { alternatives: [{ baseDuration: 9e3, condition: "running_style==4&is_lastspurt==1&corner==0", effects: [{ modifier: 4e3, type: 31 }, { modifier: 5e4, type: 8 }], precondition: "" }], rarity: 6 }, "105002111": { alternatives: [{ baseDuration: 4e4, condition: "phase_random==1&running_style==4&order_rate>=75", effects: [{ modifier: 3500, type: 27 }, { modifier: 350, type: 28 }], precondition: "" }], rarity: 6 }, "105002211": { alternatives: [{ baseDuration: 4e4, condition: "distance_type==3&phase_firsthalf_random==2&order_rate>=40", effects: [{ modifier: 4e3, type: 31 }], precondition: "" }], rarity: 6 }, "105101111": { alternatives: [{ baseDuration: 3e4, condition: "straight_random==1", effects: [{ modifier: 3500, type: 27 }, { modifier: 150, type: 9 }], precondition: "" }], rarity: 6 }, "105101211": { alternatives: [{ baseDuration: 3e4, condition: "running_style==2&down_slope_random==1", effects: [{ modifier: 4e3, type: 31 }], precondition: "" }], rarity: 6 }, "105102111": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==2&all_corner_random==1", effects: [{ modifier: 1500, type: 27 }, { modifier: 3e3, type: 27 }], precondition: "" }], rarity: 6 }, "105102211": { alternatives: [{ baseDuration: 24e3, condition: "distance_type==1&down_slope_random==1@distance_type==2&down_slope_random==1", effects: [{ modifier: 3500, type: 27 }, { modifier: 2e3, type: 31 }], precondition: "" }], rarity: 6 }, "105201111": { alternatives: [{ baseDuration: 2e4, condition: "phase<=1&accumulatetime>=5&blocked_front_continuetime>=1", effects: [{ modifier: 750, type: 9 }, { modifier: 350, type: 28 }], precondition: "" }], rarity: 6 }, "105201211": { alternatives: [{ baseDuration: 3e4, condition: "phase==1&change_order_onetime>0", effects: [{ modifier: 550, type: 9 }, { modifier: 1500, type: 27 }], precondition: "" }], rarity: 6 }, "105202111": { alternatives: [{ baseDuration: 3e4, condition: "phase_random==0", effects: [{ modifier: 450, type: 28 }, { modifier: 1500, type: 27 }], precondition: "" }], rarity: 6 }, "105202211": { alternatives: [{ baseDuration: 4e4, condition: "running_style==3&is_overtake==1&accumulatetime>=5", effects: [{ modifier: 3e3, type: 31 }, { modifier: 1500, type: 27 }], precondition: "" }], rarity: 6 }, "10521": { alternatives: [{ baseDuration: 0, condition: "is_finalcorner==1&corner!=0&order_rate>50&near_count>=1", effects: [{ modifier: 350, type: 9 }], precondition: "" }], rarity: 3 }, "105301111": { alternatives: [{ baseDuration: 3e4, condition: "running_style==3&is_finalcorner==1&corner!=0&is_behind_in==1&change_order_onetime<0", effects: [{ modifier: 3500, type: 27 }, { modifier: 2e3, type: 31 }], precondition: "" }], rarity: 6 }, "105301211": { alternatives: [{ baseDuration: 18e3, condition: "distance_type==2&is_finalcorner_random==1&order_rate>=50", effects: [{ modifier: 3500, type: 27 }, { modifier: 2e3, type: 31 }], precondition: "" }], rarity: 6 }, "105302111": { alternatives: [{ baseDuration: 18e3, condition: "running_style==3&phase_firsthalf_random==2&order_rate>=40", effects: [{ modifier: 4e3, type: 31 }], precondition: "" }, { baseDuration: 3e4, condition: "is_activate_other_skill_detail==1&remain_distance<=201&remain_distance>=199", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 6 }, "105302211": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==1&phase_random==2", effects: [{ modifier: 4e3, type: 31 }], precondition: "" }, { baseDuration: 3e4, condition: "is_activate_other_skill_detail==1&remain_distance<=201&remain_distance>=199", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 6 }, "105501111": { alternatives: [{ baseDuration: 24e3, condition: "distance_type==3&phase_random==1&order_rate>=50", effects: [{ modifier: 4500, type: 27 }], precondition: "" }], rarity: 6 }, "105501211": { alternatives: [{ baseDuration: 3e4, condition: "infront_near_lane_time>=1&is_lastspurt==1&hp_per>=1&remain_distance>=600", effects: [{ modifier: 4e3, type: 31 }, { modifier: 250, type: 28 }, { modifier: 1500, type: 22 }], precondition: "" }, { baseDuration: 3e4, condition: "infront_near_lane_time>=1&is_lastspurt==1&hp_per>=1", effects: [{ modifier: 4e3, type: 31 }, { modifier: 250, type: 28 }], precondition: "" }], rarity: 6 }, "105601111": { alternatives: [{ baseDuration: 4e4, condition: "distance_type==4&phase_random==2", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 6 }, "105601211": { alternatives: [{ baseDuration: -1, condition: "post_number==7", effects: [{ modifier: 8e5, type: 1 }, { modifier: 8e5, type: 2 }, { modifier: 8e5, type: 3 }], precondition: "" }], rarity: 6 }, "105602111": { alternatives: [{ baseDuration: 4e4, condition: "distance_type==4&phase==2&change_order_onetime<0", effects: [{ modifier: 3500, type: 27 }, { modifier: 1e3, type: 31 }], precondition: "" }], rarity: 6 }, "105602211": { alternatives: [{ baseDuration: 4e4, condition: "distance_type==4&is_finalcorner==1&corner!=0&lane_type==0", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 6 }, "10561": { alternatives: [{ baseDuration: 5e4, condition: "phase>=2&order>=3&blocked_front==1", effects: [{ modifier: 2500, type: 27 }, { modifier: 1e3, type: 31 }], precondition: "" }], rarity: 3 }, "105701111": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==3&corner_random==3&order_rate>=50@distance_type==4&corner_random==3&order_rate>=50", effects: [{ modifier: 4500, type: 22 }], precondition: "" }], rarity: 6 }, "105701211": { alternatives: [{ baseDuration: 9e3, condition: "running_style==4&is_lastspurt==1&corner==0", effects: [{ modifier: 4e3, type: 31 }, { modifier: 5e4, type: 8 }], precondition: "" }], rarity: 6 }, "105801111": { alternatives: [{ baseDuration: 4e4, condition: "running_style==2&is_finalcorner_random==1&order_rate<=50", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 6 }, "105801211": { alternatives: [{ baseDuration: 3e4, condition: "phase==1&change_order_onetime>0", effects: [{ modifier: 550, type: 9 }, { modifier: 1500, type: 27 }], precondition: "" }], rarity: 6 }, "105802111": { alternatives: [{ baseDuration: 18e3, condition: "running_style==2&phase_firsthalf_random==2&order_rate<=50", effects: [{ modifier: 4e3, type: 31 }, { modifier: 150, type: 9 }], precondition: "" }], rarity: 6 }, "105802211": { alternatives: [{ baseDuration: 3e4, condition: "corner_random==1@corner_random==2@corner_random==3@corner_random==4", effects: [{ modifier: 550, type: 9 }, { modifier: 1500, type: 27 }], precondition: "" }], rarity: 6 }, "105901111": { alternatives: [{ baseDuration: 3e4, condition: "running_style==3&phase_random==2&order_rate>50", effects: [{ modifier: -300, type: 9 }, { modifier: 1500, type: 22 }], precondition: "" }], rarity: 6 }, "105901211": { alternatives: [{ baseDuration: -1, condition: "track_id==10008", effects: [{ modifier: 8e5, type: 2 }, { modifier: 8e5, type: 5 }, { modifier: 8e5, type: 1 }], precondition: "" }], rarity: 6 }, "105902111": { alternatives: [{ baseDuration: 4e4, condition: "running_style==3&distance_rate_after_random==50&order_rate>=30&order_rate<=80", effects: [{ modifier: 3500, type: 27 }, { modifier: 1e3, type: 31 }], precondition: "" }], rarity: 6 }, "105902211": { alternatives: [{ baseDuration: 4e4, condition: "distance_type==3&phase_firsthalf_random==2&order_rate>=40", effects: [{ modifier: 4e3, type: 31 }], precondition: "" }], rarity: 6 }, "106001111": { alternatives: [{ baseDuration: 4e4, condition: "distance_type==3&phase>=2&blocked_front_continuetime>=1", effects: [{ modifier: 4e3, type: 31 }], precondition: "" }], rarity: 6 }, "106001211": { alternatives: [{ baseDuration: 4e4, condition: "running_style==3&phase_random==2", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 6 }, "106002111": { alternatives: [{ baseDuration: 4e4, condition: "distance_type==3&phase_random==2", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 6 }, "106002211": { alternatives: [{ baseDuration: 3e4, condition: "infront_near_lane_time>=1&is_lastspurt==1&hp_per>=1", effects: [{ modifier: 4e3, type: 31 }, { modifier: 250, type: 28 }, { modifier: 150, type: 9 }], precondition: "" }], rarity: 6 }, "10601": { alternatives: [{ baseDuration: 5e4, condition: "phase>=2&order==3&bashin_diff_behind<=1", effects: [{ modifier: 2500, type: 27 }], precondition: "" }], rarity: 3 }, "106101111": { alternatives: [{ baseDuration: 4e4, condition: "distance_type==1&phase_random==2&order_rate>50", effects: [{ modifier: 3500, type: 27 }, { modifier: 1e3, type: 31 }], precondition: "" }], rarity: 6 }, "106101211": { alternatives: [{ baseDuration: 3e4, condition: "running_style==3&phase_random==1", effects: [{ modifier: 15e4, type: 8 }, { modifier: 1500, type: 27 }], precondition: "" }], rarity: 6 }, "106102111": { alternatives: [{ baseDuration: 4e4, condition: "running_style==3&is_finalcorner==1&corner!=0&is_behind_in==1&change_order_onetime<0", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 6 }, "106102211": { alternatives: [{ baseDuration: -1, condition: "season==1@season==5", effects: [{ modifier: 8e5, type: 1 }, { modifier: 8e5, type: 3 }], precondition: "" }], rarity: 6 }, "10611": { alternatives: [{ baseDuration: 5e4, condition: "temptation_count==0&remain_distance<=201&remain_distance>=199&order>=4&order_rate<=70", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 3 }, "106201111": { alternatives: [{ baseDuration: 3e4, condition: "phase==1&is_surrounded==1", effects: [{ modifier: 550, type: 9 }, { modifier: 1500, type: 27 }], precondition: "" }], rarity: 6 }, "106201211": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==4&phase==2&change_order_onetime<0", effects: [{ modifier: 3500, type: 27 }, { modifier: 1e3, type: 31 }, { modifier: 150, type: 9 }], precondition: "" }], rarity: 6 }, "106202111": { alternatives: [{ baseDuration: 0, condition: "running_style==3&phase_firsthalf_random==1", effects: [{ modifier: 750, type: 9 }], precondition: "" }], rarity: 6 }, "106202211": { alternatives: [{ baseDuration: 4e4, condition: "distance_type==3&phase_firsthalf_random==2&order_rate>=40", effects: [{ modifier: 4e3, type: 31 }], precondition: "" }], rarity: 6 }, "10621": { alternatives: [{ baseDuration: 5e4, condition: "distance_rate>=50&phase==1&order>=3&order_rate<=70", effects: [{ modifier: 350, type: 9 }, { modifier: 1500, type: 27 }], precondition: "" }], rarity: 3 }, "106401111": { alternatives: [{ baseDuration: 4e4, condition: "behind_near_lane_time>=3&accumulatetime>=10", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 6 }, "106401211": { alternatives: [{ baseDuration: 4e4, condition: "distance_type==4&phase_random==1&bashin_diff_behind>=1&order==1", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 6 }, "106501111": { alternatives: [{ baseDuration: 4e4, condition: "distance_type==2&phase_random==1&order_rate<=50", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 6 }, "106501211": { alternatives: [{ baseDuration: 4e4, condition: "distance_type==2&phase_laterhalf_random==1&order_rate<=50", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 6 }, "106601111": { alternatives: [{ baseDuration: 27e3, condition: "phase_firsthalf_random==1&running_style==1", effects: [{ modifier: 5500, type: 27 }, { modifier: -400, type: 9 }], precondition: "" }], rarity: 6 }, "106601211": { alternatives: [{ baseDuration: 12e3, condition: "running_style==1&phase==0", effects: [{ modifier: 5e3, type: 31 }], precondition: "" }], rarity: 6 }, "10661": { alternatives: [{ baseDuration: 13e4, condition: "distance_rate>=34&distance_rate<=36&order==1&bashin_diff_behind>=1", effects: [{ modifier: 500, type: 27 }], precondition: "" }, { baseDuration: 5e6, condition: "phase==3&is_activate_other_skill_detail==1", effects: [{ modifier: -500, type: 21 }], precondition: "" }], rarity: 3 }, "106701111": { alternatives: [{ baseDuration: 3e4, condition: "running_style==3&phase_laterhalf_random==0&order_rate>=40", effects: [{ modifier: 550, type: 9 }, { modifier: 1500, type: 27 }], precondition: "" }], rarity: 6 }, "106701121": { alternatives: [{ baseDuration: 3e4, condition: "running_style==3&phase_laterhalf_random==0&order_rate>=40", effects: [{ modifier: 150, type: 9 }, { modifier: 3500, type: 27 }], precondition: "" }], rarity: 6 }, "106701211": { alternatives: [{ baseDuration: -1, condition: "rotation==1", effects: [{ modifier: 8e5, type: 1 }, { modifier: 8e5, type: 3 }], precondition: "" }], rarity: 6 }, "106702111": { alternatives: [{ baseDuration: 15e3, condition: "distance_type==4&running_style==3&is_lastspurt==1&order_rate>=40", effects: [{ modifier: 4e3, type: 31 }, { modifier: -50, type: 9 }], precondition: "" }], rarity: 6 }, "106702211": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==4&phase_random==1&order>=5", effects: [{ modifier: -100, type: 9 }, { modifier: 350, type: 9 }, { modifier: 1500, type: 27 }], precondition: "" }], rarity: 6 }, "106703111": { alternatives: [{ baseDuration: 4e4, condition: "distance_type==3&phase_firsthalf_random==2&order_rate>=40", effects: [{ modifier: 4e3, type: 31 }], precondition: "" }], rarity: 6 }, "106703211": { alternatives: [{ baseDuration: 4e4, condition: "track_id==10201&distance_type==3&all_corner_random==1&motivation==5", effects: [{ modifier: 4500, type: 27 }], precondition: "" }, { baseDuration: 3e4, condition: "track_id!=10201&distance_type==3&all_corner_random==1@track_id==10201&all_corner_random==1&motivation<=4&distance_type==3", effects: [{ modifier: 4500, type: 27 }], precondition: "" }], rarity: 6 }, "106801111": { alternatives: [{ baseDuration: 12e3, condition: "running_style==1&phase==0", effects: [{ modifier: 5e3, type: 31 }], precondition: "" }], rarity: 6 }, "106801211": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==4&straight_random==1", effects: [{ modifier: 4500, type: 27 }], precondition: "" }], rarity: 6 }, "106802111": { alternatives: [{ baseDuration: 4e4, condition: "running_style==1&phase_random==1&order_rate<=50", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 6 }, "106802211": { alternatives: [{ baseDuration: 12e3, condition: "running_style==1&phase==0", effects: [{ modifier: 5e3, type: 31 }], precondition: "" }], rarity: 6 }, "106901111": { alternatives: [{ baseDuration: 4e4, condition: "running_style==2&is_finalcorner_random==1&order_rate<=50", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 6 }, "106901211": { alternatives: [{ baseDuration: -1, condition: "season==1@season==5", effects: [{ modifier: 8e5, type: 1 }, { modifier: 8e5, type: 3 }], precondition: "" }], rarity: 6 }, "106902111": { alternatives: [{ baseDuration: 3e4, condition: "straight_random==1", effects: [{ modifier: 4500, type: 27 }], precondition: "" }], rarity: 6 }, "106902211": { alternatives: [{ baseDuration: 24e3, condition: "distance_type==3&phase==1&order_rate<=80&order_rate>=30&blocked_side_continuetime>=2", effects: [{ modifier: 3500, type: 27 }, { modifier: 550, type: 9 }], precondition: "" }], rarity: 6 }, "107001111": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==3&phase>=2&is_last_straight==1&order_rate>=20&order_rate<=60", effects: [{ modifier: 4500, type: 27 }], precondition: "" }], rarity: 6 }, "107001211": { alternatives: [{ baseDuration: 24e3, condition: "distance_type==3&phase_random==1&order_rate<=50", effects: [{ modifier: 4500, type: 27 }], precondition: "" }], rarity: 6 }, "107101111": { alternatives: [{ baseDuration: 3e4, condition: "running_style==2&phase_random==1&order_rate<=50", effects: [{ modifier: 550, type: 9 }, { modifier: 1500, type: 27 }], precondition: "" }], rarity: 6 }, "107101211": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==3&is_last_straight==1&phase>=2&order_rate>=20&order_rate<=60", effects: [{ modifier: 4500, type: 27 }], precondition: "" }], rarity: 6 }, "107102111": { alternatives: [{ baseDuration: 3e4, condition: "running_style==2&phase_laterhalf_random==1", effects: [{ modifier: 550, type: 9 }, { modifier: 1500, type: 27 }], precondition: "" }], rarity: 6 }, "107102211": { alternatives: [{ baseDuration: 3e4, condition: "running_style==2&distance_type==3&is_last_straight==1&phase>=2", effects: [{ modifier: 5500, type: 27 }, { modifier: -200, type: 9 }], precondition: "" }], rarity: 6 }, "107201111": { alternatives: [{ baseDuration: 4e4, condition: "phase==1&change_order_onetime<0", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 6 }, "107201211": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==3&is_finalcorner==1&overtake_target_time>=2", effects: [{ modifier: 4500, type: 27 }, { modifier: 1e3, type: 31 }], precondition: "" }], rarity: 6 }, "107401111": { alternatives: [{ baseDuration: 0, condition: "phase==1&change_order_onetime>0", effects: [{ modifier: 750, type: 9 }], precondition: "" }], rarity: 6 }, "107401211": { alternatives: [{ baseDuration: 12e3, condition: "distance_type==4&phase_firsthalf_random==1&order_rate>=40&order_rate<=80", effects: [{ modifier: 950, type: 9 }, { modifier: -1500, type: 21 }], precondition: "" }], rarity: 6 }, "107601111": { alternatives: [{ baseDuration: 24e3, condition: "running_style==3&phase_random==1", effects: [{ modifier: 4500, type: 27 }], precondition: "" }], rarity: 6 }, "107601211": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==4&running_style==3&phase_firsthalf_random==2&lastspurt==2", effects: [{ modifier: 4500, type: 22 }], precondition: "" }], rarity: 6 }, "107701111": { alternatives: [{ baseDuration: -1, condition: "ground_condition==1&ground_type==1", effects: [{ modifier: 8e5, type: 3 }, { modifier: 8e5, type: 1 }], precondition: "" }, { baseDuration: -1, condition: "ground_condition!=1&ground_type==1", effects: [{ modifier: 4e5, type: 3 }, { modifier: 4e5, type: 1 }], precondition: "" }], rarity: 6 }, "107701211": { alternatives: [{ baseDuration: 24e3, condition: "distance_type==4&phase_laterhalf_random==1&order_rate<=50", effects: [{ modifier: 3500, type: 27 }], precondition: "" }, { baseDuration: 9e3, condition: "is_activate_other_skill_detail==1&is_lastspurt==1", effects: [{ modifier: 2e3, type: 31 }], precondition: "" }], rarity: 6 }, "107801111": { alternatives: [{ baseDuration: 4e4, condition: "distance_type==2&phase_random==1&order_rate<=50", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 6 }, "107801211": { alternatives: [{ baseDuration: 4e4, condition: "running_style==2&order>=2&distance_diff_top<=5&distance_rate>=60&phase==1", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 6 }, "108301111": { alternatives: [{ baseDuration: 15e3, condition: "distance_type==4&running_style==3&is_lastspurt==1&order_rate>=40&track_id==10005", effects: [{ modifier: 4e3, type: 31 }, { modifier: 150, type: 9 }], precondition: "" }, { baseDuration: 15e3, condition: "distance_type==4&running_style==3&is_lastspurt==1&order_rate>=40", effects: [{ modifier: 4e3, type: 31 }, { modifier: -200, type: 9 }], precondition: "" }], rarity: 6 }, "108301211": { alternatives: [{ baseDuration: 24e3, condition: "distance_type==3&phase_laterhalf_random==1&order_rate>=50@distance_type==4&phase_laterhalf_random==1&order_rate>=50", effects: [{ modifier: 3500, type: 27 }, { modifier: 150, type: 9 }], precondition: "" }], rarity: 6 }, "108302111": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==3&phase==1&order_rate<=80&order_rate>=30&blocked_side_continuetime>=2", effects: [{ modifier: 1500, type: 27 }, { modifier: 3e3, type: 27 }, { modifier: 350, type: 9 }], precondition: "" }], rarity: 6 }, "108302211": { alternatives: [{ baseDuration: 4e4, condition: "distance_type==3&running_style==3&phase_firsthalf_random==2&order_rate>=40", effects: [{ modifier: 4e3, type: 31 }], precondition: "" }], rarity: 6 }, "108401111": { alternatives: [{ baseDuration: 3e4, condition: "running_style==4&phase_firsthalf_random==3&is_lastspurt==1", effects: [{ modifier: 4500, type: 27 }], precondition: "phase>=2&distance_diff_rate>=50" }], rarity: 6 }, "108401211": { alternatives: [{ baseDuration: -1, condition: "base_speed>=1000&base_power>=1000&distance_type==2@base_speed>=1000&base_power>=1000&distance_type==3", effects: [{ modifier: 8e5, type: 1 }, { modifier: 8e5, type: 3 }], precondition: "" }], rarity: 6 }, "108501111": { alternatives: [{ baseDuration: 18e3, condition: "running_style==3&order_rate>=40&is_finalcorner_random==1", effects: [{ modifier: 4500, type: 27 }, { modifier: -1500, type: 21 }, { modifier: -1500, type: 21 }], precondition: "" }], rarity: 6 }, "108501211": { alternatives: [{ baseDuration: 2e4, condition: "distance_type==1&phase>=2&order_rate>=50&is_overtake==1@distance_type==2&phase>=2&order_rate>=50&is_overtake==1", effects: [{ modifier: 4e3, type: 31 }, { modifier: -1500, type: 21 }], precondition: "" }], rarity: 6 }, "108601111": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==2&corner_random==3&order_rate<=50@distance_type==3&corner_random==3&order_rate<=50", effects: [{ modifier: 4500, type: 22 }], precondition: "" }], rarity: 6 }, "108601211": { alternatives: [{ baseDuration: 4e4, condition: "distance_type==2&phase_random==1@distance_type==3&phase_random==1", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 6 }, "108701111": { alternatives: [{ baseDuration: 4e4, condition: "running_style==1&phase==0", effects: [{ modifier: 4e3, type: 31 }], precondition: "" }], rarity: 6 }, "108701211": { alternatives: [{ baseDuration: 24e3, condition: "distance_type==1&phase_laterhalf_random==1&order_rate<=50", effects: [{ modifier: 3500, type: 27 }, { modifier: 2e3, type: 31 }], precondition: "" }], rarity: 6 }, "109301111": { alternatives: [{ baseDuration: 18e3, condition: "distance_type==1&running_style==2&is_finalcorner_random==1&order_rate<=50", effects: [{ modifier: 3500, type: 27 }, { modifier: 1500, type: 22 }], precondition: "" }, { baseDuration: 18e3, condition: "distance_type!=1&running_style==2&is_finalcorner_random==1&order_rate<=50", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 6 }, "109301211": { alternatives: [{ baseDuration: 18e3, condition: "running_style==2&phase_firsthalf_random==2&order_rate<=50", effects: [{ modifier: 4e3, type: 31 }], precondition: "" }, { baseDuration: 3e4, condition: "is_activate_other_skill_detail==1&remain_distance<=201&remain_distance>=199", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 6 }, "109801111": { alternatives: [{ baseDuration: 24e3, condition: "ground_type==2&phase_laterhalf_random==1&order_rate<=50", effects: [{ modifier: 4500, type: 27 }], precondition: "" }], rarity: 6 }, "109801211": { alternatives: [{ baseDuration: -1, condition: "ground_type==2&base_power>=1200", effects: [{ modifier: 1e6, type: 1 }], precondition: "" }, { baseDuration: -1, condition: "ground_type==2&base_power>=1000&base_power<1200", effects: [{ modifier: 8e5, type: 1 }], precondition: "" }], rarity: 6 }, "109901111": { alternatives: [{ baseDuration: 3e4, condition: "running_style==2&phase_laterhalf_random==0&order_rate<=50", effects: [{ modifier: 550, type: 9 }, { modifier: 1500, type: 27 }], precondition: "" }], rarity: 6 }, "109901211": { alternatives: [{ baseDuration: 24e3, condition: "ground_type==2&phase==1&blocked_side_continuetime>=2", effects: [{ modifier: 4500, type: 27 }], precondition: "" }], rarity: 6 }, "110001111": { alternatives: [{ baseDuration: 4e4, condition: "distance_type==2&is_overtake==1&accumulatetime>=5", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 6 }, "110001211": { alternatives: [{ baseDuration: 4e4, condition: "ground_type==2&accumulatetime>=5&infront_near_lane_time>=3", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 6 }, "110011": { alternatives: [{ baseDuration: 0, condition: "phase==1&order>=2&order_rate<=70&activate_count_middle>=2", effects: [{ modifier: 550, type: 9 }], precondition: "" }], rarity: 5 }, "110021": { alternatives: [{ baseDuration: 5e4, condition: "distance_rate>=66&distance_rate<=68&corner==3&order==1", effects: [{ modifier: 4500, type: 22 }], precondition: "phase==1&bashin_diff_behind>=3&order==1" }, { baseDuration: 5e4, condition: "distance_rate>=66&distance_rate<=68&order==1", effects: [{ modifier: 2500, type: 22 }], precondition: "" }], rarity: 5 }, "110031": { alternatives: [{ baseDuration: 5e4, condition: "is_last_straight==1", effects: [{ modifier: 4500, type: 27 }], precondition: "is_finalcorner==1&is_overtake==1&order<=5&order_rate<=50&overtake_target_no_order_up_time>=2" }], rarity: 5 }, "110041": { alternatives: [{ baseDuration: 5e4, condition: "distance_rate>=50&activate_count_heal>=1&order<=3", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 5 }, "110051": { alternatives: [{ baseDuration: 4e4, condition: "is_finalcorner==1&change_order_onetime<0&order_rate<=40", effects: [{ modifier: 4500, type: 27 }], precondition: "" }], rarity: 5 }, "110061": { alternatives: [{ baseDuration: 5e4, condition: "activate_count_heal>=3&distance_rate>=50", effects: [{ modifier: 2500, type: 27 }, { modifier: 3e3, type: 31 }, { modifier: 350, type: 9 }], precondition: "" }], rarity: 5 }, "110071": { alternatives: [{ baseDuration: 5e4, condition: "distance_rate_after_random==50", effects: [{ modifier: 1500, type: 27 }, { modifier: 2e4, type: 37 }], precondition: "" }], rarity: 5 }, "110081": { alternatives: [{ baseDuration: 5e4, condition: "slope==0@slope==1", effects: [{ modifier: 3500, type: 27 }, { modifier: 1e3, type: 31 }], precondition: "phase>=1&slope==2&order_rate>=50&order_rate<=80&track_id==10006" }, { baseDuration: 4e4, condition: "slope==0@slope==1", effects: [{ modifier: 3500, type: 27 }], precondition: "phase>=1&slope==2&order_rate>=50&order_rate<=80" }], rarity: 5 }, "110091": { alternatives: [{ baseDuration: 6e4, condition: "distance_rate>=50&corner==0&order==1&bashin_diff_behind<=1", effects: [{ modifier: 3500, type: 27 }], precondition: "" }, { baseDuration: 6e4, condition: "distance_rate>=50&corner==0&order<=2", effects: [{ modifier: 2500, type: 27 }], precondition: "" }], rarity: 5 }, "110101": { alternatives: [{ baseDuration: 5e4, condition: "distance_diff_top<=5&order>=2&order_rate<=40&remain_distance<=201&remain_distance>=199", effects: [{ modifier: 3500, type: 27 }, { modifier: 1500, type: 22 }], precondition: "" }, { baseDuration: 5e4, condition: "order>=2&order_rate<=40&remain_distance<=201&remain_distance>=199", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 5 }, "110111": { alternatives: [{ baseDuration: 0, condition: "phase==1&change_order_onetime>0&order_rate>=40", effects: [{ modifier: 750, type: 9 }], precondition: "" }], rarity: 5 }, "110121": { alternatives: [{ baseDuration: 4e4, condition: "distance_rate>=60&phase==1&slope==2&order_rate>=50", effects: [{ modifier: 3500, type: 27 }, { modifier: 1e3, type: 31 }], precondition: "change_order_up_middle>=3" }], rarity: 5 }, "110131": { alternatives: [{ baseDuration: 6e4, condition: "phase>=2&is_finalcorner==1&order<=4&overtake_target_time>=1", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 5 }, "110141": { alternatives: [{ baseDuration: 4e4, condition: "is_finalcorner==1&corner!=0&is_overtake==1&order>=4&order_rate<=75", effects: [{ modifier: 4e3, type: 31 }], precondition: "" }], rarity: 5 }, "110151": { alternatives: [{ baseDuration: 5e4, condition: "remain_distance<=401&remain_distance>=399&order_rate<=40&activate_count_all>=7", effects: [{ modifier: 4500, type: 27 }], precondition: "" }, { baseDuration: 5e4, condition: "remain_distance<=401&remain_distance>=399&order_rate<=40&activate_count_all<=6", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 5 }, "110161": { alternatives: [{ baseDuration: 5e4, condition: "distance_type==4&phase>=2&is_finalcorner_laterhalf==1&order_rate<=40", effects: [{ modifier: 5500, type: 27 }], precondition: "phase==1&blocked_side_continuetime>=2" }, { baseDuration: 5e4, condition: "phase>=2&is_finalcorner_laterhalf==1&order_rate<=40", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 5 }, "110171": { alternatives: [{ baseDuration: 6e4, condition: "is_finalcorner==1", effects: [{ modifier: 3500, type: 27 }], precondition: "phase>=2&order_rate<=50&overtake_target_time>=2" }], rarity: 5 }, "110181": { alternatives: [{ baseDuration: 5e4, condition: "phase==1&order>=3&order_rate<=50&is_overtake==1", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 5 }, "110191": { alternatives: [{ baseDuration: 5e4, condition: "near_count>=3&phase==1&corner!=0&order_rate>=40", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 5 }, "110201": { alternatives: [{ baseDuration: 5e4, condition: "phase>=2&corner==0&order<=2&straight_front_type==2", effects: [{ modifier: 3500, type: 27 }, { modifier: 2e3, type: 31 }], precondition: "" }, { baseDuration: 5e4, condition: "phase>=2&corner==0&order<=2", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 5 }, "110211": { alternatives: [{ baseDuration: 6e4, condition: "activate_count_middle>=2", effects: [{ modifier: 2500, type: 27 }, { modifier: 250, type: 27 }], precondition: "" }], rarity: 5 }, "110221": { alternatives: [{ baseDuration: 5e4, condition: "remain_distance>=401&phase>=2&is_finalcorner==1&order_rate>=20&order_rate<=40", effects: [{ modifier: 3500, type: 27 }, { modifier: 1e3, type: 31 }], precondition: "" }, { baseDuration: 5e4, condition: "phase>=2&is_finalcorner==1&order_rate>=20&order_rate<=40", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 5 }, "110231": { alternatives: [{ baseDuration: 5e4, condition: "order_rate_in50_continue==1&phase==1&distance_rate>=50&order>=2&order_rate<=40", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 5 }, "110241": { alternatives: [{ baseDuration: 5e4, condition: "is_finalcorner==1&order_rate<=40&change_order_onetime<0", effects: [{ modifier: 3500, type: 27 }], precondition: "" }, { baseDuration: 4e4, condition: "is_finalcorner==1&order_rate>=50&order_rate<=80&change_order_onetime<0", effects: [{ modifier: 4e3, type: 31 }], precondition: "" }], rarity: 5 }, "110261": { alternatives: [{ baseDuration: 5e4, condition: "order<=4&phase==1&corner!=0&bashin_diff_behind<=3", effects: [{ modifier: 3500, type: 27 }, { modifier: 150, type: 9 }], precondition: "" }], rarity: 5 }, "110271": { alternatives: [{ baseDuration: 4e4, condition: "distance_rate>=60&slope==2&phase==1&order>=2&distance_diff_top<=10&distance_type==3", effects: [{ modifier: 3500, type: 27 }, { modifier: 1e3, type: 31 }], precondition: "" }, { baseDuration: 4e4, condition: "distance_rate>=60&slope==2&phase==1&order>=2&distance_diff_top<=10&distance_type!=3", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 5 }, "110301": { alternatives: [{ baseDuration: 5e4, condition: "phase==1&order>=2&order_rate<=50", effects: [{ modifier: 550, type: 9 }, { modifier: -50, type: 9 }, { modifier: 2500, type: 27 }], precondition: "" }], rarity: 5 }, "110311": { alternatives: [{ baseDuration: 6e4, condition: "phase_firsthalf_random==1&order_rate<=30", effects: [{ modifier: 2500, type: 27 }, { modifier: 350, type: 9 }], precondition: "" }], rarity: 5 }, "110321": { alternatives: [{ baseDuration: 4e4, condition: "distance_rate>=50&corner!=0&order_rate>=20&order_rate<=50&track_id==10005", effects: [{ modifier: 4500, type: 27 }, { modifier: 500, type: 31 }], precondition: "" }, { baseDuration: 4e4, condition: "distance_rate>=50&corner!=0&order_rate>=20&order_rate<=50", effects: [{ modifier: 4500, type: 27 }], precondition: "" }], rarity: 5 }, "110341": { alternatives: [{ baseDuration: 5e4, condition: "is_last_straight_onetime==1", effects: [{ modifier: 3500, type: 27 }], precondition: "phase>=2&corner!=0&order_rate>=60&is_overtake==1" }], rarity: 5 }, "110351": { alternatives: [{ baseDuration: 6e4, condition: "is_lastspurt==1&is_last_straight==1&order_rate>=40", effects: [{ modifier: 2500, type: 27 }, { modifier: 500, type: 27 }], precondition: "" }], rarity: 5 }, "110361": { alternatives: [{ baseDuration: 5e4, condition: "phase>=2&is_finalcorner_laterhalf==1&is_overtake==1@phase>=2&is_finalcorner==1&corner==0&is_overtake==1", effects: [{ modifier: 4500, type: 27 }], precondition: "phase==1&change_order_onetime>0&order_rate>=50&order_rate<=80" }, { baseDuration: 5e4, condition: "phase>=2&is_finalcorner_laterhalf==1&is_overtake==1@phase>=2&is_finalcorner==1&corner==0&is_overtake==1", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 5 }, "110371": { alternatives: [{ baseDuration: 6e4, condition: "change_order_up_finalcorner_after>=2&is_last_straight==1", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 5 }, "110381": { alternatives: [{ baseDuration: 5e4, condition: "remain_distance<=350&order_rate<=40&order_rate>=20&bashin_diff_behind<=1", effects: [{ modifier: 2500, type: 27 }, { modifier: 3e3, type: 31 }], precondition: "" }], rarity: 5 }, "110391": { alternatives: [{ baseDuration: 5e4, condition: "slope==0@slope==2", effects: [{ modifier: 3500, type: 27 }], precondition: "phase>=1&slope==1&order_rate>=40&order_rate<=80" }], rarity: 5 }, "110401": { alternatives: [{ baseDuration: 5e4, condition: "is_finalcorner==1&corner!=0&order_rate>=30&order_rate<=70&blocked_side_continuetime>=2", effects: [{ modifier: 2500, type: 27 }, { modifier: 3e3, type: 31 }], precondition: "" }], rarity: 5 }, "110401111": { alternatives: [{ baseDuration: 12e3, condition: "running_style==1&phase==0", effects: [{ modifier: 5e3, type: 31 }], precondition: "" }], rarity: 6 }, "110401211": { alternatives: [{ baseDuration: 24e3, condition: "running_style==1&is_last_straight==1&order==1&track_id==10006&distance_type==3", effects: [{ modifier: 5500, type: 27 }], precondition: "phase==1&bashin_diff_behind>=3&order==1" }, { baseDuration: 24e3, condition: "running_style==1&is_last_straight==1&order==1", effects: [{ modifier: 4500, type: 27 }], precondition: "phase==1&bashin_diff_behind>=3&order==1" }], rarity: 6 }, "110411": { alternatives: [{ baseDuration: 1e4, condition: "order_rate<=20&remain_distance<=401&remain_distance>=399", effects: [{ modifier: 1e3, type: 31 }], precondition: "" }], rarity: 5 }, "110451": { alternatives: [{ baseDuration: 5e4, condition: "is_last_straight==1&order<=4&bashin_diff_infront<=1", effects: [{ modifier: 2500, type: 27 }, { modifier: 3e3, type: 31 }], precondition: "" }], rarity: 5 }, "110461": { alternatives: [{ baseDuration: 6e4, condition: "distance_rate>=40&distance_rate<=50&distance_diff_rate<=10&ground_type==2", effects: [{ modifier: 2500, type: 27 }, { modifier: 350, type: 9 }], precondition: "" }, { baseDuration: 6e4, condition: "distance_rate>=40&distance_rate<=50&distance_diff_rate<=10", effects: [{ modifier: 2500, type: 27 }], precondition: "" }], rarity: 5 }, "110481": { alternatives: [{ baseDuration: 6e4, condition: "distance_rate>=40&distance_rate<=50&order_rate>=40&order_rate<=80&motivation==5", effects: [{ modifier: 3e3, type: 27 }], precondition: "" }, { baseDuration: 6e4, condition: "distance_rate>=40&distance_rate<=50&order_rate>=40&order_rate<=80", effects: [{ modifier: 2500, type: 27 }], precondition: "" }], rarity: 5 }, "110501": { alternatives: [{ baseDuration: 5e4, condition: "phase>=2&is_finalcorner_laterhalf==1&order_rate<=75&order_rate>=40", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 5 }, "110501111": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==3&phase>=2&is_last_straight==1&order_rate>=20&order_rate<=60", effects: [{ modifier: 4500, type: 27 }], precondition: "" }], rarity: 6 }, "110501211": { alternatives: [{ baseDuration: 4e4, condition: "distance_type==3&activate_count_all>=13", effects: [{ modifier: 3500, type: 22 }], precondition: "" }], rarity: 6 }, "110511": { alternatives: [{ baseDuration: 5e4, condition: "order>=2&order_rate<=70&remain_distance<=201&remain_distance>=199&near_count>=3", effects: [{ modifier: 3500, type: 27 }, { modifier: 1500, type: 22 }], precondition: "" }, { baseDuration: 5e4, condition: "order>=2&order_rate<=70&remain_distance<=201&remain_distance>=199", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 5 }, "110521": { alternatives: [{ baseDuration: 5e4, condition: "is_finalcorner==1&corner!=0&distance_diff_top>=7", effects: [{ modifier: 2500, type: 27 }], precondition: "" }], rarity: 5 }, "110531": { alternatives: [{ baseDuration: 5e4, condition: "distance_type==1&remain_distance<=201&remain_distance>=199&order_rate>=20&order_rate<=50&change_order_up_end_after>=1", effects: [{ modifier: 4500, type: 27 }], precondition: "" }, { baseDuration: 5e4, condition: "remain_distance<=201&remain_distance>=199&order_rate>=20&order_rate<=50", effects: [{ modifier: 2500, type: 27 }], precondition: "" }], rarity: 5 }, "110561": { alternatives: [{ baseDuration: 5e4, condition: "distance_rate>=50&order_rate>=40&overtake_target_time>=2", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 5 }, "110581": { alternatives: [{ baseDuration: 5e4, condition: "is_last_straight_onetime==1&order_rate<=40", effects: [{ modifier: 3500, type: 27 }, { modifier: -500, type: 21 }, { modifier: -500, type: 21 }], precondition: "" }], rarity: 5 }, "110591": { alternatives: [{ baseDuration: 5e4, condition: "distance_rate>=60&slope==2&phase==1&order_rate>=40&order_rate<=80&remain_distance>=500", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 5 }, "110601": { alternatives: [{ baseDuration: 6e4, condition: "is_last_straight==1&order_rate>=40&order_rate<=70&popularity>=4", effects: [{ modifier: 3500, type: 27 }], precondition: "is_finalcorner==1&change_order_onetime<0" }, { baseDuration: 5e4, condition: "is_last_straight==1&order_rate>=40&order_rate<=70&popularity<4", effects: [{ modifier: 3500, type: 27 }], precondition: "is_finalcorner==1&change_order_onetime<0" }], rarity: 5 }, "110601111": { alternatives: [{ baseDuration: 0, condition: "running_style==3&phase_random==1&order_rate>=40", effects: [{ modifier: 750, type: 9 }], precondition: "" }], rarity: 6 }, "110601211": { alternatives: [{ baseDuration: 4e4, condition: "running_style==3&phase_random==1&order_rate>=40&order_rate<=90", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 6 }, "110611": { alternatives: [{ baseDuration: 4e4, condition: "is_last_straight==1", effects: [{ modifier: 4e3, type: 31 }], precondition: "distance_rate>=50&order_rate_out70_continue==1&temptation_count==0" }], rarity: 5 }, "110621": { alternatives: [{ baseDuration: 2e4, condition: "distance_rate>=50&corner!=0&order_rate>=40&order_rate<=80&distance_type==3", effects: [{ modifier: 2500, type: 27 }, { modifier: 1e3, type: 31 }], precondition: "" }, { baseDuration: 2e4, condition: "distance_rate>=50&corner!=0&order_rate>=40&order_rate<=80", effects: [{ modifier: 2500, type: 27 }], precondition: "" }], rarity: 5 }, "110671": { alternatives: [{ baseDuration: 5e4, condition: "distance_rate>=40&distance_rate<=50&order_rate>=40&order_rate<=80", effects: [{ modifier: 3500, type: 27 }, { modifier: 350, type: 9 }], precondition: "" }], rarity: 5 }, "110681": { alternatives: [{ baseDuration: 4e4, condition: "phase>=2&corner!=0&remain_distance>=600&order<=3", effects: [{ modifier: 3500, type: 22 }, { modifier: 1e3, type: 31 }], precondition: "" }], rarity: 5 }, "110691": { alternatives: [{ baseDuration: 5e4, condition: "remain_distance<=651&remain_distance>=649&order_rate<=40&order_rate>=30", effects: [{ modifier: 4e3, type: 31 }], precondition: "phase==1&blocked_side_continuetime>=2" }], rarity: 5 }, "110711": { alternatives: [{ baseDuration: 5e4, condition: "phase>=2&is_last_straight==1&order_rate>=20&order_rate<=40&bashin_diff_behind<=1", effects: [{ modifier: 3500, type: 27 }, { modifier: 1500, type: 22 }, { modifier: -300, type: 9 }], precondition: "" }], rarity: 5 }, "110831": { alternatives: [{ baseDuration: 5e4, condition: "is_last_straight==1&track_id==10005&distance_type==3", effects: [{ modifier: 5500, type: 27 }], precondition: "distance_rate>=50&distance_rate<=51&order_rate>=40&order_rate<=80" }, { baseDuration: 5e4, condition: "is_last_straight==1", effects: [{ modifier: 3500, type: 27 }], precondition: "distance_rate>=50&distance_rate<=51&order_rate>=40&order_rate<=80" }], rarity: 5 }, "120011": { alternatives: [{ baseDuration: 5e4, condition: "phase>=2&is_finalcorner==1&corner!=0&is_activate_any_skill==1", effects: [{ modifier: 4500, type: 27 }], precondition: "track_id==10005" }, { baseDuration: 5e4, condition: "phase>=2&is_finalcorner==1&corner!=0&is_activate_any_skill==1", effects: [{ modifier: 2500, type: 27 }], precondition: "" }], rarity: 5 }, "120031": { alternatives: [{ baseDuration: 5e4, condition: "phase>=2&is_finalcorner_laterhalf==1&course_distance>=2400&course_distance<=2500@phase>=2&is_finalcorner==1&corner==0&course_distance>=2400&course_distance<=2500", effects: [{ modifier: 3500, type: 27 }, { modifier: 1500, type: 22 }], precondition: "distance_rate>=50&order_rate<=50&overtake_target_time>=2" }, { baseDuration: 5e4, condition: "phase>=2&is_finalcorner_laterhalf==1@phase>=2&is_finalcorner==1&corner==0", effects: [{ modifier: 3500, type: 27 }], precondition: "distance_rate>=50&order_rate<=50&overtake_target_time>=2" }], rarity: 5 }, "120071": { alternatives: [{ baseDuration: 5e4, condition: "distance_type==3&is_finalcorner==1&is_overtake==1&order_rate>=50&is_badstart==1@distance_type==4&is_finalcorner==1&is_overtake==1&order_rate>=50&is_badstart==1", effects: [{ modifier: 4500, type: 27 }], precondition: "" }, { baseDuration: 5e4, condition: "distance_type==3&is_finalcorner==1&is_overtake==1&order_rate>=50@distance_type==4&is_finalcorner==1&is_overtake==1&order_rate>=50", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 5 }, "120131": { alternatives: [{ baseDuration: 5e4, condition: "distance_rate>=50&order_rate<=40", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 5 }, "120671": { alternatives: [{ baseDuration: 5e4, condition: "phase_laterhalf_random==1&order_rate>=40&order_rate<=80&distance_type==3", effects: [{ modifier: 3500, type: 27 }], precondition: "" }, { baseDuration: 5e4, condition: "phase_laterhalf_random==1&order_rate>=40&order_rate<=80&distance_type!=3", effects: [{ modifier: 2500, type: 27 }], precondition: "" }], rarity: 5 }, "200011": { alternatives: [{ baseDuration: -1, condition: "rotation==1", effects: [{ modifier: 6e5, type: 1 }], precondition: "" }], rarity: 1 }, "200012": { alternatives: [{ baseDuration: -1, condition: "rotation==1", effects: [{ modifier: 4e5, type: 1 }], precondition: "" }], rarity: 1 }, "200013": { alternatives: [{ baseDuration: -1, condition: "rotation==1", effects: [{ modifier: -4e5, type: 1 }], precondition: "" }], rarity: 1 }, "200014": { alternatives: [{ baseDuration: -1, condition: "rotation==1", effects: [{ modifier: 6e5, type: 1 }, { modifier: 6e5, type: 3 }], precondition: "" }], rarity: 2 }, "200021": { alternatives: [{ baseDuration: -1, condition: "rotation==2", effects: [{ modifier: 6e5, type: 1 }], precondition: "" }], rarity: 1 }, "200022": { alternatives: [{ baseDuration: -1, condition: "rotation==2", effects: [{ modifier: 4e5, type: 1 }], precondition: "" }], rarity: 1 }, "200023": { alternatives: [{ baseDuration: -1, condition: "rotation==2", effects: [{ modifier: -4e5, type: 1 }], precondition: "" }], rarity: 1 }, "200031": { alternatives: [{ baseDuration: -1, condition: "track_id==10006", effects: [{ modifier: 6e5, type: 2 }], precondition: "" }], rarity: 1 }, "200032": { alternatives: [{ baseDuration: -1, condition: "track_id==10006", effects: [{ modifier: 4e5, type: 2 }], precondition: "" }], rarity: 1 }, "200033": { alternatives: [{ baseDuration: -1, condition: "track_id==10006", effects: [{ modifier: -4e5, type: 2 }], precondition: "" }], rarity: 1 }, "200041": { alternatives: [{ baseDuration: -1, condition: "track_id==10005", effects: [{ modifier: 6e5, type: 2 }], precondition: "" }], rarity: 1 }, "200042": { alternatives: [{ baseDuration: -1, condition: "track_id==10005", effects: [{ modifier: 4e5, type: 2 }], precondition: "" }], rarity: 1 }, "200043": { alternatives: [{ baseDuration: -1, condition: "track_id==10005", effects: [{ modifier: -4e5, type: 2 }], precondition: "" }], rarity: 1 }, "200051": { alternatives: [{ baseDuration: -1, condition: "track_id==10009", effects: [{ modifier: 6e5, type: 2 }], precondition: "" }], rarity: 1 }, "200052": { alternatives: [{ baseDuration: -1, condition: "track_id==10009", effects: [{ modifier: 4e5, type: 2 }], precondition: "" }], rarity: 1 }, "200053": { alternatives: [{ baseDuration: -1, condition: "track_id==10009", effects: [{ modifier: -4e5, type: 2 }], precondition: "" }], rarity: 1 }, "200061": { alternatives: [{ baseDuration: -1, condition: "track_id==10008", effects: [{ modifier: 6e5, type: 2 }], precondition: "" }], rarity: 1 }, "200062": { alternatives: [{ baseDuration: -1, condition: "track_id==10008", effects: [{ modifier: 4e5, type: 2 }], precondition: "" }], rarity: 1 }, "200063": { alternatives: [{ baseDuration: -1, condition: "track_id==10008", effects: [{ modifier: -4e5, type: 2 }], precondition: "" }], rarity: 1 }, "200064": { alternatives: [{ baseDuration: -1, condition: "track_id==10008", effects: [{ modifier: 6e5, type: 2 }, { modifier: 6e5, type: 5 }, { modifier: 6e5, type: 1 }], precondition: "" }], rarity: 2 }, "200071": { alternatives: [{ baseDuration: -1, condition: "track_id==10007", effects: [{ modifier: 6e5, type: 2 }], precondition: "" }], rarity: 1 }, "200072": { alternatives: [{ baseDuration: -1, condition: "track_id==10007", effects: [{ modifier: 4e5, type: 2 }], precondition: "" }], rarity: 1 }, "200073": { alternatives: [{ baseDuration: -1, condition: "track_id==10007", effects: [{ modifier: -4e5, type: 2 }], precondition: "" }], rarity: 1 }, "200081": { alternatives: [{ baseDuration: -1, condition: "track_id==10001", effects: [{ modifier: 6e5, type: 2 }], precondition: "" }], rarity: 1 }, "200082": { alternatives: [{ baseDuration: -1, condition: "track_id==10001", effects: [{ modifier: 4e5, type: 2 }], precondition: "" }], rarity: 1 }, "200083": { alternatives: [{ baseDuration: -1, condition: "track_id==10001", effects: [{ modifier: -4e5, type: 2 }], precondition: "" }], rarity: 1 }, "200091": { alternatives: [{ baseDuration: -1, condition: "track_id==10002", effects: [{ modifier: 6e5, type: 2 }], precondition: "" }], rarity: 1 }, "200092": { alternatives: [{ baseDuration: -1, condition: "track_id==10002", effects: [{ modifier: 4e5, type: 2 }], precondition: "" }], rarity: 1 }, "200093": { alternatives: [{ baseDuration: -1, condition: "track_id==10002", effects: [{ modifier: -4e5, type: 2 }], precondition: "" }], rarity: 1 }, "200101": { alternatives: [{ baseDuration: -1, condition: "track_id==10004", effects: [{ modifier: 6e5, type: 2 }], precondition: "" }], rarity: 1 }, "200102": { alternatives: [{ baseDuration: -1, condition: "track_id==10004", effects: [{ modifier: 4e5, type: 2 }], precondition: "" }], rarity: 1 }, "200103": { alternatives: [{ baseDuration: -1, condition: "track_id==10004", effects: [{ modifier: -4e5, type: 2 }], precondition: "" }], rarity: 1 }, "200111": { alternatives: [{ baseDuration: -1, condition: "track_id==10003", effects: [{ modifier: 6e5, type: 2 }], precondition: "" }], rarity: 1 }, "200112": { alternatives: [{ baseDuration: -1, condition: "track_id==10003", effects: [{ modifier: 4e5, type: 2 }], precondition: "" }], rarity: 1 }, "200113": { alternatives: [{ baseDuration: -1, condition: "track_id==10003", effects: [{ modifier: -4e5, type: 2 }], precondition: "" }], rarity: 1 }, "200121": { alternatives: [{ baseDuration: -1, condition: "track_id==10010", effects: [{ modifier: 6e5, type: 2 }], precondition: "" }], rarity: 1 }, "200122": { alternatives: [{ baseDuration: -1, condition: "track_id==10010", effects: [{ modifier: 4e5, type: 2 }], precondition: "" }], rarity: 1 }, "200123": { alternatives: [{ baseDuration: -1, condition: "track_id==10010", effects: [{ modifier: -4e5, type: 2 }], precondition: "" }], rarity: 1 }, "200131": { alternatives: [{ baseDuration: -1, condition: "is_basis_distance==1", effects: [{ modifier: 6e5, type: 2 }], precondition: "" }], rarity: 1 }, "200132": { alternatives: [{ baseDuration: -1, condition: "is_basis_distance==1", effects: [{ modifier: 4e5, type: 2 }], precondition: "" }], rarity: 1 }, "200133": { alternatives: [{ baseDuration: -1, condition: "is_basis_distance==1", effects: [{ modifier: -4e5, type: 2 }], precondition: "" }], rarity: 1 }, "200141": { alternatives: [{ baseDuration: -1, condition: "is_basis_distance==0", effects: [{ modifier: 6e5, type: 2 }], precondition: "" }], rarity: 1 }, "200142": { alternatives: [{ baseDuration: -1, condition: "is_basis_distance==0", effects: [{ modifier: 4e5, type: 2 }], precondition: "" }], rarity: 1 }, "200143": { alternatives: [{ baseDuration: -1, condition: "is_basis_distance==0", effects: [{ modifier: -4e5, type: 2 }], precondition: "" }], rarity: 1 }, "200151": { alternatives: [{ baseDuration: -1, condition: "ground_condition==1", effects: [{ modifier: 6e5, type: 3 }], precondition: "" }], rarity: 1 }, "200152": { alternatives: [{ baseDuration: -1, condition: "ground_condition==1", effects: [{ modifier: 4e5, type: 3 }], precondition: "" }], rarity: 1 }, "200153": { alternatives: [{ baseDuration: -1, condition: "ground_condition==1", effects: [{ modifier: -4e5, type: 3 }], precondition: "" }], rarity: 1 }, "200154": { alternatives: [{ baseDuration: -1, condition: "ground_condition==1", effects: [{ modifier: 6e5, type: 3 }, { modifier: 6e5, type: 1 }], precondition: "" }], rarity: 2 }, "200161": { alternatives: [{ baseDuration: -1, condition: "ground_condition==2@ground_condition==3@ground_condition==4", effects: [{ modifier: 6e5, type: 3 }], precondition: "" }], rarity: 1 }, "200162": { alternatives: [{ baseDuration: -1, condition: "ground_condition==2@ground_condition==3@ground_condition==4", effects: [{ modifier: 4e5, type: 3 }], precondition: "" }], rarity: 1 }, "200163": { alternatives: [{ baseDuration: -1, condition: "ground_condition==2@ground_condition==3@ground_condition==4", effects: [{ modifier: -4e5, type: 3 }], precondition: "" }], rarity: 1 }, "200164": { alternatives: [{ baseDuration: -1, condition: "ground_condition==2@ground_condition==3@ground_condition==4", effects: [{ modifier: 6e5, type: 3 }, { modifier: 6e5, type: 1 }], precondition: "" }], rarity: 2 }, "200171": { alternatives: [{ baseDuration: -1, condition: "season==1@season==5", effects: [{ modifier: 6e5, type: 1 }], precondition: "" }], rarity: 1 }, "200172": { alternatives: [{ baseDuration: -1, condition: "season==1@season==5", effects: [{ modifier: 4e5, type: 1 }], precondition: "" }], rarity: 1 }, "200173": { alternatives: [{ baseDuration: -1, condition: "season==1@season==5", effects: [{ modifier: -4e5, type: 1 }], precondition: "" }], rarity: 1 }, "200174": { alternatives: [{ baseDuration: -1, condition: "season==1@season==5", effects: [{ modifier: 6e5, type: 1 }, { modifier: 6e5, type: 3 }], precondition: "" }], rarity: 2 }, "200181": { alternatives: [{ baseDuration: -1, condition: "season==2", effects: [{ modifier: 6e5, type: 1 }], precondition: "" }], rarity: 1 }, "200182": { alternatives: [{ baseDuration: -1, condition: "season==2", effects: [{ modifier: 4e5, type: 1 }], precondition: "" }], rarity: 1 }, "200183": { alternatives: [{ baseDuration: -1, condition: "season==2", effects: [{ modifier: -4e5, type: 1 }], precondition: "" }], rarity: 1 }, "200184": { alternatives: [{ baseDuration: -1, condition: "season==2", effects: [{ modifier: 6e5, type: 1 }, { modifier: 6e5, type: 3 }], precondition: "" }], rarity: 2 }, "200191": { alternatives: [{ baseDuration: -1, condition: "season==3", effects: [{ modifier: 6e5, type: 1 }], precondition: "" }], rarity: 1 }, "200192": { alternatives: [{ baseDuration: -1, condition: "season==3", effects: [{ modifier: 4e5, type: 1 }], precondition: "" }], rarity: 1 }, "200193": { alternatives: [{ baseDuration: -1, condition: "season==3", effects: [{ modifier: -4e5, type: 1 }], precondition: "" }], rarity: 1 }, "200194": { alternatives: [{ baseDuration: -1, condition: "season==3", effects: [{ modifier: 6e5, type: 1 }, { modifier: 6e5, type: 3 }], precondition: "" }], rarity: 2 }, "200201": { alternatives: [{ baseDuration: -1, condition: "season==4", effects: [{ modifier: 6e5, type: 1 }], precondition: "" }], rarity: 1 }, "200202": { alternatives: [{ baseDuration: -1, condition: "season==4", effects: [{ modifier: 4e5, type: 1 }], precondition: "" }], rarity: 1 }, "200203": { alternatives: [{ baseDuration: -1, condition: "season==4", effects: [{ modifier: -4e5, type: 1 }], precondition: "" }], rarity: 1 }, "200211": { alternatives: [{ baseDuration: -1, condition: "weather==1", effects: [{ modifier: 6e5, type: 4 }], precondition: "" }], rarity: 1 }, "200212": { alternatives: [{ baseDuration: -1, condition: "weather==1", effects: [{ modifier: 4e5, type: 4 }], precondition: "" }], rarity: 1 }, "200221": { alternatives: [{ baseDuration: -1, condition: "weather==2", effects: [{ modifier: 6e5, type: 4 }], precondition: "" }], rarity: 1 }, "200222": { alternatives: [{ baseDuration: -1, condition: "weather==2", effects: [{ modifier: 4e5, type: 4 }], precondition: "" }], rarity: 1 }, "200231": { alternatives: [{ baseDuration: -1, condition: "weather==3", effects: [{ modifier: 6e5, type: 4 }], precondition: "" }], rarity: 1 }, "200232": { alternatives: [{ baseDuration: -1, condition: "weather==3", effects: [{ modifier: 4e5, type: 4 }], precondition: "" }], rarity: 1 }, "200233": { alternatives: [{ baseDuration: -1, condition: "weather==3", effects: [{ modifier: -4e5, type: 4 }], precondition: "" }], rarity: 1 }, "200241": { alternatives: [{ baseDuration: -1, condition: "weather==4", effects: [{ modifier: 6e5, type: 4 }], precondition: "" }], rarity: 1 }, "200242": { alternatives: [{ baseDuration: -1, condition: "weather==4", effects: [{ modifier: 4e5, type: 4 }], precondition: "" }], rarity: 1 }, "200251": { alternatives: [{ baseDuration: -1, condition: "post_number<=3", effects: [{ modifier: 6e5, type: 5 }], precondition: "" }], rarity: 1 }, "200252": { alternatives: [{ baseDuration: -1, condition: "post_number<=3", effects: [{ modifier: 4e5, type: 5 }], precondition: "" }], rarity: 1 }, "200253": { alternatives: [{ baseDuration: -1, condition: "post_number<=3", effects: [{ modifier: -4e5, type: 5 }], precondition: "" }], rarity: 1 }, "200261": { alternatives: [{ baseDuration: -1, condition: "post_number>=6", effects: [{ modifier: 6e5, type: 1 }], precondition: "" }], rarity: 1 }, "200262": { alternatives: [{ baseDuration: -1, condition: "post_number>=6", effects: [{ modifier: 4e5, type: 1 }], precondition: "" }], rarity: 1 }, "200263": { alternatives: [{ baseDuration: -1, condition: "post_number>=6", effects: [{ modifier: -4e5, type: 1 }], precondition: "" }], rarity: 1 }, "200271": { alternatives: [{ baseDuration: -1, condition: "running_style_count_same<=1", effects: [{ modifier: 8e5, type: 1 }], precondition: "" }], rarity: 1 }, "200272": { alternatives: [{ baseDuration: -1, condition: "running_style_count_same<=1", effects: [{ modifier: 6e5, type: 1 }], precondition: "" }], rarity: 1 }, "200281": { alternatives: [{ baseDuration: -1, condition: "running_style_count_same_rate>=40", effects: [{ modifier: 6e5, type: 3 }], precondition: "" }], rarity: 1 }, "200282": { alternatives: [{ baseDuration: -1, condition: "running_style_count_same_rate>=40", effects: [{ modifier: 4e5, type: 3 }], precondition: "" }], rarity: 1 }, "200283": { alternatives: [{ baseDuration: -1, condition: "running_style_count_same_rate>=40", effects: [{ modifier: -4e5, type: 3 }], precondition: "" }], rarity: 1 }, "200291": { alternatives: [{ baseDuration: -1, condition: "running_style_equal_popularity_one==1", effects: [{ modifier: 6e5, type: 4 }], precondition: "" }], rarity: 1 }, "200292": { alternatives: [{ baseDuration: -1, condition: "running_style_equal_popularity_one==1", effects: [{ modifier: 4e5, type: 4 }], precondition: "" }], rarity: 1 }, "200301": { alternatives: [{ baseDuration: -1, condition: "popularity>=4", effects: [{ modifier: 6e5, type: 1 }], precondition: "" }], rarity: 1 }, "200302": { alternatives: [{ baseDuration: -1, condition: "popularity>=4", effects: [{ modifier: 4e5, type: 1 }], precondition: "" }], rarity: 1 }, "200311": { alternatives: [{ baseDuration: -1, condition: "grade==100", effects: [{ modifier: -4e5, type: 1 }], precondition: "" }], rarity: 1 }, "200321": { alternatives: [{ baseDuration: -1, condition: "popularity==1", effects: [{ modifier: -4e5, type: 2 }], precondition: "" }], rarity: 1 }, "200331": { alternatives: [{ baseDuration: 24e3, condition: "all_corner_random==1", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 2 }, "200332": { alternatives: [{ baseDuration: 24e3, condition: "all_corner_random==1", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "200333": { alternatives: [{ baseDuration: 24e3, condition: "all_corner_random==1", effects: [{ modifier: -2e3, type: 21 }], precondition: "" }], rarity: 1 }, "200341": { alternatives: [{ baseDuration: 3e4, condition: "all_corner_random==1", effects: [{ modifier: 4e3, type: 31 }], precondition: "" }], rarity: 2 }, "200342": { alternatives: [{ baseDuration: 3e4, condition: "all_corner_random==1", effects: [{ modifier: 2e3, type: 31 }], precondition: "" }], rarity: 1 }, "200343": { alternatives: [{ baseDuration: 3e4, condition: "all_corner_random==1", effects: [{ modifier: -2e3, type: 31 }], precondition: "" }], rarity: 1 }, "200351": { alternatives: [{ baseDuration: 0, condition: "corner_random==1@corner_random==2@corner_random==3@corner_random==4", effects: [{ modifier: 550, type: 9 }], precondition: "" }], rarity: 2 }, "200352": { alternatives: [{ baseDuration: 0, condition: "corner_random==1@corner_random==2@corner_random==3@corner_random==4", effects: [{ modifier: 150, type: 9 }], precondition: "" }], rarity: 1 }, "200353": { alternatives: [{ baseDuration: 0, condition: "corner_random==1@corner_random==2@corner_random==3@corner_random==4", effects: [{ modifier: -200, type: 9 }], precondition: "" }], rarity: 1 }, "200361": { alternatives: [{ baseDuration: 3e4, condition: "straight_random==1", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 2 }, "200362": { alternatives: [{ baseDuration: 3e4, condition: "straight_random==1", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "200371": { alternatives: [{ baseDuration: 3e4, condition: "straight_random==1", effects: [{ modifier: 4e3, type: 31 }, { modifier: 1500, type: 27 }], precondition: "" }], rarity: 2 }, "200372": { alternatives: [{ baseDuration: 3e4, condition: "straight_random==1", effects: [{ modifier: 2e3, type: 31 }], precondition: "" }], rarity: 1 }, "200381": { alternatives: [{ baseDuration: 0, condition: "phase==1&corner==0", effects: [{ modifier: 550, type: 9 }], precondition: "" }], rarity: 2 }, "200382": { alternatives: [{ baseDuration: 0, condition: "phase==1&corner==0", effects: [{ modifier: 150, type: 9 }], precondition: "" }], rarity: 1 }, "200391": { alternatives: [{ baseDuration: 0, condition: "up_slope_random==1", effects: [{ modifier: -200, type: 9 }], precondition: "" }], rarity: 1 }, "200401": { alternatives: [{ baseDuration: 0, condition: "accumulatetime>=2&is_surrounded==1", effects: [{ modifier: -200, type: 9 }], precondition: "" }], rarity: 1 }, "200411": { alternatives: [{ baseDuration: 3e4, condition: "last_straight_random==1&distance_diff_rate>=75", effects: [{ modifier: -2e3, type: 21 }], precondition: "" }], rarity: 1 }, "200421": { alternatives: [{ baseDuration: 3e4, condition: "remain_distance==200&order==1&bashin_diff_behind>=1", effects: [{ modifier: -2e3, type: 21 }], precondition: "" }], rarity: 1 }, "200431": { alternatives: [{ baseDuration: 0, condition: "always==1", effects: [{ modifier: 4e3, type: 10 }], precondition: "" }], rarity: 2 }, "200432": { alternatives: [{ baseDuration: 0, condition: "always==1", effects: [{ modifier: 9e3, type: 10 }], precondition: "" }], rarity: 1 }, "200433": { alternatives: [{ baseDuration: 0, condition: "always==1", effects: [{ modifier: 15e3, type: 10 }], precondition: "" }], rarity: 1 }, "200441": { alternatives: [{ baseDuration: 2e4, condition: "phase<=1&accumulatetime>=5&blocked_front_continuetime>=1", effects: [{ modifier: 550, type: 9 }, { modifier: 350, type: 28 }], precondition: "" }], rarity: 2 }, "200442": { alternatives: [{ baseDuration: 2e4, condition: "phase<=1&accumulatetime>=5&blocked_front_continuetime>=1", effects: [{ modifier: 150, type: 9 }, { modifier: 150, type: 28 }], precondition: "" }], rarity: 1 }, "200451": { alternatives: [{ baseDuration: 3e4, condition: "phase_random==0", effects: [{ modifier: 450, type: 28 }], precondition: "" }], rarity: 2 }, "200452": { alternatives: [{ baseDuration: 3e4, condition: "phase_random==0", effects: [{ modifier: 350, type: 28 }], precondition: "" }], rarity: 1 }, "200461": { alternatives: [{ baseDuration: 18e3, condition: "phase==1&change_order_onetime<0", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 2 }, "200462": { alternatives: [{ baseDuration: 18e3, condition: "phase==1&change_order_onetime<0", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "200471": { alternatives: [{ baseDuration: 0, condition: "phase==1&change_order_onetime>0", effects: [{ modifier: 550, type: 9 }], precondition: "" }], rarity: 2 }, "200472": { alternatives: [{ baseDuration: 0, condition: "phase==1&change_order_onetime>0", effects: [{ modifier: 150, type: 9 }], precondition: "" }], rarity: 1 }, "200481": { alternatives: [{ baseDuration: 0, condition: "phase==1&is_surrounded==1", effects: [{ modifier: 550, type: 9 }], precondition: "" }], rarity: 2 }, "200482": { alternatives: [{ baseDuration: 0, condition: "phase==1&is_surrounded==1", effects: [{ modifier: 150, type: 9 }], precondition: "" }], rarity: 1 }, "200491": { alternatives: [{ baseDuration: 3e4, condition: "infront_near_lane_time>=1&is_lastspurt==1&hp_per>=1", effects: [{ modifier: 4e3, type: 31 }, { modifier: 250, type: 28 }], precondition: "" }], rarity: 2 }, "200492": { alternatives: [{ baseDuration: 3e4, condition: "infront_near_lane_time>=1&is_lastspurt==1&hp_per>=1", effects: [{ modifier: 2e3, type: 31 }, { modifier: 50, type: 28 }], precondition: "" }], rarity: 1 }, "200501": { alternatives: [{ baseDuration: 3e4, condition: "phase_random==2", effects: [{ modifier: 350, type: 28 }], precondition: "" }], rarity: 2 }, "200502": { alternatives: [{ baseDuration: 3e4, condition: "phase_random==2", effects: [{ modifier: 250, type: 28 }], precondition: "" }], rarity: 1 }, "200511": { alternatives: [{ baseDuration: 24e3, condition: "is_lastspurt==1&phase_firsthalf_random==3", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 2 }, "200512": { alternatives: [{ baseDuration: 24e3, condition: "is_lastspurt==1&phase_firsthalf_random==3", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "200521": { alternatives: [{ baseDuration: 0, condition: "accumulatetime>=2&order==1&bashin_diff_behind>=1", effects: [{ modifier: -200, type: 9 }], precondition: "" }], rarity: 1 }, "200531": { alternatives: [{ baseDuration: 12e3, condition: "running_style==1&phase==0", effects: [{ modifier: 4e3, type: 31 }], precondition: "" }], rarity: 2 }, "200532": { alternatives: [{ baseDuration: 12e3, condition: "running_style==1&phase==0", effects: [{ modifier: 2e3, type: 31 }], precondition: "" }], rarity: 1 }, "200541": { alternatives: [{ baseDuration: 3e4, condition: "running_style==1&phase_random==1&order_rate<=50", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 2 }, "200542": { alternatives: [{ baseDuration: 3e4, condition: "running_style==1&phase_random==1&order_rate<=50", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "200551": { alternatives: [{ baseDuration: 3e4, condition: "running_style==1&is_finalcorner_random==1&order==1", effects: [{ modifier: 4e3, type: 31 }], precondition: "" }], rarity: 2 }, "200552": { alternatives: [{ baseDuration: 3e4, condition: "running_style==1&is_finalcorner_random==1&order==1", effects: [{ modifier: 2e3, type: 31 }], precondition: "" }], rarity: 1 }, "200561": { alternatives: [{ baseDuration: 0, condition: "running_style==2&phase_laterhalf_random==0&order_rate<=50", effects: [{ modifier: 550, type: 9 }], precondition: "" }], rarity: 2 }, "200562": { alternatives: [{ baseDuration: 0, condition: "running_style==2&phase_laterhalf_random==0&order_rate<=50", effects: [{ modifier: 150, type: 9 }], precondition: "" }], rarity: 1 }, "200571": { alternatives: [{ baseDuration: 0, condition: "running_style==2&phase_random==1&order_rate<=50", effects: [{ modifier: 550, type: 9 }], precondition: "" }], rarity: 2 }, "200572": { alternatives: [{ baseDuration: 0, condition: "running_style==2&phase_random==1&order_rate<=50", effects: [{ modifier: 150, type: 9 }], precondition: "" }], rarity: 1 }, "200581": { alternatives: [{ baseDuration: 18e3, condition: "running_style==2&is_finalcorner_random==1&order_rate<=50", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 2 }, "200582": { alternatives: [{ baseDuration: 18e3, condition: "running_style==2&is_finalcorner_random==1&order_rate<=50", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "200591": { alternatives: [{ baseDuration: 24e3, condition: "running_style==3&phase_random==1&order_rate>=40", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 2 }, "200592": { alternatives: [{ baseDuration: 24e3, condition: "running_style==3&phase_random==1&order_rate>=40", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "200601": { alternatives: [{ baseDuration: 18e3, condition: "running_style==3&phase_firsthalf_random==2&order_rate>=40", effects: [{ modifier: 4e3, type: 31 }], precondition: "" }], rarity: 2 }, "200602": { alternatives: [{ baseDuration: 18e3, condition: "running_style==3&phase_firsthalf_random==2&order_rate>=40", effects: [{ modifier: 2e3, type: 31 }], precondition: "" }], rarity: 1 }, "200611": { alternatives: [{ baseDuration: 3e4, condition: "running_style==3&is_finalcorner==1&corner!=0&is_behind_in==1&change_order_onetime<0", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 2 }, "200612": { alternatives: [{ baseDuration: 3e4, condition: "running_style==3&is_finalcorner==1&corner!=0&is_behind_in==1&change_order_onetime<0", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "200621": { alternatives: [{ baseDuration: 0, condition: "running_style==4&phase_random==1&distance_diff_rate>=75", effects: [{ modifier: 550, type: 9 }], precondition: "" }], rarity: 2 }, "200622": { alternatives: [{ baseDuration: 0, condition: "running_style==4&phase_random==1&distance_diff_rate>=75", effects: [{ modifier: 150, type: 9 }], precondition: "" }], rarity: 1 }, "200631": { alternatives: [{ baseDuration: 3e4, condition: "running_style==4&phase_firsthalf_random==3&is_lastspurt==1", effects: [{ modifier: 3500, type: 27 }], precondition: "phase==2&distance_diff_rate>=50" }], rarity: 2 }, "200632": { alternatives: [{ baseDuration: 3e4, condition: "running_style==4&phase_firsthalf_random==3&is_lastspurt==1", effects: [{ modifier: 1500, type: 27 }], precondition: "phase==2&distance_diff_rate>=50" }], rarity: 1 }, "200641": { alternatives: [{ baseDuration: 9e3, condition: "running_style==4&is_lastspurt==1&corner==0", effects: [{ modifier: 4e3, type: 31 }], precondition: "" }], rarity: 2 }, "200642": { alternatives: [{ baseDuration: 9e3, condition: "running_style==4&is_lastspurt==1&corner==0", effects: [{ modifier: 2e3, type: 31 }], precondition: "" }], rarity: 1 }, "200651": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==1&phase_random==2", effects: [{ modifier: 4e3, type: 31 }], precondition: "" }], rarity: 2 }, "200652": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==1&phase_random==2", effects: [{ modifier: 2e3, type: 31 }], precondition: "" }], rarity: 1 }, "200662": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==1&phase_random==1&order_rate>50", effects: [{ modifier: 150, type: 9 }, { modifier: 1e3, type: 31 }], precondition: "" }], rarity: 1 }, "200671": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==1&phase_random==2&order_rate>50", effects: [{ modifier: 3500, type: 27 }, { modifier: 1e3, type: 31 }], precondition: "" }], rarity: 2 }, "200672": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==1&phase_random==2&order_rate>50", effects: [{ modifier: 1500, type: 27 }, { modifier: 500, type: 31 }], precondition: "" }], rarity: 1 }, "200681": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==2&phase_laterhalf_random==0&order_rate<=50", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 2 }, "200682": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==2&phase_laterhalf_random==0&order_rate<=50", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "200691": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==2&phase_laterhalf_random==0&order_rate>50", effects: [{ modifier: 550, type: 9 }, { modifier: -2e3, type: 21 }], precondition: "" }], rarity: 2 }, "200692": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==2&phase_laterhalf_random==0&order_rate>50", effects: [{ modifier: 150, type: 9 }, { modifier: -500, type: 21 }], precondition: "" }], rarity: 1 }, "200701": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==2&phase_random==2&order_rate>50", effects: [{ modifier: 4e3, type: 31 }], precondition: "" }], rarity: 2 }, "200702": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==2&phase_random==2&order_rate>50", effects: [{ modifier: 2e3, type: 31 }], precondition: "" }], rarity: 1 }, "200711": { alternatives: [{ baseDuration: 0, condition: "distance_type==3&phase_random==1&order<=3", effects: [{ modifier: 550, type: 9 }], precondition: "" }], rarity: 2 }, "200712": { alternatives: [{ baseDuration: 0, condition: "distance_type==3&phase_random==1&order<=3", effects: [{ modifier: 150, type: 9 }], precondition: "" }], rarity: 1 }, "200721": { alternatives: [{ baseDuration: 24e3, condition: "distance_type==3&phase_random==1&order_rate<=50", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 2 }, "200722": { alternatives: [{ baseDuration: 24e3, condition: "distance_type==3&phase_random==1&order_rate<=50", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "200731": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==3&is_finalcorner==1&overtake_target_time>=2", effects: [{ modifier: 3500, type: 27 }, { modifier: 1e3, type: 31 }], precondition: "" }], rarity: 2 }, "200732": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==3&is_finalcorner==1&overtake_target_time>=2", effects: [{ modifier: 1500, type: 27 }, { modifier: 500, type: 31 }], precondition: "" }], rarity: 1 }, "200741": { alternatives: [{ baseDuration: 0, condition: "distance_type==4&phase_random==1", effects: [{ modifier: 550, type: 9 }], precondition: "" }], rarity: 2 }, "200742": { alternatives: [{ baseDuration: 0, condition: "distance_type==4&phase_random==1", effects: [{ modifier: 150, type: 9 }], precondition: "" }], rarity: 1 }, "200751": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==4&is_finalcorner==1&corner!=0&lane_type==0", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 2 }, "200752": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==4&is_finalcorner==1&corner!=0&lane_type==0", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "200761": { alternatives: [{ baseDuration: 18e3, condition: "distance_type==4&hp_per<=30", effects: [{ modifier: 550, type: 9 }, { modifier: 3500, type: 27 }], precondition: "" }], rarity: 2 }, "200762": { alternatives: [{ baseDuration: 0, condition: "distance_type==4&hp_per<=30", effects: [{ modifier: 150, type: 9 }], precondition: "" }], rarity: 1 }, "200771": { alternatives: [{ baseDuration: 0, condition: "phase==1&order_rate<=50&temptation_opponent_count_behind>=1", effects: [{ modifier: -100, type: 9 }], precondition: "" }], rarity: 1 }, "200772": { alternatives: [{ baseDuration: 0, condition: "phase==1&order_rate<=50&temptation_opponent_count_behind>=1", effects: [{ modifier: -300, type: 9 }], precondition: "" }], rarity: 2 }, "200781": { alternatives: [{ baseDuration: 0, condition: "phase==1&order_rate>50&temptation_opponent_count_infront>=1", effects: [{ modifier: -100, type: 9 }], precondition: "" }], rarity: 1 }, "200791": { alternatives: [{ baseDuration: 0, condition: "running_style_temptation_opponent_count_nige>=1&is_temptation==0", effects: [{ modifier: 5e4, type: 13 }], precondition: "" }], rarity: 1 }, "200801": { alternatives: [{ baseDuration: 0, condition: "running_style_temptation_opponent_count_senko>=1&is_temptation==0", effects: [{ modifier: 5e4, type: 13 }], precondition: "" }], rarity: 1 }, "200811": { alternatives: [{ baseDuration: 0, condition: "running_style_temptation_opponent_count_sashi>=1&is_temptation==0", effects: [{ modifier: 5e4, type: 13 }], precondition: "" }], rarity: 1 }, "200821": { alternatives: [{ baseDuration: 0, condition: "running_style_temptation_opponent_count_oikomi>=1&is_temptation==0", effects: [{ modifier: 5e4, type: 13 }], precondition: "" }], rarity: 1 }, "200831": { alternatives: [{ baseDuration: 0, condition: "running_style_count_nige_otherself>=1&phase_random==0&accumulatetime>=5", effects: [{ modifier: -100, type: 9 }], precondition: "" }], rarity: 1 }, "200841": { alternatives: [{ baseDuration: 0, condition: "running_style_count_nige_otherself>=1&phase_random==1", effects: [{ modifier: -100, type: 9 }], precondition: "" }], rarity: 1 }, "200851": { alternatives: [{ baseDuration: 3e4, condition: "running_style_count_nige_otherself>=1&phase_random==2", effects: [{ modifier: -1500, type: 21 }], precondition: "" }], rarity: 1 }, "200861": { alternatives: [{ baseDuration: 0, condition: "running_style_count_senko_otherself>=1&phase_random==0&accumulatetime>=5", effects: [{ modifier: -100, type: 9 }], precondition: "" }], rarity: 1 }, "200871": { alternatives: [{ baseDuration: 0, condition: "running_style_count_senko_otherself>=1&phase_random==1", effects: [{ modifier: -100, type: 9 }], precondition: "" }], rarity: 1 }, "200881": { alternatives: [{ baseDuration: 3e4, condition: "running_style_count_senko_otherself>=1&phase_random==2", effects: [{ modifier: -1500, type: 21 }], precondition: "" }], rarity: 1 }, "200891": { alternatives: [{ baseDuration: 0, condition: "running_style_count_sashi_otherself>=1&phase_random==0&accumulatetime>=5", effects: [{ modifier: -100, type: 9 }], precondition: "" }], rarity: 1 }, "200901": { alternatives: [{ baseDuration: 0, condition: "running_style_count_sashi_otherself>=1&phase_random==1", effects: [{ modifier: -100, type: 9 }], precondition: "" }], rarity: 1 }, "200911": { alternatives: [{ baseDuration: 3e4, condition: "running_style_count_sashi_otherself>=1&phase_random==2", effects: [{ modifier: -1500, type: 21 }], precondition: "" }], rarity: 1 }, "200921": { alternatives: [{ baseDuration: 0, condition: "running_style_count_oikomi_otherself>=1&phase_random==0&accumulatetime>=5", effects: [{ modifier: -100, type: 9 }], precondition: "" }], rarity: 1 }, "200931": { alternatives: [{ baseDuration: 0, condition: "running_style_count_oikomi_otherself>=1&phase_random==1", effects: [{ modifier: -100, type: 9 }], precondition: "" }], rarity: 1 }, "200941": { alternatives: [{ baseDuration: 3e4, condition: "running_style_count_oikomi_otherself>=1&phase_random==2", effects: [{ modifier: -1500, type: 21 }], precondition: "" }], rarity: 1 }, "200951": { alternatives: [{ baseDuration: -1, condition: "track_id==10101", effects: [{ modifier: 6e5, type: 2 }], precondition: "" }], rarity: 1 }, "200952": { alternatives: [{ baseDuration: -1, condition: "track_id==10101", effects: [{ modifier: 4e5, type: 2 }], precondition: "" }], rarity: 1 }, "200953": { alternatives: [{ baseDuration: -1, condition: "track_id==10101", effects: [{ modifier: -4e5, type: 2 }], precondition: "" }], rarity: 1 }, "200961": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==1&straight_random==1", effects: [{ modifier: 2500, type: 27 }], precondition: "" }], rarity: 1 }, "200962": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==1&straight_random==1", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "200963": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==1&straight_random==1", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 2 }, "200971": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==1&all_corner_random==1", effects: [{ modifier: 2500, type: 27 }], precondition: "" }], rarity: 1 }, "200972": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==1&all_corner_random==1", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "200981": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==1&phase==1&bashin_diff_behind>=3&order==1", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 2 }, "200982": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==1&phase==1&bashin_diff_behind>=3&order==1", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "200991": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==1&phase_laterhalf_random==1&order>=2&order_rate<=50", effects: [{ modifier: 4e3, type: 31 }], precondition: "" }], rarity: 2 }, "200992": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==1&phase_laterhalf_random==1&order>=2&order_rate<=50", effects: [{ modifier: 2e3, type: 31 }], precondition: "" }], rarity: 1 }, "201001": { alternatives: [{ baseDuration: 4e4, condition: "distance_type==1&phase_random==1", effects: [{ modifier: 350, type: 28 }, { modifier: 3e3, type: 31 }], precondition: "" }], rarity: 2 }, "201002": { alternatives: [{ baseDuration: 4e4, condition: "distance_type==1&phase_random==1", effects: [{ modifier: 250, type: 28 }, { modifier: 2e3, type: 31 }], precondition: "" }], rarity: 1 }, "201011": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==1&phase_random==0&order_rate<=50&accumulatetime>=5", effects: [{ modifier: -2500, type: 21 }], precondition: "" }], rarity: 2 }, "201012": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==1&phase_random==0&order_rate<=50&accumulatetime>=5", effects: [{ modifier: -2e3, type: 21 }], precondition: "" }], rarity: 1 }, "201021": { alternatives: [{ baseDuration: 12e3, condition: "distance_type==1&phase_random==0&order_rate>50&accumulatetime>=5", effects: [{ modifier: -300, type: 9 }, { modifier: -2e3, type: 31 }], precondition: "" }], rarity: 2 }, "201022": { alternatives: [{ baseDuration: 12e3, condition: "distance_type==1&phase_random==0&order_rate>50&accumulatetime>=5", effects: [{ modifier: -100, type: 9 }, { modifier: -500, type: 31 }], precondition: "" }], rarity: 1 }, "201031": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==2&straight_random==1", effects: [{ modifier: 2500, type: 27 }], precondition: "" }], rarity: 1 }, "201032": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==2&straight_random==1", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "201041": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==2&all_corner_random==1", effects: [{ modifier: 2500, type: 27 }], precondition: "" }], rarity: 1 }, "201042": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==2&all_corner_random==1", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "201043": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==2&all_corner_random==1", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 2 }, "201051": { alternatives: [{ baseDuration: 24e3, condition: "distance_type==2&phase_random==1&order_rate<=50", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 2 }, "201052": { alternatives: [{ baseDuration: 24e3, condition: "distance_type==2&phase_random==1&order_rate<=50", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "201061": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==2&distance_rate>=50&change_order_onetime<0", effects: [{ modifier: 4e3, type: 31 }], precondition: "" }], rarity: 2 }, "201062": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==2&distance_rate>=50&change_order_onetime<0", effects: [{ modifier: 2e3, type: 31 }], precondition: "" }], rarity: 1 }, "201071": { alternatives: [{ baseDuration: 24e3, condition: "distance_type==2&is_overtake==1&accumulatetime>=5", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 2 }, "201072": { alternatives: [{ baseDuration: 24e3, condition: "distance_type==2&is_overtake==1&accumulatetime>=5", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "201081": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==2&phase_random==1&order<=3", effects: [{ modifier: -2e3, type: 21 }, { modifier: 2500, type: 27 }], precondition: "" }], rarity: 2 }, "201082": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==2&phase_random==1&order<=3", effects: [{ modifier: -1500, type: 21 }, { modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "201091": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==2&phase_random==0&order_rate>50&accumulatetime>=3", effects: [{ modifier: -3e3, type: 31 }], precondition: "" }], rarity: 2 }, "201092": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==2&phase_random==0&order_rate>50&accumulatetime>=3", effects: [{ modifier: -1e3, type: 31 }], precondition: "" }], rarity: 1 }, "201101": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==3&straight_random==1", effects: [{ modifier: 2500, type: 27 }], precondition: "" }], rarity: 1 }, "201102": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==3&straight_random==1", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "201103": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==3&straight_random==1", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 2 }, "201111": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==3&all_corner_random==1", effects: [{ modifier: 2500, type: 27 }], precondition: "" }], rarity: 1 }, "201112": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==3&all_corner_random==1", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "201113": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==3&all_corner_random==1", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 2 }, "201121": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==3&phase_random==0", effects: [{ modifier: 15e4, type: 8 }], precondition: "" }], rarity: 2 }, "201122": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==3&phase_random==0", effects: [{ modifier: 1e5, type: 8 }], precondition: "" }], rarity: 1 }, "201131": { alternatives: [{ baseDuration: 4e4, condition: "distance_type==3&phase_random==1", effects: [{ modifier: 350, type: 28 }, { modifier: 3e3, type: 31 }], precondition: "" }], rarity: 2 }, "201132": { alternatives: [{ baseDuration: 4e4, condition: "distance_type==3&phase_random==1", effects: [{ modifier: 250, type: 28 }, { modifier: 2e3, type: 31 }], precondition: "" }], rarity: 1 }, "201141": { alternatives: [{ baseDuration: 0, condition: "distance_type==3&is_move_lane==1&accumulatetime>=10@distance_type==3&is_move_lane==2&accumulatetime>=10", effects: [{ modifier: 550, type: 9 }], precondition: "" }], rarity: 2 }, "201142": { alternatives: [{ baseDuration: 0, condition: "distance_type==3&is_move_lane==1&accumulatetime>=10@distance_type==3&is_move_lane==2&accumulatetime>=10", effects: [{ modifier: 150, type: 9 }], precondition: "" }], rarity: 1 }, "201151": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==3&phase_random==2&order_rate>50", effects: [{ modifier: -2500, type: 21 }], precondition: "" }], rarity: 2 }, "201152": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==3&phase_random==2&order_rate>50", effects: [{ modifier: -1500, type: 21 }], precondition: "" }], rarity: 1 }, "201161": { alternatives: [{ baseDuration: 0, condition: "distance_type==3&phase==1&blocked_front_continuetime>=1", effects: [{ modifier: -300, type: 9 }], precondition: "" }], rarity: 2 }, "201162": { alternatives: [{ baseDuration: 0, condition: "distance_type==3&phase==1&blocked_front_continuetime>=1", effects: [{ modifier: -100, type: 9 }], precondition: "" }], rarity: 1 }, "201171": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==4&straight_random==1", effects: [{ modifier: 2500, type: 27 }], precondition: "" }], rarity: 1 }, "201172": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==4&straight_random==1", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "201173": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==4&straight_random==1", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 2 }, "201181": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==4&all_corner_random==1", effects: [{ modifier: 2500, type: 27 }], precondition: "" }], rarity: 1 }, "201182": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==4&all_corner_random==1", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "201191": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==4&phase_random==1&bashin_diff_behind>=1&order==1", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 2 }, "201192": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==4&phase_random==1&bashin_diff_behind>=1&order==1", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "201201": { alternatives: [{ baseDuration: 0, condition: "distance_type==4&is_overtake==1&accumulatetime>=5", effects: [{ modifier: 550, type: 9 }], precondition: "" }], rarity: 2 }, "201202": { alternatives: [{ baseDuration: 0, condition: "distance_type==4&is_overtake==1&accumulatetime>=5", effects: [{ modifier: 150, type: 9 }], precondition: "" }], rarity: 1 }, "201211": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==4&phase==2&change_order_onetime<0", effects: [{ modifier: 3500, type: 27 }, { modifier: 1e3, type: 31 }], precondition: "" }], rarity: 2 }, "201212": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==4&phase==2&change_order_onetime<0", effects: [{ modifier: 1500, type: 27 }, { modifier: 500, type: 31 }], precondition: "" }], rarity: 1 }, "201221": { alternatives: [{ baseDuration: 0, condition: "distance_type==4&phase_random==1&order>=5", effects: [{ modifier: -100, type: 9 }, { modifier: 350, type: 9 }], precondition: "" }], rarity: 2 }, "201222": { alternatives: [{ baseDuration: 0, condition: "distance_type==4&phase_random==1&order>=5", effects: [{ modifier: -50, type: 9 }, { modifier: 150, type: 9 }], precondition: "" }], rarity: 1 }, "201231": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==4&phase_random==2", effects: [{ modifier: -1e5, type: 8 }], precondition: "" }], rarity: 2 }, "201232": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==4&phase_random==2", effects: [{ modifier: -5e4, type: 8 }], precondition: "" }], rarity: 1 }, "201241": { alternatives: [{ baseDuration: 3e4, condition: "running_style==1&straight_random==1", effects: [{ modifier: 2500, type: 27 }], precondition: "" }], rarity: 1 }, "201242": { alternatives: [{ baseDuration: 3e4, condition: "running_style==1&straight_random==1", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "201251": { alternatives: [{ baseDuration: 3e4, condition: "running_style==1&all_corner_random==1", effects: [{ modifier: 2500, type: 27 }], precondition: "" }], rarity: 1 }, "201252": { alternatives: [{ baseDuration: 3e4, condition: "running_style==1&all_corner_random==1", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "201253": { alternatives: [{ baseDuration: 3e4, condition: "running_style==1&all_corner_random==1", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 2 }, "201261": { alternatives: [{ baseDuration: 3e4, condition: "running_style==1&phase==0&blocked_front_continuetime>=1@running_style==1&phase==0&blocked_side_continuetime>=1", effects: [{ modifier: 350, type: 28 }, { modifier: 5e3, type: 35 }], precondition: "" }], rarity: 2 }, "201262": { alternatives: [{ baseDuration: 3e4, condition: "running_style==1&phase==0&blocked_front_continuetime>=1@running_style==1&phase==0&blocked_side_continuetime>=1", effects: [{ modifier: 250, type: 28 }, { modifier: 5e3, type: 35 }], precondition: "" }], rarity: 1 }, "201271": { alternatives: [{ baseDuration: 3e4, condition: "running_style==1&phase<=1&change_order_onetime>0&accumulatetime>=5@running_style==1&phase<=1&blocked_side_continuetime>=2&accumulatetime>=5", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 2 }, "201272": { alternatives: [{ baseDuration: 3e4, condition: "running_style==1&phase<=1&change_order_onetime>0&accumulatetime>=5@running_style==1&phase<=1&blocked_side_continuetime>=2&accumulatetime>=5", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "201281": { alternatives: [{ baseDuration: 0, condition: "running_style==1&slope==1&accumulatetime>=10", effects: [{ modifier: 550, type: 9 }], precondition: "" }], rarity: 2 }, "201282": { alternatives: [{ baseDuration: 0, condition: "running_style==1&slope==1&accumulatetime>=10", effects: [{ modifier: 150, type: 9 }], precondition: "" }], rarity: 1 }, "201291": { alternatives: [{ baseDuration: 3e4, condition: "running_style==1&phase_random==2", effects: [{ modifier: 4e3, type: 31 }, { modifier: -200, type: 9 }], precondition: "" }], rarity: 2 }, "201292": { alternatives: [{ baseDuration: 3e4, condition: "running_style==1&phase_random==2", effects: [{ modifier: 2e3, type: 31 }, { modifier: -200, type: 9 }], precondition: "" }], rarity: 1 }, "201302": { alternatives: [{ baseDuration: 3e4, condition: "running_style==1&phase_random==0&order>=2&accumulatetime>=5", effects: [{ modifier: -1e3, type: 31 }], precondition: "" }], rarity: 1 }, "201311": { alternatives: [{ baseDuration: 3e4, condition: "running_style==2&straight_random==1", effects: [{ modifier: 2500, type: 27 }], precondition: "" }], rarity: 1 }, "201312": { alternatives: [{ baseDuration: 3e4, condition: "running_style==2&straight_random==1", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "201321": { alternatives: [{ baseDuration: 3e4, condition: "running_style==2&all_corner_random==1", effects: [{ modifier: 2500, type: 27 }], precondition: "" }], rarity: 1 }, "201322": { alternatives: [{ baseDuration: 3e4, condition: "running_style==2&all_corner_random==1", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "201331": { alternatives: [{ baseDuration: 3e4, condition: "running_style==2&is_move_lane==1@running_style==2&is_move_lane==2", effects: [{ modifier: 3e3, type: 31 }], precondition: "" }], rarity: 2 }, "201332": { alternatives: [{ baseDuration: 3e4, condition: "running_style==2&is_move_lane==1@running_style==2&is_move_lane==2", effects: [{ modifier: 2e3, type: 31 }], precondition: "" }], rarity: 1 }, "201341": { alternatives: [{ baseDuration: 3e4, condition: "running_style==2&down_slope_random==1", effects: [{ modifier: 3e3, type: 31 }], precondition: "" }], rarity: 2 }, "201342": { alternatives: [{ baseDuration: 3e4, condition: "running_style==2&down_slope_random==1", effects: [{ modifier: 2e3, type: 31 }], precondition: "" }], rarity: 1 }, "201351": { alternatives: [{ baseDuration: 0, condition: "running_style==2&phase_random==1", effects: [{ modifier: 550, type: 9 }], precondition: "" }], rarity: 2 }, "201352": { alternatives: [{ baseDuration: 0, condition: "running_style==2&phase_random==1", effects: [{ modifier: 150, type: 9 }], precondition: "" }], rarity: 1 }, "201361": { alternatives: [{ baseDuration: 3e4, condition: "running_style==2&phase_random==1&order_rate>40", effects: [{ modifier: 3e3, type: 31 }], precondition: "" }], rarity: 2 }, "201362": { alternatives: [{ baseDuration: 3e4, condition: "running_style==2&phase_random==1&order_rate>40", effects: [{ modifier: 2e3, type: 31 }], precondition: "" }], rarity: 1 }, "201371": { alternatives: [{ baseDuration: 3e4, condition: "running_style==2&phase_random==2&order_rate<=50", effects: [{ modifier: -5e4, type: 8 }], precondition: "" }], rarity: 2 }, "201372": { alternatives: [{ baseDuration: 3e4, condition: "running_style==2&phase_random==2&order_rate<=50", effects: [{ modifier: -3e4, type: 8 }], precondition: "" }], rarity: 1 }, "201381": { alternatives: [{ baseDuration: 3e4, condition: "running_style==3&straight_random==1", effects: [{ modifier: 2500, type: 27 }], precondition: "" }], rarity: 1 }, "201382": { alternatives: [{ baseDuration: 3e4, condition: "running_style==3&straight_random==1", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "201383": { alternatives: [{ baseDuration: 3e4, condition: "running_style==3&straight_random==1", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 2 }, "201391": { alternatives: [{ baseDuration: 3e4, condition: "running_style==3&all_corner_random==1", effects: [{ modifier: 2500, type: 27 }], precondition: "" }], rarity: 1 }, "201392": { alternatives: [{ baseDuration: 3e4, condition: "running_style==3&all_corner_random==1", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "201393": { alternatives: [{ baseDuration: 3e4, condition: "running_style==3&all_corner_random==1", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 2 }, "201401": { alternatives: [{ baseDuration: 4e4, condition: "running_style==3&is_overtake==1&accumulatetime>=5", effects: [{ modifier: 3e3, type: 31 }], precondition: "" }], rarity: 2 }, "201402": { alternatives: [{ baseDuration: 4e4, condition: "running_style==3&is_overtake==1&accumulatetime>=5", effects: [{ modifier: 2e3, type: 31 }], precondition: "" }], rarity: 1 }, "201411": { alternatives: [{ baseDuration: 24e3, condition: "running_style==3&up_slope_random==1", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 2 }, "201412": { alternatives: [{ baseDuration: 24e3, condition: "running_style==3&up_slope_random==1", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "201421": { alternatives: [{ baseDuration: 0, condition: "running_style==3&phase_random==1&order_rate>=40", effects: [{ modifier: 550, type: 9 }], precondition: "" }], rarity: 2 }, "201422": { alternatives: [{ baseDuration: 0, condition: "running_style==3&phase_random==1&order_rate>=40", effects: [{ modifier: 150, type: 9 }], precondition: "" }], rarity: 1 }, "201431": { alternatives: [{ baseDuration: 3e4, condition: "running_style==3&phase_random==1", effects: [{ modifier: 15e4, type: 8 }], precondition: "" }], rarity: 2 }, "201432": { alternatives: [{ baseDuration: 3e4, condition: "running_style==3&phase_random==1", effects: [{ modifier: 5e4, type: 8 }], precondition: "" }], rarity: 1 }, "201441": { alternatives: [{ baseDuration: 0, condition: "running_style==3&phase_random==2&order_rate>50", effects: [{ modifier: -300, type: 9 }], precondition: "" }], rarity: 2 }, "201442": { alternatives: [{ baseDuration: 0, condition: "running_style==3&phase_random==2&order_rate>50", effects: [{ modifier: -100, type: 9 }], precondition: "" }], rarity: 1 }, "201451": { alternatives: [{ baseDuration: 3e4, condition: "running_style==4&straight_random==1", effects: [{ modifier: 2500, type: 27 }], precondition: "" }], rarity: 1 }, "201452": { alternatives: [{ baseDuration: 3e4, condition: "running_style==4&straight_random==1", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "201453": { alternatives: [{ baseDuration: 3e4, condition: "running_style==4&straight_random==1", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 2 }, "201461": { alternatives: [{ baseDuration: 3e4, condition: "running_style==4&all_corner_random==1", effects: [{ modifier: 2500, type: 27 }], precondition: "" }], rarity: 1 }, "201462": { alternatives: [{ baseDuration: 3e4, condition: "running_style==4&all_corner_random==1", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "201463": { alternatives: [{ baseDuration: 3e4, condition: "running_style==4&all_corner_random==1", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 2 }, "201471": { alternatives: [{ baseDuration: 3e4, condition: "running_style==4&is_move_lane==1@running_style==4&is_move_lane==2", effects: [{ modifier: 1e5, type: 8 }], precondition: "" }], rarity: 2 }, "201472": { alternatives: [{ baseDuration: 3e4, condition: "running_style==4&is_move_lane==1@running_style==4&is_move_lane==2", effects: [{ modifier: 5e4, type: 8 }], precondition: "" }], rarity: 1 }, "201481": { alternatives: [{ baseDuration: 0, condition: "running_style==4&slope==2&accumulatetime>=10", effects: [{ modifier: 550, type: 9 }], precondition: "" }], rarity: 2 }, "201482": { alternatives: [{ baseDuration: 0, condition: "running_style==4&slope==2&accumulatetime>=10", effects: [{ modifier: 150, type: 9 }], precondition: "" }], rarity: 1 }, "201491": { alternatives: [{ baseDuration: 0, condition: "running_style==4&infront_near_lane_time>=1&accumulatetime>=10", effects: [{ modifier: 550, type: 9 }], precondition: "" }], rarity: 2 }, "201492": { alternatives: [{ baseDuration: 0, condition: "running_style==4&infront_near_lane_time>=1&accumulatetime>=10", effects: [{ modifier: 150, type: 9 }], precondition: "" }], rarity: 1 }, "201501": { alternatives: [{ baseDuration: 3e4, condition: "running_style==4&phase_random==2&order_rate>50", effects: [{ modifier: 15e4, type: 8 }], precondition: "" }], rarity: 2 }, "201502": { alternatives: [{ baseDuration: 3e4, condition: "running_style==4&phase_random==2&order_rate>50", effects: [{ modifier: 5e4, type: 8 }], precondition: "" }], rarity: 1 }, "201511": { alternatives: [{ baseDuration: 3e4, condition: "running_style==4&phase_random==2&order>=2", effects: [{ modifier: -2500, type: 21 }], precondition: "" }], rarity: 2 }, "201512": { alternatives: [{ baseDuration: 3e4, condition: "running_style==4&phase_random==2&order>=2", effects: [{ modifier: -1500, type: 21 }], precondition: "" }], rarity: 1 }, "201521": { alternatives: [{ baseDuration: -1, condition: "running_style==1", effects: [{ modifier: 6e5, type: 5 }, { modifier: 1e5, type: 8 }], precondition: "" }], rarity: 1 }, "201522": { alternatives: [{ baseDuration: -1, condition: "running_style==1", effects: [{ modifier: 4e5, type: 5 }, { modifier: 5e4, type: 8 }], precondition: "" }], rarity: 1 }, "201531": { alternatives: [{ baseDuration: -1, condition: "running_style==2", effects: [{ modifier: 6e5, type: 5 }, { modifier: 1e5, type: 8 }], precondition: "" }], rarity: 1 }, "201532": { alternatives: [{ baseDuration: -1, condition: "running_style==2", effects: [{ modifier: 4e5, type: 5 }, { modifier: 5e4, type: 8 }], precondition: "" }], rarity: 1 }, "201541": { alternatives: [{ baseDuration: -1, condition: "running_style==3", effects: [{ modifier: 6e5, type: 5 }, { modifier: 1e5, type: 8 }], precondition: "" }], rarity: 1 }, "201542": { alternatives: [{ baseDuration: -1, condition: "running_style==3", effects: [{ modifier: 4e5, type: 5 }, { modifier: 5e4, type: 8 }], precondition: "" }], rarity: 1 }, "201551": { alternatives: [{ baseDuration: -1, condition: "running_style==4", effects: [{ modifier: 6e5, type: 5 }, { modifier: 1e5, type: 8 }], precondition: "" }], rarity: 1 }, "201552": { alternatives: [{ baseDuration: -1, condition: "running_style==4", effects: [{ modifier: 4e5, type: 5 }, { modifier: 5e4, type: 8 }], precondition: "" }], rarity: 1 }, "201561": { alternatives: [{ baseDuration: -1, condition: "random_lot==50&post_number==7", effects: [{ modifier: 6e5, type: 1 }, { modifier: 6e5, type: 2 }, { modifier: 6e5, type: 3 }], precondition: "" }], rarity: 2 }, "201562": { alternatives: [{ baseDuration: -1, condition: "random_lot==50&post_number==7", effects: [{ modifier: 4e5, type: 1 }, { modifier: 4e5, type: 2 }, { modifier: 4e5, type: 3 }], precondition: "" }], rarity: 1 }, "201571": { alternatives: [{ baseDuration: 0, condition: "remain_distance<=778&remain_distance>=776", effects: [{ modifier: 150, type: 9 }], precondition: "" }], rarity: 1 }, "201581": { alternatives: [{ baseDuration: 3e4, condition: "up_slope_random==1", effects: [{ modifier: 2e3, type: 31 }], precondition: "" }], rarity: 1 }, "201591": { alternatives: [{ baseDuration: 3e4, condition: "near_count>=3&accumulatetime>=5", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "201592": { alternatives: [{ baseDuration: 3e4, condition: "near_count>=3&accumulatetime>=5", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 2 }, "201601": { alternatives: [{ baseDuration: 3e4, condition: "activate_count_start>=3", effects: [{ modifier: 2e3, type: 31 }], precondition: "" }], rarity: 1 }, "201602": { alternatives: [{ baseDuration: 3e4, condition: "activate_count_start>=3", effects: [{ modifier: 4e3, type: 31 }], precondition: "" }], rarity: 2 }, "201611": { alternatives: [{ baseDuration: 3e4, condition: "activate_count_middle>=3", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "201612": { alternatives: [{ baseDuration: 3e4, condition: "activate_count_middle>=3", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 2 }, "201621": { alternatives: [{ baseDuration: 0, condition: "activate_count_end_after>=3", effects: [{ modifier: 150, type: 9 }], precondition: "" }], rarity: 1 }, "201631": { alternatives: [{ baseDuration: -1, condition: "same_skill_horse_count>=5", effects: [{ modifier: 4e5, type: 1 }], precondition: "" }], rarity: 1 }, "201641": { alternatives: [{ baseDuration: -1, condition: "same_skill_horse_count==1", effects: [{ modifier: 4e5, type: 1 }], precondition: "" }], rarity: 1 }, "201651": { alternatives: [{ baseDuration: 3e4, condition: "infront_near_lane_time>=3&accumulatetime>=10", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "201652": { alternatives: [{ baseDuration: 3e4, condition: "infront_near_lane_time>=3&accumulatetime>=10", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 2 }, "201661": { alternatives: [{ baseDuration: 3e4, condition: "behind_near_lane_time>=3&accumulatetime>=10", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "201662": { alternatives: [{ baseDuration: 3e4, condition: "behind_near_lane_time>=3&accumulatetime>=10", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 2 }, "201671": { alternatives: [{ baseDuration: 24e3, condition: "ground_type==2&phase==1&blocked_side_continuetime>=2", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 2 }, "201672": { alternatives: [{ baseDuration: 24e3, condition: "ground_type==2&phase==1&blocked_side_continuetime>=2", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "201681": { alternatives: [{ baseDuration: 3e4, condition: "ground_type==2&phase_random==2", effects: [{ modifier: 350, type: 28 }, { modifier: 3e3, type: 31 }], precondition: "" }], rarity: 2 }, "201682": { alternatives: [{ baseDuration: 3e4, condition: "ground_type==2&phase_random==2", effects: [{ modifier: 250, type: 28 }, { modifier: 2e3, type: 31 }], precondition: "" }], rarity: 1 }, "201691": { alternatives: [{ baseDuration: 0, condition: "running_style==3&phase_laterhalf_random==0&order_rate>=40", effects: [{ modifier: 550, type: 9 }], precondition: "" }], rarity: 2 }, "201692": { alternatives: [{ baseDuration: 0, condition: "running_style==3&phase_laterhalf_random==0&order_rate>=40", effects: [{ modifier: 150, type: 9 }], precondition: "" }], rarity: 1 }, "201701": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==3&is_last_straight==1&order_rate>=20&order_rate<=60&phase>=2", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 2 }, "201702": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==3&is_last_straight==1&order_rate>=20&order_rate<=60&phase>=2", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "201801": { alternatives: [{ baseDuration: -1, condition: "ground_condition==1", effects: [{ modifier: -4e5, type: 1 }], precondition: "" }], rarity: 1 }, "201901": { alternatives: [{ baseDuration: 18e3, condition: "running_style==2&phase_firsthalf_random==2&order_rate<=50", effects: [{ modifier: 4e3, type: 31 }], precondition: "" }], rarity: 2 }, "201902": { alternatives: [{ baseDuration: 18e3, condition: "running_style==2&phase_firsthalf_random==2&order_rate<=50", effects: [{ modifier: 2e3, type: 31 }], precondition: "" }], rarity: 1 }, "202001": { alternatives: [{ baseDuration: 18e3, condition: "ground_type==2&phase_random==1&order_rate>=50", effects: [{ modifier: 550, type: 9 }, { modifier: 3500, type: 27 }], precondition: "" }], rarity: 2 }, "202002": { alternatives: [{ baseDuration: 0, condition: "ground_type==2&phase_random==1&order_rate>=50", effects: [{ modifier: 150, type: 9 }], precondition: "" }], rarity: 1 }, "202011": { alternatives: [{ baseDuration: 24e3, condition: "distance_type==4&phase_laterhalf_random==1&order_rate<=50", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 2 }, "202012": { alternatives: [{ baseDuration: 24e3, condition: "distance_type==4&phase_laterhalf_random==1&order_rate<=50", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "202021": { alternatives: [{ baseDuration: 4e4, condition: "running_style==4&phase_random==1&order_rate>=50", effects: [{ modifier: 2500, type: 27 }], precondition: "" }], rarity: 2 }, "202022": { alternatives: [{ baseDuration: 4e4, condition: "running_style==4&phase_random==1&order_rate>=50", effects: [{ modifier: 500, type: 27 }], precondition: "" }], rarity: 1 }, "202031": { alternatives: [{ baseDuration: 18e3, condition: "distance_rate_after_random==50", effects: [{ modifier: 4500, type: 27 }, { modifier: -1e4, type: 9 }], precondition: "" }], rarity: 2 }, "202032": { alternatives: [{ baseDuration: 18e3, condition: "distance_rate_after_random==50", effects: [{ modifier: 2500, type: 27 }, { modifier: -1e4, type: 9 }], precondition: "" }], rarity: 1 }, "202041": { alternatives: [{ baseDuration: 24e3, condition: "distance_type==1&phase_laterhalf_random==1&order_rate<=50", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 2 }, "202042": { alternatives: [{ baseDuration: 24e3, condition: "distance_type==1&phase_laterhalf_random==1&order_rate<=50", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "202051": { alternatives: [{ baseDuration: -1, condition: "running_style==1", effects: [{ modifier: 0, type: 6 }], precondition: "" }], rarity: 2 }, "202061": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==4&is_finalcorner_random==1", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 2 }, "202071": { alternatives: [{ baseDuration: 12e3, condition: "distance_type==4&phase_firsthalf_random==1&order_rate>=40&order_rate<=80", effects: [{ modifier: 750, type: 9 }, { modifier: -1500, type: 21 }], precondition: "" }], rarity: 2 }, "202072": { alternatives: [{ baseDuration: 12e3, condition: "distance_type==4&phase_firsthalf_random==1&order_rate>=40&order_rate<=80", effects: [{ modifier: 350, type: 9 }, { modifier: -1500, type: 21 }], precondition: "" }], rarity: 1 }, "202081": { alternatives: [{ baseDuration: 18e3, condition: "distance_type==3&phase_firsthalf_random==2&order_rate>=40", effects: [{ modifier: 4e3, type: 31 }], precondition: "" }], rarity: 2 }, "202082": { alternatives: [{ baseDuration: 18e3, condition: "distance_type==3&phase_firsthalf_random==2&order_rate>=40", effects: [{ modifier: 2e3, type: 31 }], precondition: "" }], rarity: 1 }, "202091": { alternatives: [{ baseDuration: 24e3, condition: "distance_type==3&phase==1&order_rate<=80&order_rate>=30&blocked_side_continuetime>=2", effects: [{ modifier: 3500, type: 27 }, { modifier: 350, type: 9 }], precondition: "" }], rarity: 2 }, "202092": { alternatives: [{ baseDuration: 24e3, condition: "distance_type==3&phase==1&order_rate<=80&order_rate>=30&blocked_side_continuetime>=2", effects: [{ modifier: 1500, type: 27 }, { modifier: 50, type: 9 }], precondition: "" }], rarity: 1 }, "202101": { alternatives: [{ baseDuration: 24e3, condition: "distance_type==3&phase_random==1&order_rate>=50", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 2 }, "202102": { alternatives: [{ baseDuration: 24e3, condition: "distance_type==3&phase_random==1&order_rate>=50", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "202111": { alternatives: [{ baseDuration: 18e3, condition: "distance_type==2&is_finalcorner_random==1&order_rate>=50", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 2 }, "202112": { alternatives: [{ baseDuration: 18e3, condition: "distance_type==2&is_finalcorner_random==1&order_rate>=50", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "202121": { alternatives: [{ baseDuration: 24e3, condition: "running_style==3&distance_rate_after_random==50&order_rate>=30&order_rate<=80", effects: [{ modifier: 3500, type: 27 }, { modifier: 1e3, type: 31 }], precondition: "" }], rarity: 2 }, "202122": { alternatives: [{ baseDuration: 24e3, condition: "running_style==3&distance_rate_after_random==50&order_rate>=30&order_rate<=80", effects: [{ modifier: 1500, type: 27 }, { modifier: 500, type: 31 }], precondition: "" }], rarity: 1 }, "202131": { alternatives: [{ baseDuration: 18e3, condition: "distance_type==3&phase_random==1&order<=3", effects: [{ modifier: 3500, type: 27 }, { modifier: -1500, type: 21 }], precondition: "" }], rarity: 2 }, "202132": { alternatives: [{ baseDuration: 18e3, condition: "distance_type==3&phase_random==1&order<=3", effects: [{ modifier: 1500, type: 27 }, { modifier: -350, type: 21 }], precondition: "" }], rarity: 1 }, "202141": { alternatives: [{ baseDuration: -1, condition: "always==1", effects: [{ modifier: 850, type: 14 }, { modifier: -4e5, type: 5 }], precondition: "" }], rarity: 1 }, "202151": { alternatives: [{ baseDuration: 24e3, condition: "running_style==3&phase_random==1", effects: [{ modifier: 4500, type: 27 }, { modifier: -200, type: 9 }], precondition: "" }], rarity: 2 }, "202152": { alternatives: [{ baseDuration: 24e3, condition: "running_style==3&phase_random==1", effects: [{ modifier: 2500, type: 27 }, { modifier: -200, type: 9 }], precondition: "" }], rarity: 1 }, "202161": { alternatives: [{ baseDuration: -1, condition: "always==1", effects: [{ modifier: 6e5, type: 5 }, { modifier: -3e4, type: 29 }], precondition: "" }], rarity: 1 }, "202171": { alternatives: [{ baseDuration: 24e3, condition: "down_slope_random==1", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 2 }, "202172": { alternatives: [{ baseDuration: 24e3, condition: "down_slope_random==1", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "202181": { alternatives: [{ baseDuration: -1, condition: "always==1", effects: [{ modifier: -4e5, type: 4 }, { modifier: -4e5, type: 5 }], precondition: "" }], rarity: 1 }, "202191": { alternatives: [{ baseDuration: 0, condition: "is_badstart==0&running_style==2&distance_type==4&phase_firsthalf_random==1", effects: [{ modifier: 750, type: 9 }], precondition: "" }], rarity: 2 }, "202192": { alternatives: [{ baseDuration: 0, condition: "is_badstart==0&running_style==2&distance_type==4&phase_firsthalf_random==1", effects: [{ modifier: 350, type: 9 }], precondition: "" }], rarity: 1 }, "202201": { alternatives: [{ baseDuration: -1, condition: "track_id==10103", effects: [{ modifier: 6e5, type: 2 }], precondition: "" }], rarity: 1 }, "202202": { alternatives: [{ baseDuration: -1, condition: "track_id==10103", effects: [{ modifier: 4e5, type: 2 }], precondition: "" }], rarity: 1 }, "202203": { alternatives: [{ baseDuration: -1, condition: "track_id==10103", effects: [{ modifier: -4e5, type: 2 }], precondition: "" }], rarity: 1 }, "202211": { alternatives: [{ baseDuration: -1, condition: "track_id==10104", effects: [{ modifier: 6e5, type: 2 }], precondition: "" }], rarity: 1 }, "202212": { alternatives: [{ baseDuration: -1, condition: "track_id==10104", effects: [{ modifier: 4e5, type: 2 }], precondition: "" }], rarity: 1 }, "202213": { alternatives: [{ baseDuration: -1, condition: "track_id==10104", effects: [{ modifier: -4e5, type: 2 }], precondition: "" }], rarity: 1 }, "202221": { alternatives: [{ baseDuration: -1, condition: "track_id==10105", effects: [{ modifier: 6e5, type: 2 }], precondition: "" }], rarity: 1 }, "202222": { alternatives: [{ baseDuration: -1, condition: "track_id==10105", effects: [{ modifier: 4e5, type: 2 }], precondition: "" }], rarity: 1 }, "202223": { alternatives: [{ baseDuration: -1, condition: "track_id==10105", effects: [{ modifier: -4e5, type: 2 }], precondition: "" }], rarity: 1 }, "202231": { alternatives: [{ baseDuration: -1, condition: "time==4", effects: [{ modifier: 6e5, type: 5 }], precondition: "" }], rarity: 1 }, "202232": { alternatives: [{ baseDuration: -1, condition: "time==4", effects: [{ modifier: 4e5, type: 5 }], precondition: "" }], rarity: 1 }, "202233": { alternatives: [{ baseDuration: -1, condition: "time==4", effects: [{ modifier: -4e5, type: 5 }], precondition: "" }], rarity: 1 }, "202241": { alternatives: [{ baseDuration: -1, condition: "track_id==10001@track_id==10002@track_id==10004@track_id==10010@track_id==10103@track_id==10104", effects: [{ modifier: 6e5, type: 5 }], precondition: "" }], rarity: 1 }, "202242": { alternatives: [{ baseDuration: -1, condition: "track_id==10001@track_id==10002@track_id==10004@track_id==10010@track_id==10103@track_id==10104", effects: [{ modifier: 4e5, type: 5 }], precondition: "" }], rarity: 1 }, "202243": { alternatives: [{ baseDuration: -1, condition: "track_id==10001@track_id==10002@track_id==10004@track_id==10010@track_id==10103@track_id==10104", effects: [{ modifier: -4e5, type: 5 }], precondition: "" }], rarity: 1 }, "202251": { alternatives: [{ baseDuration: -1, condition: "is_dirtgrade==1", effects: [{ modifier: 6e5, type: 1 }], precondition: "" }], rarity: 1 }, "202252": { alternatives: [{ baseDuration: -1, condition: "is_dirtgrade==1", effects: [{ modifier: 4e5, type: 1 }], precondition: "" }], rarity: 1 }, "202253": { alternatives: [{ baseDuration: -1, condition: "is_dirtgrade==1", effects: [{ modifier: -4e5, type: 1 }], precondition: "" }], rarity: 1 }, "202261": { alternatives: [{ baseDuration: 24e3, condition: "ground_type==2&phase_laterhalf_random==1&order_rate<=50", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 2 }, "202262": { alternatives: [{ baseDuration: 24e3, condition: "ground_type==2&phase_laterhalf_random==1&order_rate<=50", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "202271": { alternatives: [{ baseDuration: 24e3, condition: "ground_type==2&phase_random==1&order_rate>=50", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 2 }, "202272": { alternatives: [{ baseDuration: 24e3, condition: "ground_type==2&phase_random==1&order_rate>=50", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "202281": { alternatives: [{ baseDuration: 3e4, condition: "ground_type==2&phase_random==3&order_rate<=50&is_lastspurt==1", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 2 }, "202282": { alternatives: [{ baseDuration: 3e4, condition: "ground_type==2&phase_random==3&order_rate<=50&is_lastspurt==1", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "202291": { alternatives: [{ baseDuration: 18e3, condition: "ground_type==2&order_rate>=50&activate_count_heal>=1&distance_rate<=42&phase==1", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 2 }, "202292": { alternatives: [{ baseDuration: 18e3, condition: "ground_type==2&order_rate>=50&activate_count_heal>=1&distance_rate<=42&phase==1", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "202301": { alternatives: [{ baseDuration: 3e4, condition: "ground_type==2&accumulatetime>=5&infront_near_lane_time>=3", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 2 }, "202302": { alternatives: [{ baseDuration: 3e4, condition: "ground_type==2&accumulatetime>=5&infront_near_lane_time>=3", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "202303": { alternatives: [{ baseDuration: 3e4, condition: "ground_type==2&accumulatetime>=5&infront_near_lane_time>=3", effects: [{ modifier: -2e3, type: 21 }], precondition: "" }], rarity: 1 }, "202311": { alternatives: [{ baseDuration: 3e4, condition: "ground_type==2&phase_random==2&order_rate<=50", effects: [{ modifier: 4e3, type: 31 }], precondition: "" }], rarity: 2 }, "202312": { alternatives: [{ baseDuration: 3e4, condition: "ground_type==2&phase_random==2&order_rate<=50", effects: [{ modifier: 2e3, type: 31 }], precondition: "" }], rarity: 1 }, "202321": { alternatives: [{ baseDuration: 3e4, condition: "ground_type==2&phase_random==2&order_rate>=50", effects: [{ modifier: 4e3, type: 31 }], precondition: "" }], rarity: 2 }, "202322": { alternatives: [{ baseDuration: 3e4, condition: "ground_type==2&phase_random==2&order_rate>=50", effects: [{ modifier: 2e3, type: 31 }], precondition: "" }], rarity: 1 }, "202331": { alternatives: [{ baseDuration: -1, condition: "ground_type==2&base_power>=1200", effects: [{ modifier: 8e5, type: 1 }], precondition: "" }, { baseDuration: -1, condition: "ground_type==2&base_power>=1000&base_power<1200", effects: [{ modifier: 6e5, type: 1 }], precondition: "" }], rarity: 2 }, "202332": { alternatives: [{ baseDuration: -1, condition: "ground_type==2&base_power>=1200", effects: [{ modifier: 4e5, type: 1 }], precondition: "" }, { baseDuration: -1, condition: "ground_type==2&base_power>=1000&base_power<1200", effects: [{ modifier: 2e5, type: 1 }], precondition: "" }], rarity: 1 }, "202341": { alternatives: [{ baseDuration: -1, condition: "ground_type==2&ground_condition==3@ground_type==2&ground_condition==4", effects: [{ modifier: 6e5, type: 1 }, { modifier: 6e5, type: 3 }], precondition: "" }], rarity: 2 }, "202342": { alternatives: [{ baseDuration: -1, condition: "ground_type==2&ground_condition==3@ground_type==2&ground_condition==4", effects: [{ modifier: 6e5, type: 1 }], precondition: "" }], rarity: 1 }, "202343": { alternatives: [{ baseDuration: -1, condition: "ground_type==2&ground_condition==3@ground_type==2&ground_condition==4", effects: [{ modifier: 4e5, type: 1 }], precondition: "" }], rarity: 1 }, "202344": { alternatives: [{ baseDuration: -1, condition: "ground_type==2&ground_condition==3@ground_type==2&ground_condition==4", effects: [{ modifier: -4e5, type: 1 }], precondition: "" }], rarity: 1 }, "202351": { alternatives: [{ baseDuration: 3e4, condition: "ground_type==2&accumulatetime>=10&phase==0&order<=1&bashin_diff_behind<=1", effects: [{ modifier: -2500, type: 21 }], precondition: "" }], rarity: 2 }, "202352": { alternatives: [{ baseDuration: 3e4, condition: "ground_type==2&accumulatetime>=10&phase==0&order<=1&bashin_diff_behind<=1", effects: [{ modifier: -1500, type: 21 }], precondition: "" }], rarity: 1 }, "202361": { alternatives: [{ baseDuration: 3e4, condition: "ground_type==2&distance_rate>=50&is_other_character_activate_advantage_skill==9", effects: [{ modifier: -2500, type: 21 }], precondition: "" }], rarity: 2 }, "202362": { alternatives: [{ baseDuration: 3e4, condition: "ground_type==2&distance_rate>=50&is_other_character_activate_advantage_skill==9", effects: [{ modifier: -1500, type: 21 }], precondition: "" }], rarity: 1 }, "202371": { alternatives: [{ baseDuration: 24e3, condition: "phase_random==1&running_style==2", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 2 }, "202372": { alternatives: [{ baseDuration: 24e3, condition: "phase_random==1&running_style==2", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "202381": { alternatives: [{ baseDuration: 24e3, condition: "phase_random==1&running_style==4&order_rate>=75", effects: [{ modifier: 3500, type: 27 }, { modifier: 350, type: 28 }], precondition: "" }], rarity: 2 }, "202382": { alternatives: [{ baseDuration: 24e3, condition: "phase_random==1&running_style==4&order_rate>=75", effects: [{ modifier: 1500, type: 27 }, { modifier: 150, type: 28 }], precondition: "" }], rarity: 1 }, "202391": { alternatives: [{ baseDuration: 27e3, condition: "phase_firsthalf_random==1&running_style==1", effects: [{ modifier: 4500, type: 27 }, { modifier: -400, type: 9 }], precondition: "" }], rarity: 2 }, "202392": { alternatives: [{ baseDuration: 27e3, condition: "phase_firsthalf_random==1&running_style==1", effects: [{ modifier: 2500, type: 27 }, { modifier: -400, type: 9 }], precondition: "" }], rarity: 1 }, "202401": { alternatives: [{ baseDuration: 2e4, condition: "distance_type==1&phase>=2&order_rate>=50&is_overtake==1@distance_type==2&phase>=2&order_rate>=50&is_overtake==1", effects: [{ modifier: 4e3, type: 31 }], precondition: "" }], rarity: 2 }, "202402": { alternatives: [{ baseDuration: 2e4, condition: "distance_type==1&phase>=2&order_rate>=50&is_overtake==1@distance_type==2&phase>=2&order_rate>=50&is_overtake==1", effects: [{ modifier: 2e3, type: 31 }], precondition: "" }], rarity: 1 }, "202411": { alternatives: [{ baseDuration: 4e4, condition: "running_style==2&order>=2&distance_diff_top<=5&distance_rate>=60&phase==1", effects: [{ modifier: 2500, type: 27 }], precondition: "" }], rarity: 2 }, "202412": { alternatives: [{ baseDuration: 4e4, condition: "running_style==2&order>=2&distance_diff_top<=5&distance_rate>=60&phase==1", effects: [{ modifier: 500, type: 27 }], precondition: "" }], rarity: 1 }, "202421": { alternatives: [{ baseDuration: 15e3, condition: "distance_type==4&running_style==3&is_lastspurt==1&order_rate>=40", effects: [{ modifier: 4e3, type: 31 }, { modifier: -200, type: 9 }], precondition: "" }], rarity: 2 }, "202422": { alternatives: [{ baseDuration: 15e3, condition: "distance_type==4&running_style==3&is_lastspurt==1&order_rate>=40", effects: [{ modifier: 2e3, type: 31 }, { modifier: -200, type: 9 }], precondition: "" }], rarity: 1 }, "202431": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==3&running_style==2&phase_laterhalf_random==1&distance_diff_top<=10", effects: [{ modifier: 2500, type: 27 }, { modifier: 3e3, type: 31 }], precondition: "" }], rarity: 2 }, "202432": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==3&running_style==2&phase_laterhalf_random==1&distance_diff_top<=10", effects: [{ modifier: 500, type: 27 }, { modifier: 1e3, type: 31 }], precondition: "" }], rarity: 1 }, "202441": { alternatives: [{ baseDuration: -1, condition: "popularity<=3&random_lot==30", effects: [{ modifier: 8e5, type: 1 }, { modifier: 8e5, type: 3 }, { modifier: 8e5, type: 4 }], precondition: "" }, { baseDuration: -1, condition: "popularity>=4&random_lot==60", effects: [{ modifier: 8e5, type: 1 }, { modifier: 8e5, type: 3 }, { modifier: 8e5, type: 4 }], precondition: "" }], rarity: 2 }, "202442": { alternatives: [{ baseDuration: -1, condition: "popularity<=3&random_lot==15", effects: [{ modifier: 4e5, type: 1 }, { modifier: 4e5, type: 3 }, { modifier: 4e5, type: 4 }], precondition: "" }, { baseDuration: -1, condition: "popularity>=4&random_lot==30", effects: [{ modifier: 4e5, type: 1 }, { modifier: 4e5, type: 3 }, { modifier: 4e5, type: 4 }], precondition: "" }], rarity: 1 }, "202451": { alternatives: [{ baseDuration: 24e3, condition: "running_style==3&is_last_straight==1&order>=2&distance_diff_top<=10", effects: [{ modifier: 4500, type: 27 }], precondition: "" }], rarity: 2 }, "202452": { alternatives: [{ baseDuration: 24e3, condition: "running_style==3&is_last_straight==1&order>=2&distance_diff_top<=10", effects: [{ modifier: 2500, type: 27 }], precondition: "" }], rarity: 1 }, "202461": { alternatives: [{ baseDuration: 24e3, condition: "running_style==1&is_last_straight==1&order==1&bashin_diff_behind<=1", effects: [{ modifier: 4500, type: 27 }], precondition: "" }], rarity: 2 }, "202462": { alternatives: [{ baseDuration: 24e3, condition: "running_style==1&is_last_straight==1&order==1&bashin_diff_behind<=1", effects: [{ modifier: 2500, type: 27 }], precondition: "" }], rarity: 1 }, "202471": { alternatives: [{ baseDuration: 24e3, condition: "running_style==2&distance_rate>=50&is_overtake==1@running_style==3&distance_rate>=50&is_overtake==1", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 2 }, "202472": { alternatives: [{ baseDuration: 24e3, condition: "running_style==2&distance_rate>=50&is_overtake==1@running_style==3&distance_rate>=50&is_overtake==1", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "202481": { alternatives: [{ baseDuration: 12e3, condition: "distance_type==4&running_style==2&phase==2", effects: [{ modifier: 4e3, type: 31 }], precondition: "distance_diff_top<=10&distance_rate>=60&phase==1" }], rarity: 2 }, "202482": { alternatives: [{ baseDuration: 12e3, condition: "distance_type==4&running_style==2&phase==2", effects: [{ modifier: 2e3, type: 31 }], precondition: "distance_diff_top<=10&distance_rate>=60&phase==1" }], rarity: 1 }, "202491": { alternatives: [{ baseDuration: 12e3, condition: "running_style==4&phase_firsthalf_random==2", effects: [{ modifier: 4e3, type: 31 }], precondition: "distance_rate>=66&order_rate_out50_continue==1&temptation_count==0" }], rarity: 2 }, "202492": { alternatives: [{ baseDuration: 12e3, condition: "running_style==4&phase_firsthalf_random==2", effects: [{ modifier: 2e3, type: 31 }], precondition: "distance_rate>=66&order_rate_out50_continue==1&temptation_count==0" }], rarity: 1 }, "202501": { alternatives: [{ baseDuration: 24e3, condition: "distance_type==2&phase_laterhalf_random==1&order_rate<=50", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 2 }, "202502": { alternatives: [{ baseDuration: 24e3, condition: "distance_type==2&phase_laterhalf_random==1&order_rate<=50", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "202511": { alternatives: [{ baseDuration: -1, condition: "always==1", effects: [{ modifier: 1e5, type: 29 }], precondition: "" }], rarity: 1 }, "202521": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==3&corner_random==3&order_rate>=50@distance_type==4&corner_random==3&order_rate>=50", effects: [{ modifier: 3500, type: 22 }], precondition: "" }], rarity: 2 }, "202522": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==3&corner_random==3&order_rate>=50@distance_type==4&corner_random==3&order_rate>=50", effects: [{ modifier: 1500, type: 22 }], precondition: "" }], rarity: 1 }, "202531": { alternatives: [{ baseDuration: 24e3, condition: "distance_type==2&phase_random==1@distance_type==3&phase_random==1", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 2 }, "202532": { alternatives: [{ baseDuration: 24e3, condition: "distance_type==2&phase_random==1@distance_type==3&phase_random==1", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "202541": { alternatives: [{ baseDuration: 18e3, condition: "running_style==3&order_rate>=40&is_finalcorner_random==1", effects: [{ modifier: 3500, type: 27 }, { modifier: -1500, type: 21 }, { modifier: -1500, type: 21 }], precondition: "" }], rarity: 2 }, "202542": { alternatives: [{ baseDuration: 18e3, condition: "running_style==3&order_rate>=40&is_finalcorner_random==1", effects: [{ modifier: 1500, type: 27 }, { modifier: -350, type: 21 }, { modifier: -350, type: 21 }], precondition: "" }], rarity: 1 }, "202551": { alternatives: [{ baseDuration: 3e4, condition: "distance_rate_after_random==50", effects: [{ modifier: 3500, type: 22 }, { modifier: 150, type: 9 }], precondition: "" }], rarity: 2 }, "202552": { alternatives: [{ baseDuration: 3e4, condition: "distance_rate_after_random==50", effects: [{ modifier: 1500, type: 22 }, { modifier: 35, type: 9 }], precondition: "" }], rarity: 1 }, "202561": { alternatives: [{ baseDuration: 24e3, condition: "distance_type==4&phase_laterhalf_random==1&order_rate>=50", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 2 }, "202562": { alternatives: [{ baseDuration: 24e3, condition: "distance_type==4&phase_laterhalf_random==1&order_rate>=50", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "202571": { alternatives: [{ baseDuration: 18e3, condition: "distance_type==1&phase_random==2", effects: [{ modifier: 4e3, type: 31 }], precondition: "" }], rarity: 2 }, "202581": { alternatives: [{ baseDuration: 24e3, condition: "distance_type==4&phase_random==1", effects: [{ modifier: 550, type: 9 }, { modifier: 2500, type: 27 }], precondition: "" }], rarity: 2 }, "202582": { alternatives: [{ baseDuration: 24e3, condition: "distance_type==4&phase_random==1", effects: [{ modifier: 150, type: 9 }, { modifier: 500, type: 27 }], precondition: "" }], rarity: 1 }, "202591": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==4&running_style==3&phase_firsthalf_random==2&lastspurt==2", effects: [{ modifier: 3500, type: 22 }], precondition: "" }], rarity: 2 }, "202592": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==4&running_style==3&phase_firsthalf_random==2&lastspurt==2", effects: [{ modifier: 1500, type: 22 }], precondition: "" }], rarity: 1 }, "202601": { alternatives: [{ baseDuration: 24e3, condition: "distance_type==3&activate_count_all>=13", effects: [{ modifier: 3500, type: 22 }], precondition: "" }], rarity: 2 }, "202602": { alternatives: [{ baseDuration: 24e3, condition: "distance_type==3&activate_count_all>=13", effects: [{ modifier: 1500, type: 22 }], precondition: "" }], rarity: 1 }, "202612": { alternatives: [{ baseDuration: 24e3, condition: "running_style==3&phase_laterhalf_random==0&order_rate>=40", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "202621": { alternatives: [{ baseDuration: 24e3, condition: "running_style==3&phase_laterhalf_random==1&order_rate>=40", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 2 }, "202622": { alternatives: [{ baseDuration: 24e3, condition: "running_style==3&phase_laterhalf_random==1&order_rate>=40", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "202641": { alternatives: [{ baseDuration: 4e4, condition: "running_style==3&phase_random==1&order_rate>=40&order_rate<=90", effects: [{ modifier: 2500, type: 27 }], precondition: "" }], rarity: 2 }, "202642": { alternatives: [{ baseDuration: 4e4, condition: "running_style==3&phase_random==1&order_rate>=40&order_rate<=90", effects: [{ modifier: 500, type: 27 }], precondition: "" }], rarity: 1 }, "202651": { alternatives: [{ baseDuration: -1, condition: "base_speed>=1000&base_power>=1000&distance_type==2@base_speed>=1000&base_power>=1000&distance_type==3", effects: [{ modifier: 6e5, type: 1 }, { modifier: 6e5, type: 3 }], precondition: "" }], rarity: 2 }, "202652": { alternatives: [{ baseDuration: -1, condition: "base_speed>=1000&base_power>=1000&distance_type==2@base_speed>=1000&base_power>=1000&distance_type==3", effects: [{ modifier: 2e5, type: 1 }, { modifier: 2e5, type: 3 }], precondition: "" }], rarity: 1 }, "202661": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==3&phase_firsthalf_random==2&order_rate>=30&order_rate<=80@distance_type==4&phase_firsthalf_random==2&order_rate>=30&order_rate<=80", effects: [{ modifier: 3500, type: 22 }], precondition: "" }], rarity: 2 }, "202662": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==3&phase_firsthalf_random==2&order_rate>=30&order_rate<=80@distance_type==4&phase_firsthalf_random==2&order_rate>=30&order_rate<=80", effects: [{ modifier: 1500, type: 22 }], precondition: "" }], rarity: 1 }, "202671": { alternatives: [{ baseDuration: 18e3, condition: "distance_type==2&phase_firsthalf_random==2&order_rate<=50", effects: [{ modifier: 4e3, type: 31 }], precondition: "" }], rarity: 2 }, "202672": { alternatives: [{ baseDuration: 18e3, condition: "distance_type==2&phase_firsthalf_random==2&order_rate<=50", effects: [{ modifier: 2e3, type: 31 }], precondition: "" }], rarity: 1 }, "202681": { alternatives: [{ baseDuration: 24e3, condition: "distance_type==4&phase_random==1", effects: [{ modifier: 3500, type: 27 }, { modifier: 350, type: 9 }], precondition: "" }], rarity: 2 }, "202682": { alternatives: [{ baseDuration: 24e3, condition: "distance_type==4&phase_random==1", effects: [{ modifier: 1500, type: 27 }, { modifier: 50, type: 9 }], precondition: "" }], rarity: 1 }, "202691": { alternatives: [{ baseDuration: 15e3, condition: "distance_type==3&phase==0", effects: [{ modifier: 4e3, type: 31 }], precondition: "" }], rarity: 2 }, "202692": { alternatives: [{ baseDuration: 15e3, condition: "distance_type==3&phase==0", effects: [{ modifier: 2e3, type: 31 }], precondition: "" }], rarity: 1 }, "202701": { alternatives: [{ baseDuration: -1, condition: "running_style==2&distance_type==3&base_speed>=1200&base_wiz>=1200", effects: [{ modifier: 8e5, type: 1 }], precondition: "" }, { baseDuration: -1, condition: "running_style==2&distance_type==3&base_speed>=1200&base_wiz<1200", effects: [{ modifier: 6e5, type: 1 }], precondition: "" }], rarity: 2 }, "202702": { alternatives: [{ baseDuration: -1, condition: "running_style==2&distance_type==3&base_speed>=1200&base_wiz>=1200", effects: [{ modifier: 4e5, type: 1 }], precondition: "" }, { baseDuration: -1, condition: "running_style==2&distance_type==3&base_speed>=1200&base_wiz<1200", effects: [{ modifier: 2e5, type: 1 }], precondition: "" }], rarity: 1 }, "202711": { alternatives: [{ baseDuration: 9e3, condition: "running_style==2&phase>=2&is_finalcorner==1&corner!=0&remain_distance>=600&order_rate<=70@running_style==3&phase>=2&is_finalcorner==1&corner!=0&remain_distance>=600&order_rate<=70", effects: [{ modifier: 4e3, type: 31 }], precondition: "" }], rarity: 2 }, "202712": { alternatives: [{ baseDuration: 9e3, condition: "running_style==2&phase>=2&is_finalcorner==1&corner!=0&remain_distance>=600&order_rate<=70@running_style==3&phase>=2&is_finalcorner==1&corner!=0&remain_distance>=600&order_rate<=70", effects: [{ modifier: 2e3, type: 31 }], precondition: "" }], rarity: 1 }, "202721": { alternatives: [{ baseDuration: 4e4, condition: "phase_corner_random==1", effects: [{ modifier: 2500, type: 27 }], precondition: "" }], rarity: 2 }, "202722": { alternatives: [{ baseDuration: 4e4, condition: "phase_corner_random==1", effects: [{ modifier: 500, type: 27 }], precondition: "" }], rarity: 1 }, "202731": { alternatives: [{ baseDuration: -1, condition: "track_id==10201", effects: [{ modifier: 6e5, type: 2 }], precondition: "" }], rarity: 1 }, "202732": { alternatives: [{ baseDuration: -1, condition: "track_id==10201", effects: [{ modifier: 4e5, type: 2 }], precondition: "" }], rarity: 1 }, "202733": { alternatives: [{ baseDuration: -1, condition: "track_id==10201", effects: [{ modifier: -4e5, type: 2 }], precondition: "" }], rarity: 1 }, "202734": { alternatives: [{ baseDuration: -1, condition: "track_id==10201", effects: [{ modifier: 6e5, type: 2 }, { modifier: 6e5, type: 5 }, { modifier: 6e5, type: 1 }], precondition: "" }], rarity: 2 }, "202741": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==2&corner_random==3&order_rate<=50@distance_type==3&corner_random==3&order_rate<=50", effects: [{ modifier: 3500, type: 22 }], precondition: "" }], rarity: 2 }, "202742": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==2&corner_random==3&order_rate<=50@distance_type==3&corner_random==3&order_rate<=50", effects: [{ modifier: 1500, type: 22 }], precondition: "" }], rarity: 1 }, "202751": { alternatives: [{ baseDuration: 24e3, condition: "distance_type==1&phase_laterhalf_random==1&order_rate>=40", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 2 }, "202752": { alternatives: [{ baseDuration: 24e3, condition: "distance_type==1&phase_laterhalf_random==1&order_rate>=40", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "210011": { alternatives: [{ baseDuration: 18e3, condition: "phase_random==1", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 2 }, "210012": { alternatives: [{ baseDuration: 18e3, condition: "phase_random==1", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "210021": { alternatives: [{ baseDuration: 0, condition: "phase_random==1", effects: [{ modifier: 550, type: 9 }], precondition: "" }], rarity: 2 }, "210022": { alternatives: [{ baseDuration: 0, condition: "phase_random==1", effects: [{ modifier: 150, type: 9 }], precondition: "" }], rarity: 1 }, "210031": { alternatives: [{ baseDuration: 12e3, condition: "phase_random==2", effects: [{ modifier: 4e3, type: 31 }], precondition: "" }], rarity: 2 }, "210032": { alternatives: [{ baseDuration: 12e3, condition: "phase_random==2", effects: [{ modifier: 2e3, type: 31 }], precondition: "" }], rarity: 1 }, "210041": { alternatives: [{ baseDuration: 18e3, condition: "phase_random==2", effects: [{ modifier: 2500, type: 27 }, { modifier: 3e3, type: 31 }], precondition: "" }], rarity: 2 }, "210042": { alternatives: [{ baseDuration: 18e3, condition: "phase_random==2", effects: [{ modifier: 500, type: 27 }, { modifier: 1e3, type: 31 }], precondition: "" }], rarity: 1 }, "210051": { alternatives: [{ baseDuration: 4e4, condition: "phase_random==0", effects: [{ modifier: 350, type: 28 }, { modifier: 15e4, type: 8 }], precondition: "" }], rarity: 2 }, "210052": { alternatives: [{ baseDuration: 4e4, condition: "phase_random==0", effects: [{ modifier: 150, type: 28 }, { modifier: 5e4, type: 8 }], precondition: "" }], rarity: 1 }, "210061": { alternatives: [{ baseDuration: 12e3, condition: "distance_rate_after_random==50", effects: [{ modifier: 2500, type: 27 }, { modifier: 3e3, type: 31 }, { modifier: 350, type: 9 }], precondition: "" }], rarity: 2 }, "210062": { alternatives: [{ baseDuration: 12e3, condition: "distance_rate_after_random==50", effects: [{ modifier: 500, type: 27 }, { modifier: 1e3, type: 31 }, { modifier: 50, type: 9 }], precondition: "" }], rarity: 1 }, "210071": { alternatives: [{ baseDuration: 12e3, condition: "distance_rate_after_random==50&order_rate<=65", effects: [{ modifier: 3500, type: 27 }, { modifier: 2e3, type: 31 }], precondition: "" }], rarity: 2 }, "210072": { alternatives: [{ baseDuration: 12e3, condition: "distance_rate_after_random==50&order_rate<=65", effects: [{ modifier: 1500, type: 27 }, { modifier: 700, type: 31 }], precondition: "" }], rarity: 1 }, "210081": { alternatives: [{ baseDuration: 24e3, condition: "is_lastspurt==1&phase_random==3", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 2 }, "210082": { alternatives: [{ baseDuration: 24e3, condition: "is_lastspurt==1&phase_random==3", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "210091": { alternatives: [{ baseDuration: 2e4, condition: "phase_laterhalf_random==1", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "210101": { alternatives: [{ baseDuration: 3e4, condition: "phase_random==3&hp_per>=2&is_lastspurt==1", effects: [{ modifier: 2500, type: 27 }, { modifier: -200, type: 9 }], precondition: "" }], rarity: 1 }, "210111": { alternatives: [{ baseDuration: 4e4, condition: "phase==3&is_overtake==1&is_lastspurt==1", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "210121": { alternatives: [{ baseDuration: 12e3, condition: "compete_fight_count>0", effects: [{ modifier: 2e3, type: 31 }], precondition: "" }], rarity: 1 }, "210131": { alternatives: [{ baseDuration: 2e4, condition: "activate_count_later_half>=2", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "210141": { alternatives: [{ baseDuration: -1, condition: "motivation>=4", effects: [{ modifier: 4e5, type: 2 }, { modifier: 4e5, type: 4 }, { modifier: 4e5, type: 5 }], precondition: "" }], rarity: 1 }, "210261": { alternatives: [{ baseDuration: 18e3, condition: "phase==1&blocked_side_continuetime>=2", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 2 }, "210262": { alternatives: [{ baseDuration: 18e3, condition: "phase==1&blocked_side_continuetime>=2", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "210271": { alternatives: [{ baseDuration: 15e3, condition: "phase_firsthalf_random==0", effects: [{ modifier: 4e3, type: 31 }], precondition: "" }], rarity: 2 }, "210272": { alternatives: [{ baseDuration: 15e3, condition: "phase_firsthalf_random==0", effects: [{ modifier: 2e3, type: 31 }], precondition: "" }], rarity: 1 }, "210281": { alternatives: [{ baseDuration: 24e3, condition: "phase_laterhalf_random==2", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 2 }, "210282": { alternatives: [{ baseDuration: 24e3, condition: "phase_laterhalf_random==2", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "210291": { alternatives: [{ baseDuration: 24e3, condition: "is_last_straight==1", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 2 }, "210292": { alternatives: [{ baseDuration: 24e3, condition: "is_last_straight==1", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "300131": { alternatives: [{ baseDuration: 3e4, condition: "remain_distance>=350&remain_distance<=400", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 5 }, "300141": { alternatives: [{ baseDuration: 3e4, condition: "remain_distance>=350&remain_distance<=400", effects: [{ modifier: 3500, type: 27 }], precondition: "" }], rarity: 5 }, "900011": { alternatives: [{ baseDuration: 3e4, condition: "phase>=2&order>=1&order_rate<=50&change_order_onetime<0", effects: [{ modifier: 1500, type: 22 }, { modifier: 500, type: 31 }], precondition: "" }], rarity: 1 }, "900021": { alternatives: [{ baseDuration: 3e4, condition: "distance_rate>=50&order==1&bashin_diff_behind>=1", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "900031": { alternatives: [{ baseDuration: 3e4, condition: "is_last_straight==1", effects: [{ modifier: 2500, type: 27 }], precondition: "phase>=2&order<=3&bashin_diff_infront<=1&is_overtake==1" }], rarity: 1 }, "900041": { alternatives: [{ baseDuration: 24e3, condition: "is_finalcorner==1&order<=5&order_rate<=50", effects: [{ modifier: 2e3, type: 31 }], precondition: "" }], rarity: 1 }, "900051": { alternatives: [{ baseDuration: 3e4, condition: "remain_distance<=300", effects: [{ modifier: 2500, type: 27 }], precondition: "phase>=2&order_rate<=40&behind_near_lane_time_set1>=1" }], rarity: 1 }, "900061": { alternatives: [{ baseDuration: 3e4, condition: "order>=2&order<=5&order_rate<=50&remain_distance<=201&remain_distance>=199", effects: [{ modifier: 2500, type: 27 }], precondition: "" }], rarity: 1 }, "900071": { alternatives: [{ baseDuration: 36e3, condition: "distance_rate>=50&distance_rate<=60&order_rate>50", effects: [{ modifier: 500, type: 27 }], precondition: "" }], rarity: 1 }, "900081": { alternatives: [{ baseDuration: 3e4, condition: "order>=3&order_rate<=50&remain_distance<=200&bashin_diff_infront<=1@order>=3&order_rate<=50&remain_distance<=200&bashin_diff_behind<=1", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "900091": { alternatives: [{ baseDuration: 3e4, condition: "distance_rate>=50&order==1&bashin_diff_behind<=1@distance_rate>=50&order==2&is_overtake==1", effects: [{ modifier: 500, type: 27 }, { modifier: 1e3, type: 31 }], precondition: "" }], rarity: 1 }, "900101": { alternatives: [{ baseDuration: 3e4, condition: "is_finalcorner_laterhalf==1&corner!=0&order>=3&order_rate<=40", effects: [{ modifier: 2e3, type: 31 }], precondition: "" }], rarity: 1 }, "900111": { alternatives: [{ baseDuration: 3e4, condition: "is_last_straight==1&change_order_onetime<0&order>=3", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "900121": { alternatives: [{ baseDuration: 3e4, condition: "is_last_straight==1", effects: [{ modifier: 1500, type: 27 }], precondition: "is_finalcorner==1&is_behind_in==1&change_order_onetime<0&order_rate>=40" }], rarity: 1 }, "900131": { alternatives: [{ baseDuration: 3e4, condition: "is_finalcorner==1&corner!=0&distance_diff_rate<=30&distance_type==4&lastspurt==2", effects: [{ modifier: 2500, type: 27 }], precondition: "" }, { baseDuration: 3e4, condition: "is_finalcorner==1&corner!=0&distance_diff_rate<=30", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "900141": { alternatives: [{ baseDuration: 3e4, condition: "is_last_straight==1&hp_per>=30&order<=2", effects: [{ modifier: 500, type: 27 }, { modifier: 1e3, type: 31 }], precondition: "" }], rarity: 1 }, "900151": { alternatives: [{ baseDuration: 3e4, condition: "is_finalcorner==1&bashin_diff_behind<=1&order<=4@is_finalcorner==1&bashin_diff_infront<=1&order<=4", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "900161": { alternatives: [{ baseDuration: 3e4, condition: "is_finalcorner==1&order>=2&order_rate<=75&is_behind_in==1&change_order_onetime<0", effects: [{ modifier: 2500, type: 27 }], precondition: "phase==1&blocked_side_continuetime>=2" }, { baseDuration: 3e4, condition: "is_finalcorner==1&order>=2&order_rate<=75&is_behind_in==1&change_order_onetime<0", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "900171": { alternatives: [{ baseDuration: 3e4, condition: "is_last_straight==1&change_order_up_end_after>=3", effects: [{ modifier: 2500, type: 27 }], precondition: "" }], rarity: 1 }, "900181": { alternatives: [{ baseDuration: 3e4, condition: "is_finalcorner==1&corner!=0&order>=3&change_order_onetime<0", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "900191": { alternatives: [{ baseDuration: 3e4, condition: "change_order_up_end_after>=2", effects: [{ modifier: 1500, type: 27 }, { modifier: 150, type: 28 }], precondition: "" }], rarity: 1 }, "900201": { alternatives: [{ baseDuration: 24e3, condition: "phase>=2&corner!=0&order==1", effects: [{ modifier: 2e3, type: 31 }], precondition: "" }], rarity: 1 }, "900211": { alternatives: [{ baseDuration: 3e4, condition: "distance_rate>=50&corner==0&order_rate>=70&order_rate<=75&is_overtake==1@distance_rate>=50&corner==0&order_rate<=30&order_rate>=20", effects: [{ modifier: 1500, type: 27 }, { modifier: 500, type: 31 }], precondition: "" }], rarity: 1 }, "900221": { alternatives: [{ baseDuration: 3e4, condition: "distance_rate>=50&order>=2&order_rate<=40&blocked_side_continuetime>=2", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "900231": { alternatives: [{ baseDuration: 3e4, condition: "phase>=2&is_finalcorner==1&order<=4&temptation_count==0", effects: [{ modifier: 2500, type: 27 }], precondition: "" }, { baseDuration: 3e4, condition: "phase>=2&is_finalcorner==1&order<=4", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "900241": { alternatives: [{ baseDuration: 3e4, condition: "is_finalcorner==1&blocked_side_continuetime>=2&order<=3", effects: [{ modifier: 500, type: 27 }, { modifier: 1e3, type: 31 }], precondition: "" }], rarity: 1 }, "900251": { alternatives: [{ baseDuration: 36e3, condition: "distance_rate>=50&order_rate>=40&order_rate<=70", effects: [{ modifier: 500, type: 27 }, { modifier: -250, type: 21 }], precondition: "" }], rarity: 1 }, "900261": { alternatives: [{ baseDuration: 3e4, condition: "is_badstart==0&order<=3&is_last_straight==1&order_rate_in20_continue==1", effects: [{ modifier: 2500, type: 27 }], precondition: "" }, { baseDuration: 3e4, condition: "is_badstart==0&order<=3&is_last_straight==1", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "900271": { alternatives: [{ baseDuration: 24e3, condition: "phase>=2&corner!=0&order_rate>=65&order_rate<=70", effects: [{ modifier: 2e3, type: 31 }], precondition: "" }], rarity: 1 }, "900281": { alternatives: [{ baseDuration: 3e4, condition: "distance_rate>=45&distance_rate<=60&order>=3&order_rate<=50&hp_per<=70", effects: [{ modifier: 500, type: 27 }, { modifier: 1e3, type: 31 }], precondition: "" }], rarity: 1 }, "900291": { alternatives: [{ baseDuration: 3e4, condition: "distance_diff_top<=5&remain_distance<=300&order_rate<=40", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "900301": { alternatives: [{ baseDuration: 3e4, condition: "is_last_straight==1", effects: [{ modifier: 1500, type: 27 }], precondition: "phase>=2&order<=4&change_order_onetime<0" }], rarity: 1 }, "900311": { alternatives: [{ baseDuration: 3e4, condition: "remain_distance<=299&remain_distance>=295&order<=2&slope==0@remain_distance<=299&remain_distance>=295&order<=2&slope==2", effects: [{ modifier: 2500, type: 27 }], precondition: "remain_distance<=305&remain_distance>=300&slope==1" }, { baseDuration: 3e4, condition: "remain_distance<=299&remain_distance>=295&order<=2", effects: [{ modifier: 500, type: 27 }], precondition: "" }], rarity: 1 }, "900321": { alternatives: [{ baseDuration: 24e3, condition: "distance_rate>=50&corner!=0&order>=3&order_rate<=40", effects: [{ modifier: 150, type: 9 }, { modifier: 500, type: 27 }], precondition: "" }], rarity: 1 }, "900331": { alternatives: [{ baseDuration: 3e4, condition: "is_last_straight==1&distance_diff_top>=5&order_rate<80", effects: [{ modifier: 1500, type: 27 }], precondition: "" }, { baseDuration: 3e4, condition: "is_last_straight==1&distance_diff_top>=5&order_rate>=80", effects: [{ modifier: 2500, type: 27 }], precondition: "" }], rarity: 1 }, "900341": { alternatives: [{ baseDuration: 3e4, condition: "compete_fight_count>0", effects: [{ modifier: 2500, type: 27 }], precondition: "distance_rate>=50&order_rate_out40_continue==1" }], rarity: 1 }, "900351": { alternatives: [{ baseDuration: 3e4, condition: "is_last_straight==1&order<=5", effects: [{ modifier: 1500, type: 27 }], precondition: "is_finalcorner==1&blocked_side_continuetime>=2" }], rarity: 1 }, "900361": { alternatives: [{ baseDuration: 3e4, condition: "is_last_straight==1", effects: [{ modifier: 1500, type: 27 }, { modifier: 150, type: 28 }], precondition: "is_finalcorner==1&order_rate>=40&order_rate<=75&lane_type==0" }], rarity: 1 }, "900371": { alternatives: [{ baseDuration: 3e4, condition: "temptation_count==0&order>=3&is_last_straight==1&order_rate_in80_continue==1&order_rate_out40_continue==1", effects: [{ modifier: 2500, type: 27 }], precondition: "" }, { baseDuration: 3e4, condition: "temptation_count==0&order>=3&is_last_straight==1", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "900381": { alternatives: [{ baseDuration: 3e4, condition: "distance_rate>=50&distance_rate<=65&order>=2&order_rate<=40&change_order_onetime<0", effects: [{ modifier: 500, type: 27 }, { modifier: 1e3, type: 31 }], precondition: "" }], rarity: 1 }, "900391": { alternatives: [{ baseDuration: 3e4, condition: "is_last_straight==1&blocked_side_continuetime>=2", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "900401": { alternatives: [{ baseDuration: 36e3, condition: "distance_rate>=50&order_rate>=40&order_rate<=70&is_overtake==1", effects: [{ modifier: 1e3, type: 31 }], precondition: "" }], rarity: 1 }, "900411": { alternatives: [{ baseDuration: 3e4, condition: "distance_rate>=50&order<=3&blocked_side_continuetime>=2", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "900421": { alternatives: [{ baseDuration: 3e4, condition: "remain_distance<=201&remain_distance>=199&distance_diff_top<=5&order>=2", effects: [{ modifier: 2500, type: 27 }], precondition: "" }, { baseDuration: 3e4, condition: "remain_distance<=201&remain_distance>=199&distance_diff_top<=10&order>=2", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "900431": { alternatives: [{ baseDuration: 3e4, condition: "compete_fight_count>0&ground_type==2", effects: [{ modifier: 500, type: 27 }, { modifier: 2e3, type: 31 }], precondition: "" }, { baseDuration: 3e4, condition: "compete_fight_count>0", effects: [{ modifier: 500, type: 27 }], precondition: "" }], rarity: 1 }, "900441": { alternatives: [{ baseDuration: 36e3, condition: "remain_distance<=300", effects: [{ modifier: 1500, type: 27 }], precondition: "order_rate_out50_continue==1&temptation_count==0&is_finalcorner==1" }], rarity: 1 }, "900451": { alternatives: [{ baseDuration: 0, condition: "phase_random==1&order>=2&order_rate<=40", effects: [{ modifier: 350, type: 9 }], precondition: "" }], rarity: 1 }, "900461": { alternatives: [{ baseDuration: 3e4, condition: "phase==1&corner==0&order<=2&bashin_diff_behind<=1", effects: [{ modifier: 500, type: 27 }, { modifier: 1e3, type: 31 }], precondition: "" }], rarity: 1 }, "900471": { alternatives: [{ baseDuration: 3e4, condition: "phase>=2&remain_distance<=401&remain_distance>=399&order_rate<=40&grade==100&popularity<=3", effects: [{ modifier: 2500, type: 27 }], precondition: "" }, { baseDuration: 3e4, condition: "phase>=2&remain_distance<=401&remain_distance>=399&order_rate<=40", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "900481": { alternatives: [{ baseDuration: 3e4, condition: "is_last_straight==1&order_rate<=40&overtake_target_time>=1@is_last_straight==1&order_rate<=40&is_overtake==1", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "900491": { alternatives: [{ baseDuration: 3e4, condition: "remain_distance<=400&order_rate>=30&order_rate<=50&popularity>=4", effects: [{ modifier: 2500, type: 27 }], precondition: "is_finalcorner==1&is_overtake==1" }, { baseDuration: 3e4, condition: "remain_distance<=400&order_rate>=30&order_rate<=50&popularity<4", effects: [{ modifier: 1500, type: 27 }], precondition: "is_finalcorner==1&is_overtake==1" }], rarity: 1 }, "900501": { alternatives: [{ baseDuration: 3e4, condition: "is_finalcorner==1&order_rate>=40&order_rate<=75&is_overtake==1", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "900511": { alternatives: [{ baseDuration: 24e3, condition: "phase>=2&is_finalcorner_laterhalf==1&order>=3&order_rate<=40@phase>=2&is_finalcorner==1&corner==0&order>=3&order_rate<=40", effects: [{ modifier: 2e3, type: 31 }], precondition: "phase==1&blocked_side_continuetime>=2&corner!=0" }], rarity: 1 }, "900521": { alternatives: [{ baseDuration: 0, condition: "is_finalcorner==1&corner!=0&order_rate>50&near_count>=1", effects: [{ modifier: 150, type: 9 }], precondition: "" }], rarity: 1 }, "900531": { alternatives: [{ baseDuration: 12e3, condition: "phase>=2&order_rate>=50&is_finalcorner==1&bashin_diff_infront<=1", effects: [{ modifier: 500, type: 31 }, { modifier: 500, type: 31 }], precondition: "" }], rarity: 1 }, "900551": { alternatives: [{ baseDuration: 3e4, condition: "distance_rate<=50&distance_rate>=40&order_rate<=80&order_rate>=50&near_count>=1&visiblehorse>=4", effects: [{ modifier: 2e3, type: 27 }], precondition: "" }, { baseDuration: 3e4, condition: "distance_rate<=50&distance_rate>=40&order_rate<=80&order_rate>=50&near_count>=1", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "900561": { alternatives: [{ baseDuration: 3e4, condition: "phase>=2&order>=3&blocked_front==1", effects: [{ modifier: 1500, type: 27 }, { modifier: 500, type: 31 }], precondition: "" }], rarity: 1 }, "900571": { alternatives: [{ baseDuration: 36e3, condition: "distance_type==3&phase_laterhalf_random==1&order_rate>50@distance_type==4&phase_laterhalf_random==1&order_rate>50", effects: [{ modifier: 500, type: 27 }], precondition: "" }, { baseDuration: 36e3, condition: "distance_type==1&phase_laterhalf_random==1&order_rate>50@distance_type==2&phase_laterhalf_random==1&order_rate>50", effects: [{ modifier: 500, type: 27 }], precondition: "" }], rarity: 1 }, "900581": { alternatives: [{ baseDuration: 3e4, condition: "phase>=2&change_order_onetime<0", effects: [{ modifier: 500, type: 27 }, { modifier: 1e3, type: 31 }], precondition: "" }], rarity: 1 }, "900591": { alternatives: [{ baseDuration: 24e3, condition: "phase>=2&corner!=0&is_finalcorner==0&temptation_count==0&order_rate>=50&order_rate<=70@phase==1&corner!=0&is_finalcorner==1&temptation_count==0&order_rate>=50&order_rate<=70", effects: [{ modifier: 2e3, type: 31 }], precondition: "" }], rarity: 1 }, "900601": { alternatives: [{ baseDuration: 3e4, condition: "phase>=2&order==3&bashin_diff_behind<=1", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "900611": { alternatives: [{ baseDuration: 3e4, condition: "temptation_count==0&remain_distance<=201&remain_distance>=199&order>=4&order_rate<=70", effects: [{ modifier: 2500, type: 27 }], precondition: "" }], rarity: 1 }, "900621": { alternatives: [{ baseDuration: 3e4, condition: "distance_rate>=50&phase==1&order>=3&order_rate<=70", effects: [{ modifier: 150, type: 9 }, { modifier: 500, type: 27 }], precondition: "" }], rarity: 1 }, "900641": { alternatives: [{ baseDuration: 36e3, condition: "distance_rate>=50&order_rate_in20_continue==1", effects: [{ modifier: 150, type: 9 }, { modifier: 500, type: 27 }], precondition: "" }], rarity: 1 }, "900651": { alternatives: [{ baseDuration: 36e3, condition: "distance_type==1&phase_laterhalf_random==1&order_rate<=50@distance_type==2&phase_laterhalf_random==1&order_rate<=50", effects: [{ modifier: 500, type: 27 }], precondition: "" }, { baseDuration: 3e4, condition: "distance_type==3&phase_laterhalf_random==1&order_rate<=50@distance_type==4&phase_laterhalf_random==1&order_rate<=50", effects: [{ modifier: 500, type: 27 }], precondition: "" }], rarity: 1 }, "900661": { alternatives: [{ baseDuration: 104e3, condition: "distance_rate>=34&distance_rate<=36&order==1&bashin_diff_behind>=1", effects: [{ modifier: 350, type: 27 }], precondition: "" }, { baseDuration: 5e6, condition: "phase==3&is_activate_other_skill_detail==1", effects: [{ modifier: -500, type: 21 }], precondition: "" }], rarity: 1 }, "900671": { alternatives: [{ baseDuration: 3e4, condition: "is_last_straight_onetime==1&order>=2&order<=5&distance_diff_top<=5", effects: [{ modifier: 2500, type: 27 }], precondition: "" }, { baseDuration: 3e4, condition: "is_last_straight_onetime==1&order>=2&order<=5&distance_diff_top>5", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "900681": { alternatives: [{ baseDuration: 3e4, condition: "phase==2&straight_front_type==2&order<=2", effects: [{ modifier: 500, type: 27 }, { modifier: 1e3, type: 31 }], precondition: "" }, { baseDuration: 3e4, condition: "distance_rate>=50&corner==3&order<=2", effects: [{ modifier: 500, type: 27 }], precondition: "" }], rarity: 1 }, "900691": { alternatives: [{ baseDuration: 3e4, condition: "remain_distance<=300&order_rate<=40&bashin_diff_infront<=1", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "900701": { alternatives: [{ baseDuration: 24e3, condition: "remain_distance>=799&remain_distance<=801&order_rate>=30&order_rate<=60&course_distance==2400&popularity<=3", effects: [{ modifier: 3e3, type: 31 }], precondition: "" }, { baseDuration: 24e3, condition: "remain_distance>=799&remain_distance<=801&order_rate>=30&order_rate<=60", effects: [{ modifier: 700, type: 31 }], precondition: "" }], rarity: 1 }, "900711": { alternatives: [{ baseDuration: 24e3, condition: "is_last_straight==1&bashin_diff_behind<=1", effects: [{ modifier: 2500, type: 27 }, { modifier: -100, type: 9 }], precondition: "" }], rarity: 1 }, "900721": { alternatives: [{ baseDuration: 3e4, condition: "remain_distance<=300&order_rate<=40", effects: [{ modifier: 1500, type: 27 }], precondition: "is_finalcorner==1&change_order_onetime<0" }], rarity: 1 }, "900741": { alternatives: [{ baseDuration: 3e4, condition: "distance_rate>=50&order_rate>=40&order_rate<=80", effects: [{ modifier: 350, type: 27 }], precondition: "" }], rarity: 1 }, "900761": { alternatives: [{ baseDuration: 36e3, condition: "distance_type==4&distance_rate>=50&distance_rate<=51&order_rate>=30&order_rate<=80", effects: [{ modifier: 500, type: 27 }, { modifier: 350, type: 9 }], precondition: "" }, { baseDuration: 3e4, condition: "distance_rate>=50&distance_rate<=51&order_rate>=30&order_rate<=80", effects: [{ modifier: 500, type: 27 }], precondition: "" }], rarity: 1 }, "900771": { alternatives: [{ baseDuration: 3e4, condition: "remain_distance<=401&remain_distance>=399", effects: [{ modifier: 2500, type: 27 }], precondition: "distance_rate>=60&phase==1&order>=2&order_rate<=40" }], rarity: 1 }, "900781": { alternatives: [{ baseDuration: 48e3, condition: "is_finalcorner_laterhalf==1&distance_diff_rate<=50&order==2", effects: [{ modifier: 700, type: 31 }], precondition: "distance_rate>=50&order_rate_out20_continue==1" }, { baseDuration: 48e3, condition: "is_finalcorner_laterhalf==1&distance_diff_rate<=50", effects: [{ modifier: 500, type: 31 }], precondition: "distance_rate>=50&order_rate_out20_continue==1" }], rarity: 1 }, "900831": { alternatives: [{ baseDuration: 36e3, condition: "distance_rate>=40&corner==0&slope==2&order_rate>=40&order_rate<=80", effects: [{ modifier: 1500, type: 27 }], precondition: "" }, { baseDuration: 3e4, condition: "distance_rate>=40&corner==0&order_rate>=40&order_rate<=80", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "900841": { alternatives: [{ baseDuration: 3e4, condition: "is_last_straight==1", effects: [{ modifier: 1500, type: 22 }], precondition: "phase>=2&order_rate>=50" }], rarity: 1 }, "900851": { alternatives: [{ baseDuration: 3e4, condition: "distance_rate>=66&distance_rate<=68&order_rate>=60&order_rate<=90&temptation_count==0", effects: [{ modifier: 500, type: 22 }, { modifier: -250, type: 21 }], precondition: "" }], rarity: 1 }, "900861": { alternatives: [{ baseDuration: 3e4, condition: "remain_distance>=999&remain_distance<=1001&order_rate>=20&order_rate<=50", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "900871": { alternatives: [{ baseDuration: 3e4, condition: "remain_distance<=400&order<=2&overtake_target_time>=1", effects: [{ modifier: 500, type: 27 }, { modifier: 1e3, type: 31 }], precondition: "" }], rarity: 1 }, "900931": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==1&phase_firsthalf_random==2&order_rate<=50&order_rate>=20@distance_type==2&phase_firsthalf_random==2&order_rate<=50&order_rate>=20", effects: [{ modifier: 1500, type: 22 }], precondition: "" }, { baseDuration: 3e4, condition: "distance_type==3&phase_firsthalf_random==2&order_rate<=50&order_rate>=20@distance_type==4&phase_firsthalf_random==2&order_rate<=50&order_rate>=20", effects: [{ modifier: 500, type: 22 }], precondition: "" }], rarity: 1 }, "900981": { alternatives: [{ baseDuration: 3e4, condition: "phase_laterhalf_random==1", effects: [{ modifier: 500, type: 27 }], precondition: "" }], rarity: 1 }, "900991": { alternatives: [{ baseDuration: 24e3, condition: "is_lastspurt==1&order_rate<=40&order_rate>=30&ground_type==2", effects: [{ modifier: 700, type: 31 }], precondition: "phase==1&blocked_side_continuetime>=2&corner!=0" }], rarity: 1 }, "901001": { alternatives: [{ baseDuration: 3e4, condition: "remain_distance>=299&remain_distance<=301&order_rate>=20&order_rate<=40&distance_diff_top<=5&ground_type==2", effects: [{ modifier: 500, type: 27 }, { modifier: 500, type: 22 }], precondition: "" }, { baseDuration: 3e4, condition: "remain_distance>=299&remain_distance<=301&order_rate>=20&order_rate<=40", effects: [{ modifier: 500, type: 27 }], precondition: "" }], rarity: 1 }, "901041": { alternatives: [{ baseDuration: 36e3, condition: "corner==3&order==1&track_id==10006&distance_type==3", effects: [{ modifier: 500, type: 27 }, { modifier: 50, type: 9 }], precondition: "" }, { baseDuration: 3e4, condition: "corner==3&order==1", effects: [{ modifier: 500, type: 27 }, { modifier: 50, type: 9 }], precondition: "" }], rarity: 1 }, "901051": { alternatives: [{ baseDuration: 3e4, condition: "distance_rate>=50&distance_rate<=55&order_rate>=40&order_rate<=80&distance_type==3&activate_count_all>=7", effects: [{ modifier: 2500, type: 27 }], precondition: "" }, { baseDuration: 3e4, condition: "distance_rate>=50&distance_rate<=55&order_rate>=40&order_rate<=80", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "901061": { alternatives: [{ baseDuration: 36e3, condition: "distance_type==4&order_rate>=40&order_rate<=70&is_finalcorner_laterhalf==1&popularity>=4", effects: [{ modifier: 2500, type: 27 }], precondition: "" }, { baseDuration: 36e3, condition: "order_rate>=40&order_rate<=70&is_finalcorner_laterhalf==1", effects: [{ modifier: 500, type: 27 }], precondition: "" }], rarity: 1 }, "910011": { alternatives: [{ baseDuration: 0, condition: "phase==1&order>=2&order_rate<=70&activate_count_middle>=2", effects: [{ modifier: 150, type: 9 }], precondition: "" }], rarity: 1 }, "910021": { alternatives: [{ baseDuration: 3e4, condition: "distance_rate>=66&distance_rate<=68&corner==3&order==1", effects: [{ modifier: 2500, type: 22 }], precondition: "phase==1&bashin_diff_behind>=3&order==1" }, { baseDuration: 3e4, condition: "distance_rate>=66&distance_rate<=68&order==1", effects: [{ modifier: 500, type: 22 }], precondition: "" }], rarity: 1 }, "910031": { alternatives: [{ baseDuration: 3e4, condition: "is_last_straight==1", effects: [{ modifier: 2500, type: 27 }], precondition: "is_finalcorner==1&is_overtake==1&order<=5&order_rate<=50&overtake_target_no_order_up_time>=2" }], rarity: 1 }, "910041": { alternatives: [{ baseDuration: 3e4, condition: "distance_rate>=50&activate_count_heal>=1&order<=3", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "910051": { alternatives: [{ baseDuration: 24e3, condition: "is_finalcorner==1&change_order_onetime<0&order_rate<=40", effects: [{ modifier: 2500, type: 27 }], precondition: "" }], rarity: 1 }, "910061": { alternatives: [{ baseDuration: 3e4, condition: "activate_count_heal>=3&distance_rate>=50", effects: [{ modifier: 500, type: 27 }, { modifier: 1e3, type: 31 }, { modifier: 50, type: 9 }], precondition: "" }], rarity: 1 }, "910071": { alternatives: [{ baseDuration: 3e4, condition: "distance_rate_after_random==50", effects: [{ modifier: 350, type: 27 }, { modifier: 1e4, type: 37 }], precondition: "" }], rarity: 1 }, "910081": { alternatives: [{ baseDuration: 3e4, condition: "slope==0@slope==1", effects: [{ modifier: 1500, type: 27 }, { modifier: 500, type: 31 }], precondition: "phase>=1&slope==2&order_rate>=50&order_rate<=80&track_id==10006" }, { baseDuration: 24e3, condition: "slope==0@slope==1", effects: [{ modifier: 1500, type: 27 }], precondition: "phase>=1&slope==2&order_rate>=50&order_rate<=80" }], rarity: 1 }, "910091": { alternatives: [{ baseDuration: 36e3, condition: "distance_rate>=50&corner==0&order==1&bashin_diff_behind<=1", effects: [{ modifier: 1500, type: 27 }], precondition: "" }, { baseDuration: 36e3, condition: "distance_rate>=50&corner==0&order<=2", effects: [{ modifier: 500, type: 27 }], precondition: "" }], rarity: 1 }, "910101": { alternatives: [{ baseDuration: 3e4, condition: "distance_diff_top<=5&order>=2&order_rate<=40&remain_distance<=201&remain_distance>=199", effects: [{ modifier: 1500, type: 27 }, { modifier: 350, type: 22 }], precondition: "" }, { baseDuration: 3e4, condition: "order>=2&order_rate<=40&remain_distance<=201&remain_distance>=199", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "910111": { alternatives: [{ baseDuration: 0, condition: "phase==1&change_order_onetime>0&order_rate>=40", effects: [{ modifier: 350, type: 9 }], precondition: "" }], rarity: 1 }, "910121": { alternatives: [{ baseDuration: 24e3, condition: "distance_rate>=60&phase==1&slope==2&order_rate>=50", effects: [{ modifier: 1500, type: 27 }, { modifier: 500, type: 31 }], precondition: "change_order_up_middle>=3" }], rarity: 1 }, "910131": { alternatives: [{ baseDuration: 36e3, condition: "phase>=2&is_finalcorner==1&order<=4&overtake_target_time>=1", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "910141": { alternatives: [{ baseDuration: 24e3, condition: "is_finalcorner==1&corner!=0&is_overtake==1&order>=4&order_rate<=75", effects: [{ modifier: 2e3, type: 31 }], precondition: "" }], rarity: 1 }, "910151": { alternatives: [{ baseDuration: 3e4, condition: "remain_distance<=401&remain_distance>=399&order_rate<=40&activate_count_all>=7", effects: [{ modifier: 2500, type: 27 }], precondition: "" }, { baseDuration: 3e4, condition: "remain_distance<=401&remain_distance>=399&order_rate<=40&activate_count_all<=6", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "910161": { alternatives: [{ baseDuration: 3e4, condition: "phase>=2&is_finalcorner_laterhalf==1&order_rate<=40", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "910171": { alternatives: [{ baseDuration: 36e3, condition: "is_finalcorner==1", effects: [{ modifier: 1500, type: 27 }], precondition: "phase>=2&order_rate<=50&overtake_target_time>=2" }], rarity: 1 }, "910181": { alternatives: [{ baseDuration: 3e4, condition: "phase==1&order>=3&order_rate<=50&is_overtake==1", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "910191": { alternatives: [{ baseDuration: 3e4, condition: "near_count>=3&phase==1&corner!=0&order_rate>=40", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "910201": { alternatives: [{ baseDuration: 3e4, condition: "phase>=2&corner==0&order<=2&straight_front_type==2", effects: [{ modifier: 1500, type: 27 }, { modifier: 700, type: 31 }], precondition: "" }, { baseDuration: 3e4, condition: "phase>=2&corner==0&order<=2", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "910211": { alternatives: [{ baseDuration: 36e3, condition: "activate_count_middle>=2", effects: [{ modifier: 500, type: 27 }, { modifier: 250, type: 27 }], precondition: "" }], rarity: 1 }, "910221": { alternatives: [{ baseDuration: 3e4, condition: "remain_distance>=401&phase>=2&is_finalcorner==1&order_rate>=20&order_rate<=40", effects: [{ modifier: 1500, type: 27 }, { modifier: 500, type: 31 }], precondition: "" }, { baseDuration: 3e4, condition: "phase>=2&is_finalcorner==1&order_rate>=20&order_rate<=40", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "910231": { alternatives: [{ baseDuration: 3e4, condition: "order_rate_in50_continue==1&phase==1&distance_rate>=50&order>=2&order_rate<=40", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "910241": { alternatives: [{ baseDuration: 3e4, condition: "is_finalcorner==1&order_rate<=40&change_order_onetime<0", effects: [{ modifier: 1500, type: 27 }], precondition: "" }, { baseDuration: 24e3, condition: "is_finalcorner==1&order_rate>=50&order_rate<=80&change_order_onetime<0", effects: [{ modifier: 2e3, type: 31 }], precondition: "" }], rarity: 1 }, "910261": { alternatives: [{ baseDuration: 3e4, condition: "order<=4&phase==1&corner!=0&bashin_diff_behind<=3", effects: [{ modifier: 1500, type: 27 }, { modifier: 35, type: 9 }], precondition: "" }], rarity: 1 }, "910271": { alternatives: [{ baseDuration: 24e3, condition: "distance_rate>=60&slope==2&phase==1&order>=2&distance_diff_top<=10&distance_type==3", effects: [{ modifier: 1500, type: 27 }, { modifier: 500, type: 31 }], precondition: "" }, { baseDuration: 24e3, condition: "distance_rate>=60&slope==2&phase==1&order>=2&distance_diff_top<=10&distance_type!=3", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "910301": { alternatives: [{ baseDuration: 3e4, condition: "phase==1&order>=2&order_rate<=50", effects: [{ modifier: 150, type: 9 }, { modifier: -25, type: 9 }, { modifier: 500, type: 27 }], precondition: "" }], rarity: 1 }, "910311": { alternatives: [{ baseDuration: 36e3, condition: "phase_firsthalf_random==1&order_rate<=30", effects: [{ modifier: 500, type: 27 }, { modifier: 50, type: 9 }], precondition: "" }], rarity: 1 }, "910321": { alternatives: [{ baseDuration: 24e3, condition: "distance_rate>=50&corner!=0&order_rate>=20&order_rate<=50&track_id==10005", effects: [{ modifier: 2500, type: 27 }, { modifier: 250, type: 31 }], precondition: "" }, { baseDuration: 24e3, condition: "distance_rate>=50&corner!=0&order_rate>=20&order_rate<=50", effects: [{ modifier: 2500, type: 27 }], precondition: "" }], rarity: 1 }, "910341": { alternatives: [{ baseDuration: 3e4, condition: "is_last_straight_onetime==1", effects: [{ modifier: 1500, type: 27 }], precondition: "phase>=2&corner!=0&order_rate>=60&is_overtake==1" }], rarity: 1 }, "910351": { alternatives: [{ baseDuration: 36e3, condition: "is_lastspurt==1&is_last_straight==1&order_rate>=40", effects: [{ modifier: 500, type: 27 }, { modifier: 500, type: 27 }], precondition: "" }], rarity: 1 }, "910361": { alternatives: [{ baseDuration: 3e4, condition: "phase>=2&is_finalcorner_laterhalf==1&is_overtake==1@phase>=2&is_finalcorner==1&corner==0&is_overtake==1", effects: [{ modifier: 2500, type: 27 }], precondition: "phase==1&change_order_onetime>0&order_rate>=50&order_rate<=80" }, { baseDuration: 3e4, condition: "phase>=2&is_finalcorner_laterhalf==1&is_overtake==1@phase>=2&is_finalcorner==1&corner==0&is_overtake==1", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "910371": { alternatives: [{ baseDuration: 36e3, condition: "change_order_up_finalcorner_after>=2&is_last_straight==1", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "910381": { alternatives: [{ baseDuration: 3e4, condition: "remain_distance<=350&order_rate<=40&order_rate>=20&bashin_diff_behind<=1", effects: [{ modifier: 500, type: 27 }, { modifier: 1e3, type: 31 }], precondition: "" }], rarity: 1 }, "910391": { alternatives: [{ baseDuration: 3e4, condition: "slope==0@slope==2", effects: [{ modifier: 1500, type: 27 }], precondition: "phase>=1&slope==1&order_rate>=40&order_rate<=80" }], rarity: 1 }, "910401": { alternatives: [{ baseDuration: 3e4, condition: "is_finalcorner==1&corner!=0&order_rate>=30&order_rate<=70&blocked_side_continuetime>=2", effects: [{ modifier: 500, type: 27 }, { modifier: 1e3, type: 31 }], precondition: "" }], rarity: 1 }, "910411": { alternatives: [{ baseDuration: 6e3, condition: "order_rate<=20&remain_distance<=401&remain_distance>=399", effects: [{ modifier: 500, type: 31 }], precondition: "" }], rarity: 1 }, "910451": { alternatives: [{ baseDuration: 3e4, condition: "is_last_straight==1&order<=4&bashin_diff_infront<=1", effects: [{ modifier: 500, type: 27 }, { modifier: 1e3, type: 31 }], precondition: "" }], rarity: 1 }, "910461": { alternatives: [{ baseDuration: 36e3, condition: "distance_rate>=40&distance_rate<=50&distance_diff_rate<=10&ground_type==2", effects: [{ modifier: 500, type: 27 }, { modifier: 50, type: 9 }], precondition: "" }, { baseDuration: 36e3, condition: "distance_rate>=40&distance_rate<=50&distance_diff_rate<=10", effects: [{ modifier: 500, type: 27 }], precondition: "" }], rarity: 1 }, "910481": { alternatives: [{ baseDuration: 36e3, condition: "distance_rate>=40&distance_rate<=50&order_rate>=40&order_rate<=80&motivation==5", effects: [{ modifier: 1e3, type: 27 }], precondition: "" }, { baseDuration: 36e3, condition: "distance_rate>=40&distance_rate<=50&order_rate>=40&order_rate<=80", effects: [{ modifier: 500, type: 27 }], precondition: "" }], rarity: 1 }, "910501": { alternatives: [{ baseDuration: 3e4, condition: "phase>=2&is_finalcorner_laterhalf==1&order_rate<=75&order_rate>=40", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "910511": { alternatives: [{ baseDuration: 3e4, condition: "order>=2&order_rate<=70&remain_distance<=201&remain_distance>=199&near_count>=3", effects: [{ modifier: 1500, type: 27 }, { modifier: 350, type: 22 }], precondition: "" }, { baseDuration: 3e4, condition: "order>=2&order_rate<=70&remain_distance<=201&remain_distance>=199", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "910521": { alternatives: [{ baseDuration: 3e4, condition: "is_finalcorner==1&corner!=0&distance_diff_top>=7", effects: [{ modifier: 500, type: 27 }], precondition: "" }], rarity: 1 }, "910531": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==1&remain_distance<=201&remain_distance>=199&order_rate>=20&order_rate<=50&change_order_up_end_after>=1", effects: [{ modifier: 2500, type: 27 }], precondition: "" }, { baseDuration: 3e4, condition: "remain_distance<=201&remain_distance>=199&order_rate>=20&order_rate<=50", effects: [{ modifier: 500, type: 27 }], precondition: "" }], rarity: 1 }, "910561": { alternatives: [{ baseDuration: 3e4, condition: "distance_rate>=50&order_rate>=40&overtake_target_time>=2", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "910581": { alternatives: [{ baseDuration: 3e4, condition: "is_last_straight_onetime==1&order_rate<=40", effects: [{ modifier: 1500, type: 27 }, { modifier: -250, type: 21 }, { modifier: -250, type: 21 }], precondition: "" }], rarity: 1 }, "910591": { alternatives: [{ baseDuration: 3e4, condition: "distance_rate>=60&slope==2&phase==1&order_rate>=40&order_rate<=80&remain_distance>=500", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "910601": { alternatives: [{ baseDuration: 36e3, condition: "is_last_straight==1&order_rate>=40&order_rate<=70&popularity>=4", effects: [{ modifier: 1500, type: 27 }], precondition: "is_finalcorner==1&change_order_onetime<0" }, { baseDuration: 3e4, condition: "is_last_straight==1&order_rate>=40&order_rate<=70&popularity<4", effects: [{ modifier: 1500, type: 27 }], precondition: "is_finalcorner==1&change_order_onetime<0" }], rarity: 1 }, "910611": { alternatives: [{ baseDuration: 24e3, condition: "is_last_straight==1", effects: [{ modifier: 2e3, type: 31 }], precondition: "distance_rate>=50&order_rate_out70_continue==1&temptation_count==0" }], rarity: 1 }, "910621": { alternatives: [{ baseDuration: 12e3, condition: "distance_rate>=50&corner!=0&order_rate>=40&order_rate<=80&distance_type==3", effects: [{ modifier: 500, type: 27 }, { modifier: 500, type: 31 }], precondition: "" }, { baseDuration: 12e3, condition: "distance_rate>=50&corner!=0&order_rate>=40&order_rate<=80", effects: [{ modifier: 500, type: 27 }], precondition: "" }], rarity: 1 }, "910671": { alternatives: [{ baseDuration: 3e4, condition: "distance_rate>=40&distance_rate<=50&order_rate>=40&order_rate<=80", effects: [{ modifier: 1500, type: 27 }, { modifier: 50, type: 9 }], precondition: "" }], rarity: 1 }, "910681": { alternatives: [{ baseDuration: 24e3, condition: "phase>=2&corner!=0&remain_distance>=600&order<=3", effects: [{ modifier: 1500, type: 22 }, { modifier: 500, type: 31 }], precondition: "" }], rarity: 1 }, "910691": { alternatives: [{ baseDuration: 3e4, condition: "remain_distance<=651&remain_distance>=649&order_rate<=40&order_rate>=30", effects: [{ modifier: 2e3, type: 31 }], precondition: "phase==1&blocked_side_continuetime>=2" }], rarity: 1 }, "910711": { alternatives: [{ baseDuration: 3e4, condition: "phase>=2&is_last_straight==1&order_rate>=20&order_rate<=40&bashin_diff_behind<=1", effects: [{ modifier: 1500, type: 27 }, { modifier: 350, type: 22 }, { modifier: -300, type: 9 }], precondition: "" }], rarity: 1 }, "910831": { alternatives: [{ baseDuration: 3e4, condition: "is_last_straight==1", effects: [{ modifier: 1500, type: 27 }], precondition: "distance_rate>=50&distance_rate<=51&order_rate>=40&order_rate<=80" }], rarity: 1 }, "920011": { alternatives: [{ baseDuration: 3e4, condition: "phase>=2&is_finalcorner==1&corner!=0&is_activate_any_skill==1", effects: [{ modifier: 2500, type: 27 }], precondition: "track_id==10005" }, { baseDuration: 3e4, condition: "phase>=2&is_finalcorner==1&corner!=0&is_activate_any_skill==1", effects: [{ modifier: 500, type: 27 }], precondition: "" }], rarity: 1 }, "920031": { alternatives: [{ baseDuration: 3e4, condition: "phase>=2&is_finalcorner_laterhalf==1&course_distance>=2400&course_distance<=2500@phase>=2&is_finalcorner==1&corner==0&course_distance>=2400&course_distance<=2500", effects: [{ modifier: 1500, type: 27 }, { modifier: 350, type: 22 }], precondition: "distance_rate>=50&order_rate<=50&overtake_target_time>=2" }, { baseDuration: 3e4, condition: "phase>=2&is_finalcorner_laterhalf==1@phase>=2&is_finalcorner==1&corner==0", effects: [{ modifier: 1500, type: 27 }], precondition: "distance_rate>=50&order_rate<=50&overtake_target_time>=2" }], rarity: 1 }, "920071": { alternatives: [{ baseDuration: 3e4, condition: "distance_type==3&is_finalcorner==1&is_overtake==1&order_rate>=50&is_badstart==1@distance_type==4&is_finalcorner==1&is_overtake==1&order_rate>=50&is_badstart==1", effects: [{ modifier: 2500, type: 27 }], precondition: "" }, { baseDuration: 3e4, condition: "distance_type==3&is_finalcorner==1&is_overtake==1&order_rate>=50@distance_type==4&is_finalcorner==1&is_overtake==1&order_rate>=50", effects: [{ modifier: 1500, type: 27 }], precondition: "" }], rarity: 1 }, "920131": { alternatives: [{ baseDuration: 3e4, condition: "distance_rate>=50&order_rate<=40", effects: [{ modifier: 350, type: 27 }], precondition: "" }], rarity: 1 }, "920671": { alternatives: [{ baseDuration: 3e4, condition: "phase_laterhalf_random==1&order_rate>=40&order_rate<=80&distance_type==3", effects: [{ modifier: 1500, type: 27 }], precondition: "" }, { baseDuration: 3e4, condition: "phase_laterhalf_random==1&order_rate>=40&order_rate<=80&distance_type!=3", effects: [{ modifier: 500, type: 27 }], precondition: "" }], rarity: 1 } };

  // ../skill_meta.json
  var skill_meta_default = { "100011": { baseCost: 0, groupId: 10001, iconId: "20013" }, "100021": { baseCost: 0, groupId: 10002, iconId: "20013" }, "100031": { baseCost: 0, groupId: 10003, iconId: "20013" }, "100041": { baseCost: 0, groupId: 10004, iconId: "20043" }, "100051": { baseCost: 0, groupId: 10005, iconId: "20013" }, "100061": { baseCost: 0, groupId: 10006, iconId: "20013" }, "100071": { baseCost: 0, groupId: 10007, iconId: "20013" }, "100081": { baseCost: 0, groupId: 10008, iconId: "20013" }, "100091": { baseCost: 0, groupId: 10009, iconId: "20013" }, "100101": { baseCost: 0, groupId: 10010, iconId: "20043" }, "100101111": { baseCost: 0, groupId: 10010111, iconId: "20026" }, "100101211": { baseCost: 0, groupId: 10010121, iconId: "20016" }, "100102111": { baseCost: 0, groupId: 10010211, iconId: "20016" }, "100102211": { baseCost: 0, groupId: 10010221, iconId: "20016" }, "100103111": { baseCost: 0, groupId: 10010311, iconId: "20016" }, "100103211": { baseCost: 0, groupId: 10010321, iconId: "2010016" }, "100111": { baseCost: 0, groupId: 10011, iconId: "20013" }, "100121": { baseCost: 0, groupId: 10012, iconId: "20013" }, "100131": { baseCost: 0, groupId: 10013, iconId: "20013" }, "100141": { baseCost: 0, groupId: 10014, iconId: "20013" }, "100151": { baseCost: 0, groupId: 10015, iconId: "20013" }, "100161": { baseCost: 0, groupId: 10016, iconId: "20013" }, "100171": { baseCost: 0, groupId: 10017, iconId: "20013" }, "100181": { baseCost: 0, groupId: 10018, iconId: "20013" }, "100191": { baseCost: 0, groupId: 10019, iconId: "20013" }, "100201": { baseCost: 0, groupId: 10020, iconId: "20043" }, "100201111": { baseCost: 0, groupId: 10020111, iconId: "20066" }, "100201211": { baseCost: 0, groupId: 10020121, iconId: "20046" }, "100202111": { baseCost: 0, groupId: 10020211, iconId: "20016" }, "100202211": { baseCost: 0, groupId: 10020221, iconId: "20046" }, "100211": { baseCost: 0, groupId: 10021, iconId: "20013" }, "100221": { baseCost: 0, groupId: 10022, iconId: "20013" }, "100231": { baseCost: 0, groupId: 10023, iconId: "20013" }, "100241": { baseCost: 0, groupId: 10024, iconId: "20013" }, "100251": { baseCost: 0, groupId: 10025, iconId: "20013" }, "100261": { baseCost: 0, groupId: 10026, iconId: "20013" }, "100271": { baseCost: 0, groupId: 10027, iconId: "20043" }, "100281": { baseCost: 0, groupId: 10028, iconId: "20013" }, "100291": { baseCost: 0, groupId: 10029, iconId: "20013" }, "100301": { baseCost: 0, groupId: 10030, iconId: "20013" }, "100301111": { baseCost: 0, groupId: 10030111, iconId: "20046" }, "100301211": { baseCost: 0, groupId: 10030121, iconId: "20056" }, "100302111": { baseCost: 0, groupId: 10030211, iconId: "20026" }, "100302211": { baseCost: 0, groupId: 10030221, iconId: "20026" }, "100303111": { baseCost: 0, groupId: 10030311, iconId: "20046" }, "100303211": { baseCost: 0, groupId: 10030321, iconId: "20026" }, "100311": { baseCost: 0, groupId: 10031, iconId: "20013" }, "100321": { baseCost: 0, groupId: 10032, iconId: "20023" }, "100331": { baseCost: 0, groupId: 10033, iconId: "20013" }, "100341": { baseCost: 0, groupId: 10034, iconId: "20013" }, "100351": { baseCost: 0, groupId: 10035, iconId: "20013" }, "100361": { baseCost: 0, groupId: 10036, iconId: "20013" }, "100371": { baseCost: 0, groupId: 10037, iconId: "20013" }, "100381": { baseCost: 0, groupId: 10038, iconId: "20013" }, "100391": { baseCost: 0, groupId: 10039, iconId: "20013" }, "100401": { baseCost: 0, groupId: 10040, iconId: "20043" }, "100401111": { baseCost: 0, groupId: 10040111, iconId: "20016" }, "100401211": { baseCost: 0, groupId: 10040121, iconId: "20016" }, "100402111": { baseCost: 0, groupId: 10040211, iconId: "20026" }, "100402211": { baseCost: 0, groupId: 10040221, iconId: "20016" }, "100411": { baseCost: 0, groupId: 10041, iconId: "20013" }, "100421": { baseCost: 0, groupId: 10042, iconId: "20013" }, "100431": { baseCost: 0, groupId: 10043, iconId: "20013" }, "100441": { baseCost: 0, groupId: 10044, iconId: "20013" }, "100451": { baseCost: 0, groupId: 10045, iconId: "20023" }, "100461": { baseCost: 0, groupId: 10046, iconId: "20013" }, "100471": { baseCost: 0, groupId: 10047, iconId: "20013" }, "100481": { baseCost: 0, groupId: 10048, iconId: "20013" }, "100491": { baseCost: 0, groupId: 10049, iconId: "20013" }, "100501": { baseCost: 0, groupId: 10050, iconId: "20013" }, "100501111": { baseCost: 0, groupId: 10050111, iconId: "20016" }, "100501211": { baseCost: 0, groupId: 10050121, iconId: "20026" }, "100502111": { baseCost: 0, groupId: 10050211, iconId: "30056" }, "100502211": { baseCost: 0, groupId: 10050221, iconId: "20016" }, "100511": { baseCost: 0, groupId: 10051, iconId: "20043" }, "100521": { baseCost: 0, groupId: 10052, iconId: "20023" }, "100531": { baseCost: 0, groupId: 10053, iconId: "20043" }, "100551": { baseCost: 0, groupId: 10055, iconId: "20013" }, "100561": { baseCost: 0, groupId: 10056, iconId: "20013" }, "100571": { baseCost: 0, groupId: 10057, iconId: "20013" }, "100581": { baseCost: 0, groupId: 10058, iconId: "20013" }, "100591": { baseCost: 0, groupId: 10059, iconId: "20043" }, "100601": { baseCost: 0, groupId: 10060, iconId: "20013" }, "100601111": { baseCost: 0, groupId: 10060111, iconId: "20026" }, "100601121": { baseCost: 0, groupId: 10060112, iconId: "20026" }, "100601211": { baseCost: 0, groupId: 10060121, iconId: "20046" }, "100602111": { baseCost: 0, groupId: 10060211, iconId: "20026" }, "100602211": { baseCost: 0, groupId: 10060221, iconId: "20016" }, "100611": { baseCost: 0, groupId: 10061, iconId: "20013" }, "100621": { baseCost: 0, groupId: 10062, iconId: "20023" }, "100641": { baseCost: 0, groupId: 10064, iconId: "20023" }, "100651": { baseCost: 0, groupId: 10065, iconId: "20013" }, "100661": { baseCost: 0, groupId: 10066, iconId: "20013" }, "100671": { baseCost: 0, groupId: 10067, iconId: "20013" }, "100681": { baseCost: 0, groupId: 10068, iconId: "20013" }, "100691": { baseCost: 0, groupId: 10069, iconId: "20013" }, "100701": { baseCost: 0, groupId: 10070, iconId: "20043" }, "100701111": { baseCost: 0, groupId: 10070111, iconId: "20096" }, "100701211": { baseCost: 0, groupId: 10070121, iconId: "20026" }, "100702111": { baseCost: 0, groupId: 10070211, iconId: "20016" }, "100702211": { baseCost: 0, groupId: 10070221, iconId: "20016" }, "100703111": { baseCost: 0, groupId: 10070311, iconId: "20046" }, "100703211": { baseCost: 0, groupId: 10070321, iconId: "10036" }, "10071": { baseCost: 0, groupId: 1007, iconId: "20013" }, "100711": { baseCost: 0, groupId: 10071, iconId: "20013" }, "100721": { baseCost: 0, groupId: 10072, iconId: "20013" }, "100741": { baseCost: 0, groupId: 10074, iconId: "20013" }, "100761": { baseCost: 0, groupId: 10076, iconId: "20013" }, "100771": { baseCost: 0, groupId: 10077, iconId: "20013" }, "100781": { baseCost: 0, groupId: 10078, iconId: "20043" }, "100801111": { baseCost: 0, groupId: 10080111, iconId: "20026" }, "100801211": { baseCost: 0, groupId: 10080121, iconId: "20046" }, "100802111": { baseCost: 0, groupId: 10080211, iconId: "20046" }, "100802211": { baseCost: 0, groupId: 10080221, iconId: "20016" }, "10081": { baseCost: 0, groupId: 1008, iconId: "20013" }, "100831": { baseCost: 0, groupId: 10083, iconId: "20013" }, "100841": { baseCost: 0, groupId: 10084, iconId: "20013" }, "100851": { baseCost: 0, groupId: 10085, iconId: "20013" }, "100861": { baseCost: 0, groupId: 10086, iconId: "20013" }, "100871": { baseCost: 0, groupId: 10087, iconId: "20013" }, "100901111": { baseCost: 0, groupId: 10090111, iconId: "20016" }, "100901211": { baseCost: 0, groupId: 10090121, iconId: "20026" }, "100902111": { baseCost: 0, groupId: 10090211, iconId: "20026" }, "100902211": { baseCost: 0, groupId: 10090221, iconId: "20016" }, "10091": { baseCost: 0, groupId: 1009, iconId: "20013" }, "100931": { baseCost: 0, groupId: 10093, iconId: "20013" }, "100981": { baseCost: 0, groupId: 10098, iconId: "20013" }, "100991": { baseCost: 0, groupId: 10099, iconId: "20043" }, "101001": { baseCost: 0, groupId: 10100, iconId: "20013" }, "101001111": { baseCost: 0, groupId: 10100111, iconId: "20016" }, "101001211": { baseCost: 0, groupId: 10100121, iconId: "20016" }, "101002111": { baseCost: 0, groupId: 10100211, iconId: "20016" }, "101002211": { baseCost: 0, groupId: 10100221, iconId: "20046" }, "101041": { baseCost: 0, groupId: 10104, iconId: "20013" }, "101051": { baseCost: 0, groupId: 10105, iconId: "20013" }, "101061": { baseCost: 0, groupId: 10106, iconId: "20013" }, "101101111": { baseCost: 0, groupId: 10110111, iconId: "20016" }, "101101211": { baseCost: 0, groupId: 10110121, iconId: "20046" }, "101102111": { baseCost: 0, groupId: 10110211, iconId: "20026" }, "101102211": { baseCost: 0, groupId: 10110221, iconId: "20026" }, "10111": { baseCost: 0, groupId: 1011, iconId: "20013" }, "101201111": { baseCost: 0, groupId: 10120111, iconId: "20016" }, "101201211": { baseCost: 0, groupId: 10120121, iconId: "20016" }, "101202111": { baseCost: 0, groupId: 10120211, iconId: "20016" }, "101202211": { baseCost: 0, groupId: 10120221, iconId: "20046" }, "101301111": { baseCost: 0, groupId: 10130111, iconId: "20016" }, "101301211": { baseCost: 0, groupId: 10130121, iconId: "20026" }, "101302111": { baseCost: 0, groupId: 10130211, iconId: "20026" }, "101302211": { baseCost: 0, groupId: 10130221, iconId: "20016" }, "101303111": { baseCost: 0, groupId: 10130311, iconId: "20016" }, "101303211": { baseCost: 0, groupId: 10130321, iconId: "20026" }, "101401111": { baseCost: 0, groupId: 10140111, iconId: "20096" }, "101401211": { baseCost: 0, groupId: 10140121, iconId: "20026" }, "101402111": { baseCost: 0, groupId: 10140211, iconId: "20046" }, "101402211": { baseCost: 0, groupId: 10140221, iconId: "20016" }, "10141": { baseCost: 0, groupId: 1014, iconId: "20013" }, "101501111": { baseCost: 0, groupId: 10150111, iconId: "20016" }, "101501211": { baseCost: 0, groupId: 10150121, iconId: "20016" }, "101502111": { baseCost: 0, groupId: 10150211, iconId: "20026" }, "101502211": { baseCost: 0, groupId: 10150221, iconId: "20016" }, "101601111": { baseCost: 0, groupId: 10160111, iconId: "20016" }, "101601211": { baseCost: 0, groupId: 10160121, iconId: "20016" }, "101602111": { baseCost: 0, groupId: 10160211, iconId: "20016" }, "101602211": { baseCost: 0, groupId: 10160221, iconId: "20046" }, "101701111": { baseCost: 0, groupId: 10170111, iconId: "20016" }, "101701211": { baseCost: 0, groupId: 10170121, iconId: "20016" }, "101702111": { baseCost: 0, groupId: 10170211, iconId: "20026" }, "101702211": { baseCost: 0, groupId: 10170221, iconId: "10016" }, "101801111": { baseCost: 0, groupId: 10180111, iconId: "20016" }, "101801211": { baseCost: 0, groupId: 10180121, iconId: "20056" }, "101802111": { baseCost: 0, groupId: 10180211, iconId: "20016" }, "101802211": { baseCost: 0, groupId: 10180221, iconId: "20046" }, "10181": { baseCost: 0, groupId: 1018, iconId: "20013" }, "101901111": { baseCost: 0, groupId: 10190111, iconId: "20016" }, "101901211": { baseCost: 0, groupId: 10190121, iconId: "20056" }, "101902111": { baseCost: 0, groupId: 10190211, iconId: "20016" }, "101902211": { baseCost: 0, groupId: 10190221, iconId: "20016" }, "102001111": { baseCost: 0, groupId: 10200111, iconId: "20016" }, "102001121": { baseCost: 0, groupId: 10200112, iconId: "20026" }, "102001211": { baseCost: 0, groupId: 10200121, iconId: "20016" }, "102002111": { baseCost: 0, groupId: 10200211, iconId: "20016" }, "102002211": { baseCost: 0, groupId: 10200221, iconId: "20016" }, "102101111": { baseCost: 0, groupId: 10210111, iconId: "20016" }, "102101211": { baseCost: 0, groupId: 10210121, iconId: "20016" }, "102102111": { baseCost: 0, groupId: 10210211, iconId: "20016" }, "102102211": { baseCost: 0, groupId: 10210221, iconId: "20016" }, "102201111": { baseCost: 0, groupId: 10220111, iconId: "20016" }, "102201211": { baseCost: 0, groupId: 10220121, iconId: "20046" }, "102202111": { baseCost: 0, groupId: 10220211, iconId: "20016" }, "102202211": { baseCost: 0, groupId: 10220221, iconId: "20046" }, "102301111": { baseCost: 0, groupId: 10230111, iconId: "20026" }, "102301211": { baseCost: 0, groupId: 10230121, iconId: "20026" }, "102302111": { baseCost: 0, groupId: 10230211, iconId: "20026" }, "102302211": { baseCost: 0, groupId: 10230221, iconId: "20016" }, "102401111": { baseCost: 0, groupId: 10240111, iconId: "20026" }, "102401211": { baseCost: 0, groupId: 10240121, iconId: "20046" }, "102402111": { baseCost: 0, groupId: 10240211, iconId: "30056" }, "102402211": { baseCost: 0, groupId: 10240221, iconId: "20026" }, "10241": { baseCost: 0, groupId: 1024, iconId: "20013" }, "102501111": { baseCost: 0, groupId: 10250111, iconId: "20026" }, "102501211": { baseCost: 0, groupId: 10250121, iconId: "30056" }, "102601111": { baseCost: 0, groupId: 10260111, iconId: "20046" }, "102601211": { baseCost: 0, groupId: 10260121, iconId: "20026" }, "102602111": { baseCost: 0, groupId: 10260211, iconId: "20016" }, "102602211": { baseCost: 0, groupId: 10260221, iconId: "20066" }, "102701111": { baseCost: 0, groupId: 10270111, iconId: "20016" }, "102701211": { baseCost: 0, groupId: 10270121, iconId: "20016" }, "102702111": { baseCost: 0, groupId: 10270211, iconId: "20046" }, "102702211": { baseCost: 0, groupId: 10270221, iconId: "20016" }, "10271": { baseCost: 0, groupId: 1027, iconId: "20043" }, "102801111": { baseCost: 0, groupId: 10280111, iconId: "20056" }, "102801211": { baseCost: 0, groupId: 10280121, iconId: "20026" }, "102901111": { baseCost: 0, groupId: 10290111, iconId: "20046" }, "102901211": { baseCost: 0, groupId: 10290121, iconId: "20046" }, "103001111": { baseCost: 0, groupId: 10300111, iconId: "20046" }, "103001211": { baseCost: 0, groupId: 10300121, iconId: "20026" }, "103002111": { baseCost: 0, groupId: 10300211, iconId: "20026" }, "103002211": { baseCost: 0, groupId: 10300221, iconId: "30056" }, "103101111": { baseCost: 0, groupId: 10310111, iconId: "20026" }, "103101211": { baseCost: 0, groupId: 10310121, iconId: "20016" }, "103102111": { baseCost: 0, groupId: 10310211, iconId: "20066" }, "103102211": { baseCost: 0, groupId: 10310221, iconId: "20016" }, "103201111": { baseCost: 0, groupId: 10320111, iconId: "20016" }, "103201211": { baseCost: 0, groupId: 10320121, iconId: "20026" }, "103202111": { baseCost: 0, groupId: 10320211, iconId: "10016" }, "103202211": { baseCost: 0, groupId: 10320221, iconId: "20016" }, "10321": { baseCost: 0, groupId: 1032, iconId: "20023" }, "103301111": { baseCost: 0, groupId: 10330111, iconId: "20026" }, "103301211": { baseCost: 0, groupId: 10330121, iconId: "20016" }, "103401111": { baseCost: 0, groupId: 10340111, iconId: "20016" }, "103401211": { baseCost: 0, groupId: 10340121, iconId: "20026" }, "103401221": { baseCost: 0, groupId: 10340122, iconId: "20026" }, "103402111": { baseCost: 0, groupId: 10340211, iconId: "20016" }, "103402211": { baseCost: 0, groupId: 10340221, iconId: "20046" }, "103501111": { baseCost: 0, groupId: 10350111, iconId: "20046" }, "103501211": { baseCost: 0, groupId: 10350121, iconId: "20016" }, "103502111": { baseCost: 0, groupId: 10350211, iconId: "20016" }, "103502211": { baseCost: 0, groupId: 10350221, iconId: "20016" }, "10351": { baseCost: 0, groupId: 1035, iconId: "20013" }, "103601111": { baseCost: 0, groupId: 10360111, iconId: "20016" }, "103601211": { baseCost: 0, groupId: 10360121, iconId: "20016" }, "103602111": { baseCost: 0, groupId: 10360211, iconId: "30056" }, "103602211": { baseCost: 0, groupId: 10360221, iconId: "20016" }, "103701111": { baseCost: 0, groupId: 10370111, iconId: "20056" }, "103701211": { baseCost: 0, groupId: 10370121, iconId: "20016" }, "103702111": { baseCost: 0, groupId: 10370211, iconId: "20016" }, "103702121": { baseCost: 0, groupId: 10370212, iconId: "20026" }, "103702211": { baseCost: 0, groupId: 10370221, iconId: "20016" }, "103801111": { baseCost: 0, groupId: 10380111, iconId: "30076" }, "103801211": { baseCost: 0, groupId: 10380121, iconId: "30016" }, "103802111": { baseCost: 0, groupId: 10380211, iconId: "30016" }, "103802211": { baseCost: 0, groupId: 10380221, iconId: "20046" }, "103901111": { baseCost: 0, groupId: 10390111, iconId: "20046" }, "103901211": { baseCost: 0, groupId: 10390121, iconId: "20016" }, "103902111": { baseCost: 0, groupId: 10390211, iconId: "20016" }, "103902211": { baseCost: 0, groupId: 10390221, iconId: "20016" }, "104001111": { baseCost: 0, groupId: 10400111, iconId: "20026" }, "104001211": { baseCost: 0, groupId: 10400121, iconId: "20046" }, "104002111": { baseCost: 0, groupId: 10400211, iconId: "30026" }, "104002211": { baseCost: 0, groupId: 10400221, iconId: "20026" }, "104101111": { baseCost: 0, groupId: 10410111, iconId: "20046" }, "104101211": { baseCost: 0, groupId: 10410121, iconId: "20016" }, "104102111": { baseCost: 0, groupId: 10410211, iconId: "20016" }, "104102211": { baseCost: 0, groupId: 10410221, iconId: "20016" }, "10411": { baseCost: 0, groupId: 1041, iconId: "20013" }, "104201111": { baseCost: 0, groupId: 10420111, iconId: "20016" }, "104201211": { baseCost: 0, groupId: 10420121, iconId: "20016" }, "104301111": { baseCost: 0, groupId: 10430111, iconId: "20016" }, "104301211": { baseCost: 0, groupId: 10430121, iconId: "10016" }, "104401111": { baseCost: 0, groupId: 10440111, iconId: "20026" }, "104401211": { baseCost: 0, groupId: 10440121, iconId: "30016" }, "104401221": { baseCost: 0, groupId: 10440122, iconId: "20016" }, "104501111": { baseCost: 0, groupId: 10450111, iconId: "20016" }, "104501211": { baseCost: 0, groupId: 10450121, iconId: "20026" }, "104502111": { baseCost: 0, groupId: 10450211, iconId: "20016" }, "104502211": { baseCost: 0, groupId: 10450221, iconId: "30056" }, "10451": { baseCost: 0, groupId: 1045, iconId: "20023" }, "104601111": { baseCost: 0, groupId: 10460111, iconId: "20056" }, "104601121": { baseCost: 0, groupId: 10460112, iconId: "20016" }, "104601211": { baseCost: 0, groupId: 10460121, iconId: "20016" }, "104602111": { baseCost: 0, groupId: 10460211, iconId: "20016" }, "104602211": { baseCost: 0, groupId: 10460221, iconId: "20046" }, "104701111": { baseCost: 0, groupId: 10470111, iconId: "20026" }, "104701121": { baseCost: 0, groupId: 10470112, iconId: "20026" }, "104701211": { baseCost: 0, groupId: 10470121, iconId: "20016" }, "104801111": { baseCost: 0, groupId: 10480111, iconId: "20046" }, "104801211": { baseCost: 0, groupId: 10480121, iconId: "20026" }, "104802111": { baseCost: 0, groupId: 10480211, iconId: "20046" }, "104802211": { baseCost: 0, groupId: 10480221, iconId: "20016" }, "104901111": { baseCost: 0, groupId: 10490111, iconId: "20016" }, "104901211": { baseCost: 0, groupId: 10490121, iconId: "10016" }, "105001111": { baseCost: 0, groupId: 10500111, iconId: "20026" }, "105001211": { baseCost: 0, groupId: 10500121, iconId: "20046" }, "105002111": { baseCost: 0, groupId: 10500211, iconId: "20016" }, "105002211": { baseCost: 0, groupId: 10500221, iconId: "20046" }, "105101111": { baseCost: 0, groupId: 10510111, iconId: "20016" }, "105101211": { baseCost: 0, groupId: 10510121, iconId: "20046" }, "105102111": { baseCost: 0, groupId: 10510211, iconId: "20016" }, "105102211": { baseCost: 0, groupId: 10510221, iconId: "20016" }, "105201111": { baseCost: 0, groupId: 10520111, iconId: "20026" }, "105201211": { baseCost: 0, groupId: 10520121, iconId: "20026" }, "105202111": { baseCost: 0, groupId: 10520211, iconId: "20056" }, "105202211": { baseCost: 0, groupId: 10520221, iconId: "20046" }, "10521": { baseCost: 0, groupId: 1052, iconId: "20023" }, "105301111": { baseCost: 0, groupId: 10530111, iconId: "20016" }, "105301211": { baseCost: 0, groupId: 10530121, iconId: "20016" }, "105302111": { baseCost: 0, groupId: 10530211, iconId: "20046" }, "105302211": { baseCost: 0, groupId: 10530221, iconId: "20046" }, "105501111": { baseCost: 0, groupId: 10550111, iconId: "20016" }, "105501211": { baseCost: 0, groupId: 10550121, iconId: "20046" }, "105601111": { baseCost: 0, groupId: 10560111, iconId: "20016" }, "105601211": { baseCost: 0, groupId: 10560121, iconId: "10066" }, "105602111": { baseCost: 0, groupId: 10560211, iconId: "20016" }, "105602211": { baseCost: 0, groupId: 10560221, iconId: "20016" }, "10561": { baseCost: 0, groupId: 1056, iconId: "20013" }, "105701111": { baseCost: 0, groupId: 10570111, iconId: "20016" }, "105701211": { baseCost: 0, groupId: 10570121, iconId: "20046" }, "105801111": { baseCost: 0, groupId: 10580111, iconId: "20016" }, "105801211": { baseCost: 0, groupId: 10580121, iconId: "20026" }, "105802111": { baseCost: 0, groupId: 10580211, iconId: "20046" }, "105802211": { baseCost: 0, groupId: 10580221, iconId: "20026" }, "105901111": { baseCost: 0, groupId: 10590111, iconId: "30056" }, "105901211": { baseCost: 0, groupId: 10590121, iconId: "10026" }, "105902111": { baseCost: 0, groupId: 10590211, iconId: "20016" }, "105902211": { baseCost: 0, groupId: 10590221, iconId: "20046" }, "106001111": { baseCost: 0, groupId: 10600111, iconId: "20046" }, "106001211": { baseCost: 0, groupId: 10600121, iconId: "20016" }, "106002111": { baseCost: 0, groupId: 10600211, iconId: "20016" }, "106002211": { baseCost: 0, groupId: 10600221, iconId: "20046" }, "10601": { baseCost: 0, groupId: 1060, iconId: "20013" }, "106101111": { baseCost: 0, groupId: 10610111, iconId: "20016" }, "106101211": { baseCost: 0, groupId: 10610121, iconId: "20096" }, "106102111": { baseCost: 0, groupId: 10610211, iconId: "20016" }, "106102211": { baseCost: 0, groupId: 10610221, iconId: "10016" }, "10611": { baseCost: 0, groupId: 1061, iconId: "20013" }, "106201111": { baseCost: 0, groupId: 10620111, iconId: "20026" }, "106201211": { baseCost: 0, groupId: 10620121, iconId: "20016" }, "106202111": { baseCost: 0, groupId: 10620211, iconId: "20026" }, "106202211": { baseCost: 0, groupId: 10620221, iconId: "20046" }, "10621": { baseCost: 0, groupId: 1062, iconId: "20023" }, "106401111": { baseCost: 0, groupId: 10640111, iconId: "20016" }, "106401211": { baseCost: 0, groupId: 10640121, iconId: "20016" }, "106501111": { baseCost: 0, groupId: 10650111, iconId: "20016" }, "106501211": { baseCost: 0, groupId: 10650121, iconId: "20016" }, "106601111": { baseCost: 0, groupId: 10660111, iconId: "20016" }, "106601211": { baseCost: 0, groupId: 10660121, iconId: "20046" }, "10661": { baseCost: 0, groupId: 1066, iconId: "20013" }, "106701111": { baseCost: 0, groupId: 10670111, iconId: "20026" }, "106701121": { baseCost: 0, groupId: 10670112, iconId: "20026" }, "106701211": { baseCost: 0, groupId: 10670121, iconId: "10016" }, "106702111": { baseCost: 0, groupId: 10670211, iconId: "20046" }, "106702211": { baseCost: 0, groupId: 10670221, iconId: "30056" }, "106703111": { baseCost: 0, groupId: 10670311, iconId: "20046" }, "106703211": { baseCost: 0, groupId: 10670321, iconId: "20016" }, "106801111": { baseCost: 0, groupId: 10680111, iconId: "20046" }, "106801211": { baseCost: 0, groupId: 10680121, iconId: "20016" }, "106802111": { baseCost: 0, groupId: 10680211, iconId: "20016" }, "106802211": { baseCost: 0, groupId: 10680221, iconId: "20046" }, "106901111": { baseCost: 0, groupId: 10690111, iconId: "20016" }, "106901211": { baseCost: 0, groupId: 10690121, iconId: "10016" }, "106902111": { baseCost: 0, groupId: 10690211, iconId: "20016" }, "106902211": { baseCost: 0, groupId: 10690221, iconId: "20016" }, "107001111": { baseCost: 0, groupId: 10700111, iconId: "20016" }, "107001211": { baseCost: 0, groupId: 10700121, iconId: "20016" }, "107101111": { baseCost: 0, groupId: 10710111, iconId: "20026" }, "107101211": { baseCost: 0, groupId: 10710121, iconId: "20016" }, "107102111": { baseCost: 0, groupId: 10710211, iconId: "20026" }, "107102211": { baseCost: 0, groupId: 10710221, iconId: "20016" }, "107201111": { baseCost: 0, groupId: 10720111, iconId: "20016" }, "107201211": { baseCost: 0, groupId: 10720121, iconId: "20016" }, "107401111": { baseCost: 0, groupId: 10740111, iconId: "20026" }, "107401211": { baseCost: 0, groupId: 10740121, iconId: "20026" }, "107601111": { baseCost: 0, groupId: 10760111, iconId: "20016" }, "107601211": { baseCost: 0, groupId: 10760121, iconId: "20016" }, "107701111": { baseCost: 0, groupId: 10770111, iconId: "10036" }, "107701211": { baseCost: 0, groupId: 10770121, iconId: "20016" }, "107801111": { baseCost: 0, groupId: 10780111, iconId: "20016" }, "107801211": { baseCost: 0, groupId: 10780121, iconId: "20016" }, "108301111": { baseCost: 0, groupId: 10830111, iconId: "20046" }, "108301211": { baseCost: 0, groupId: 10830121, iconId: "20016" }, "108302111": { baseCost: 0, groupId: 10830211, iconId: "20016" }, "108302211": { baseCost: 0, groupId: 10830221, iconId: "20046" }, "108401111": { baseCost: 0, groupId: 10840111, iconId: "20016" }, "108401211": { baseCost: 0, groupId: 10840121, iconId: "10016" }, "108501111": { baseCost: 0, groupId: 10850111, iconId: "20016" }, "108501211": { baseCost: 0, groupId: 10850121, iconId: "20046" }, "108601111": { baseCost: 0, groupId: 10860111, iconId: "20016" }, "108601211": { baseCost: 0, groupId: 10860121, iconId: "20016" }, "108701111": { baseCost: 0, groupId: 10870111, iconId: "20046" }, "108701211": { baseCost: 0, groupId: 10870121, iconId: "20016" }, "109301111": { baseCost: 0, groupId: 10930111, iconId: "20016" }, "109301211": { baseCost: 0, groupId: 10930121, iconId: "20046" }, "109801111": { baseCost: 0, groupId: 10980111, iconId: "20016" }, "109801211": { baseCost: 0, groupId: 10980121, iconId: "10016" }, "109901111": { baseCost: 0, groupId: 10990111, iconId: "20026" }, "109901211": { baseCost: 0, groupId: 10990121, iconId: "20016" }, "110001111": { baseCost: 0, groupId: 11000111, iconId: "20016" }, "110001211": { baseCost: 0, groupId: 11000121, iconId: "20016" }, "110011": { baseCost: 0, groupId: 11001, iconId: "20023" }, "110021": { baseCost: 0, groupId: 11002, iconId: "20013" }, "110031": { baseCost: 0, groupId: 11003, iconId: "20013" }, "110041": { baseCost: 0, groupId: 11004, iconId: "20013" }, "110051": { baseCost: 0, groupId: 11005, iconId: "20013" }, "110061": { baseCost: 0, groupId: 11006, iconId: "20013" }, "110071": { baseCost: 0, groupId: 11007, iconId: "20013" }, "110081": { baseCost: 0, groupId: 11008, iconId: "20013" }, "110091": { baseCost: 0, groupId: 11009, iconId: "20013" }, "110101": { baseCost: 0, groupId: 11010, iconId: "20013" }, "110111": { baseCost: 0, groupId: 11011, iconId: "20023" }, "110121": { baseCost: 0, groupId: 11012, iconId: "20013" }, "110131": { baseCost: 0, groupId: 11013, iconId: "20013" }, "110141": { baseCost: 0, groupId: 11014, iconId: "20043" }, "110151": { baseCost: 0, groupId: 11015, iconId: "20013" }, "110161": { baseCost: 0, groupId: 11016, iconId: "20013" }, "110171": { baseCost: 0, groupId: 11017, iconId: "20013" }, "110181": { baseCost: 0, groupId: 11018, iconId: "20013" }, "110191": { baseCost: 0, groupId: 11019, iconId: "20013" }, "110201": { baseCost: 0, groupId: 11020, iconId: "20013" }, "110211": { baseCost: 0, groupId: 11021, iconId: "20013" }, "110221": { baseCost: 0, groupId: 11022, iconId: "20013" }, "110231": { baseCost: 0, groupId: 11023, iconId: "20013" }, "110241": { baseCost: 0, groupId: 11024, iconId: "20013" }, "110261": { baseCost: 0, groupId: 11026, iconId: "20013" }, "110271": { baseCost: 0, groupId: 11027, iconId: "20013" }, "110301": { baseCost: 0, groupId: 11030, iconId: "20023" }, "110311": { baseCost: 0, groupId: 11031, iconId: "20013" }, "110321": { baseCost: 0, groupId: 11032, iconId: "20013" }, "110341": { baseCost: 0, groupId: 11034, iconId: "20013" }, "110351": { baseCost: 0, groupId: 11035, iconId: "20013" }, "110361": { baseCost: 0, groupId: 11036, iconId: "20013" }, "110371": { baseCost: 0, groupId: 11037, iconId: "20013" }, "110381": { baseCost: 0, groupId: 11038, iconId: "20013" }, "110391": { baseCost: 0, groupId: 11039, iconId: "20013" }, "110401": { baseCost: 0, groupId: 11040, iconId: "20013" }, "110401111": { baseCost: 0, groupId: 11040111, iconId: "20046" }, "110401211": { baseCost: 0, groupId: 11040121, iconId: "20016" }, "110411": { baseCost: 0, groupId: 11041, iconId: "20043" }, "110451": { baseCost: 0, groupId: 11045, iconId: "20013" }, "110461": { baseCost: 0, groupId: 11046, iconId: "20013" }, "110481": { baseCost: 0, groupId: 11048, iconId: "20013" }, "110501": { baseCost: 0, groupId: 11050, iconId: "20013" }, "110501111": { baseCost: 0, groupId: 11050111, iconId: "20016" }, "110501211": { baseCost: 0, groupId: 11050121, iconId: "20016" }, "110511": { baseCost: 0, groupId: 11051, iconId: "20013" }, "110521": { baseCost: 0, groupId: 11052, iconId: "20013" }, "110531": { baseCost: 0, groupId: 11053, iconId: "20013" }, "110561": { baseCost: 0, groupId: 11056, iconId: "20013" }, "110581": { baseCost: 0, groupId: 11058, iconId: "20013" }, "110591": { baseCost: 0, groupId: 11059, iconId: "20013" }, "110601": { baseCost: 0, groupId: 11060, iconId: "20013" }, "110601111": { baseCost: 0, groupId: 11060111, iconId: "20026" }, "110601211": { baseCost: 0, groupId: 11060121, iconId: "20016" }, "110611": { baseCost: 0, groupId: 11061, iconId: "20043" }, "110621": { baseCost: 0, groupId: 11062, iconId: "20013" }, "110671": { baseCost: 0, groupId: 11067, iconId: "20013" }, "110681": { baseCost: 0, groupId: 11068, iconId: "20013" }, "110691": { baseCost: 0, groupId: 11069, iconId: "20043" }, "110711": { baseCost: 0, groupId: 11071, iconId: "20013" }, "110831": { baseCost: 0, groupId: 11083, iconId: "20013" }, "120011": { baseCost: 0, groupId: 12001, iconId: "20013" }, "120031": { baseCost: 0, groupId: 12003, iconId: "20013" }, "120071": { baseCost: 0, groupId: 12007, iconId: "20013" }, "120131": { baseCost: 0, groupId: 12013, iconId: "20013" }, "120671": { baseCost: 0, groupId: 12067, iconId: "20013" }, "200011": { baseCost: 110, groupId: 20001, iconId: "10011" }, "200012": { baseCost: 90, groupId: 20001, iconId: "10011" }, "200013": { baseCost: 50, groupId: 20001, iconId: "10014" }, "200014": { baseCost: 130, groupId: 20001, iconId: "10012" }, "200021": { baseCost: 110, groupId: 20002, iconId: "10011" }, "200022": { baseCost: 90, groupId: 20002, iconId: "10011" }, "200023": { baseCost: 50, groupId: 20002, iconId: "10014" }, "200031": { baseCost: 110, groupId: 20003, iconId: "10021" }, "200032": { baseCost: 90, groupId: 20003, iconId: "10021" }, "200033": { baseCost: 50, groupId: 20003, iconId: "10024" }, "200041": { baseCost: 110, groupId: 20004, iconId: "10021" }, "200042": { baseCost: 90, groupId: 20004, iconId: "10021" }, "200043": { baseCost: 50, groupId: 20004, iconId: "10024" }, "200051": { baseCost: 110, groupId: 20005, iconId: "10021" }, "200052": { baseCost: 90, groupId: 20005, iconId: "10021" }, "200053": { baseCost: 50, groupId: 20005, iconId: "10024" }, "200061": { baseCost: 110, groupId: 20006, iconId: "10021" }, "200062": { baseCost: 90, groupId: 20006, iconId: "10021" }, "200063": { baseCost: 50, groupId: 20006, iconId: "10024" }, "200064": { baseCost: 130, groupId: 20006, iconId: "10022" }, "200071": { baseCost: 110, groupId: 20007, iconId: "10021" }, "200072": { baseCost: 90, groupId: 20007, iconId: "10021" }, "200073": { baseCost: 50, groupId: 20007, iconId: "10024" }, "200081": { baseCost: 90, groupId: 20008, iconId: "10021" }, "200082": { baseCost: 70, groupId: 20008, iconId: "10021" }, "200083": { baseCost: 40, groupId: 20008, iconId: "10024" }, "200091": { baseCost: 90, groupId: 20009, iconId: "10021" }, "200092": { baseCost: 70, groupId: 20009, iconId: "10021" }, "200093": { baseCost: 40, groupId: 20009, iconId: "10024" }, "200101": { baseCost: 90, groupId: 20010, iconId: "10021" }, "200102": { baseCost: 70, groupId: 20010, iconId: "10021" }, "200103": { baseCost: 40, groupId: 20010, iconId: "10024" }, "200111": { baseCost: 90, groupId: 20011, iconId: "10021" }, "200112": { baseCost: 70, groupId: 20011, iconId: "10021" }, "200113": { baseCost: 40, groupId: 20011, iconId: "10024" }, "200121": { baseCost: 90, groupId: 20012, iconId: "10021" }, "200122": { baseCost: 70, groupId: 20012, iconId: "10021" }, "200123": { baseCost: 40, groupId: 20012, iconId: "10024" }, "200131": { baseCost: 110, groupId: 20013, iconId: "10021" }, "200132": { baseCost: 90, groupId: 20013, iconId: "10021" }, "200133": { baseCost: 50, groupId: 20013, iconId: "10024" }, "200141": { baseCost: 110, groupId: 20014, iconId: "10021" }, "200142": { baseCost: 90, groupId: 20014, iconId: "10021" }, "200143": { baseCost: 50, groupId: 20014, iconId: "10024" }, "200151": { baseCost: 110, groupId: 20015, iconId: "10031" }, "200152": { baseCost: 90, groupId: 20015, iconId: "10031" }, "200153": { baseCost: 50, groupId: 20015, iconId: "10034" }, "200154": { baseCost: 130, groupId: 20015, iconId: "10032" }, "200161": { baseCost: 110, groupId: 20016, iconId: "10031" }, "200162": { baseCost: 90, groupId: 20016, iconId: "10031" }, "200163": { baseCost: 50, groupId: 20016, iconId: "10034" }, "200164": { baseCost: 130, groupId: 20016, iconId: "10032" }, "200171": { baseCost: 110, groupId: 20017, iconId: "10011" }, "200172": { baseCost: 90, groupId: 20017, iconId: "10011" }, "200173": { baseCost: 50, groupId: 20017, iconId: "10014" }, "200174": { baseCost: 130, groupId: 20017, iconId: "10012" }, "200181": { baseCost: 110, groupId: 20018, iconId: "10011" }, "200182": { baseCost: 90, groupId: 20018, iconId: "10011" }, "200183": { baseCost: 50, groupId: 20018, iconId: "10014" }, "200184": { baseCost: 130, groupId: 20018, iconId: "10012" }, "200191": { baseCost: 110, groupId: 20019, iconId: "10011" }, "200192": { baseCost: 90, groupId: 20019, iconId: "10011" }, "200193": { baseCost: 50, groupId: 20019, iconId: "10014" }, "200194": { baseCost: 130, groupId: 20019, iconId: "10012" }, "200201": { baseCost: 110, groupId: 20020, iconId: "10011" }, "200202": { baseCost: 90, groupId: 20020, iconId: "10011" }, "200203": { baseCost: 50, groupId: 20020, iconId: "10014" }, "200211": { baseCost: 110, groupId: 20021, iconId: "10041" }, "200212": { baseCost: 90, groupId: 20021, iconId: "10041" }, "200221": { baseCost: 110, groupId: 20022, iconId: "10041" }, "200222": { baseCost: 90, groupId: 20022, iconId: "10041" }, "200231": { baseCost: 110, groupId: 20023, iconId: "10041" }, "200232": { baseCost: 90, groupId: 20023, iconId: "10041" }, "200233": { baseCost: 50, groupId: 20023, iconId: "10044" }, "200241": { baseCost: 110, groupId: 20024, iconId: "10041" }, "200242": { baseCost: 90, groupId: 20024, iconId: "10041" }, "200251": { baseCost: 110, groupId: 20025, iconId: "10051" }, "200252": { baseCost: 90, groupId: 20025, iconId: "10051" }, "200253": { baseCost: 50, groupId: 20025, iconId: "10054" }, "200261": { baseCost: 110, groupId: 20026, iconId: "10011" }, "200262": { baseCost: 90, groupId: 20026, iconId: "10011" }, "200263": { baseCost: 50, groupId: 20026, iconId: "10014" }, "200271": { baseCost: 110, groupId: 20027, iconId: "10011" }, "200272": { baseCost: 90, groupId: 20027, iconId: "10011" }, "200281": { baseCost: 110, groupId: 20028, iconId: "10031" }, "200282": { baseCost: 90, groupId: 20028, iconId: "10031" }, "200283": { baseCost: 50, groupId: 20028, iconId: "10034" }, "200291": { baseCost: 110, groupId: 20029, iconId: "10041" }, "200292": { baseCost: 90, groupId: 20029, iconId: "10041" }, "200301": { baseCost: 110, groupId: 20030, iconId: "10011" }, "200302": { baseCost: 90, groupId: 20030, iconId: "10011" }, "200311": { baseCost: 50, groupId: 20031, iconId: "10014" }, "200321": { baseCost: 50, groupId: 20032, iconId: "10024" }, "200331": { baseCost: 180, groupId: 20033, iconId: "20012" }, "200332": { baseCost: 180, groupId: 20033, iconId: "20011" }, "200333": { baseCost: 100, groupId: 20033, iconId: "20014" }, "200341": { baseCost: 180, groupId: 20034, iconId: "20042" }, "200342": { baseCost: 180, groupId: 20034, iconId: "20041" }, "200343": { baseCost: 100, groupId: 20034, iconId: "20044" }, "200351": { baseCost: 170, groupId: 20035, iconId: "20022" }, "200352": { baseCost: 170, groupId: 20035, iconId: "20021" }, "200353": { baseCost: 100, groupId: 20035, iconId: "20024" }, "200361": { baseCost: 170, groupId: 20036, iconId: "20012" }, "200362": { baseCost: 170, groupId: 20036, iconId: "20011" }, "200371": { baseCost: 170, groupId: 20037, iconId: "20042" }, "200372": { baseCost: 170, groupId: 20037, iconId: "20041" }, "200381": { baseCost: 170, groupId: 20038, iconId: "20022" }, "200382": { baseCost: 170, groupId: 20038, iconId: "20021" }, "200391": { baseCost: 100, groupId: 20039, iconId: "20024" }, "200401": { baseCost: 100, groupId: 20040, iconId: "20024" }, "200411": { baseCost: 100, groupId: 20041, iconId: "20014" }, "200421": { baseCost: 100, groupId: 20042, iconId: "20014" }, "200431": { baseCost: 140, groupId: 20043, iconId: "20062" }, "200432": { baseCost: 140, groupId: 20043, iconId: "20061" }, "200433": { baseCost: 70, groupId: 20043, iconId: "20064" }, "200441": { baseCost: 160, groupId: 20044, iconId: "20022" }, "200442": { baseCost: 160, groupId: 20044, iconId: "20021" }, "200451": { baseCost: 120, groupId: 20045, iconId: "20052" }, "200452": { baseCost: 120, groupId: 20045, iconId: "20051" }, "200461": { baseCost: 170, groupId: 20046, iconId: "20012" }, "200462": { baseCost: 170, groupId: 20046, iconId: "20011" }, "200471": { baseCost: 170, groupId: 20047, iconId: "20022" }, "200472": { baseCost: 170, groupId: 20047, iconId: "20021" }, "200481": { baseCost: 170, groupId: 20048, iconId: "20022" }, "200482": { baseCost: 170, groupId: 20048, iconId: "20021" }, "200491": { baseCost: 150, groupId: 20049, iconId: "20042" }, "200492": { baseCost: 150, groupId: 20049, iconId: "20041" }, "200501": { baseCost: 120, groupId: 20050, iconId: "20052" }, "200502": { baseCost: 120, groupId: 20050, iconId: "20051" }, "200511": { baseCost: 170, groupId: 20051, iconId: "20012" }, "200512": { baseCost: 170, groupId: 20051, iconId: "20011" }, "200521": { baseCost: 100, groupId: 20052, iconId: "20024" }, "200531": { baseCost: 120, groupId: 20053, iconId: "20042" }, "200532": { baseCost: 120, groupId: 20053, iconId: "20041" }, "200541": { baseCost: 180, groupId: 20054, iconId: "20012" }, "200542": { baseCost: 180, groupId: 20054, iconId: "20011" }, "200551": { baseCost: 180, groupId: 20055, iconId: "20042" }, "200552": { baseCost: 180, groupId: 20055, iconId: "20041" }, "200561": { baseCost: 180, groupId: 20056, iconId: "20022" }, "200562": { baseCost: 180, groupId: 20056, iconId: "20021" }, "200571": { baseCost: 180, groupId: 20057, iconId: "20022" }, "200572": { baseCost: 180, groupId: 20057, iconId: "20021" }, "200581": { baseCost: 180, groupId: 20058, iconId: "20012" }, "200582": { baseCost: 180, groupId: 20058, iconId: "20011" }, "200591": { baseCost: 180, groupId: 20059, iconId: "20012" }, "200592": { baseCost: 180, groupId: 20059, iconId: "20011" }, "200601": { baseCost: 180, groupId: 20060, iconId: "20042" }, "200602": { baseCost: 180, groupId: 20060, iconId: "20041" }, "200611": { baseCost: 180, groupId: 20061, iconId: "20012" }, "200612": { baseCost: 180, groupId: 20061, iconId: "20011" }, "200621": { baseCost: 180, groupId: 20062, iconId: "20022" }, "200622": { baseCost: 180, groupId: 20062, iconId: "20021" }, "200631": { baseCost: 180, groupId: 20063, iconId: "20012" }, "200632": { baseCost: 180, groupId: 20063, iconId: "20011" }, "200641": { baseCost: 180, groupId: 20064, iconId: "20042" }, "200642": { baseCost: 180, groupId: 20064, iconId: "20041" }, "200651": { baseCost: 160, groupId: 20065, iconId: "20042" }, "200652": { baseCost: 160, groupId: 20065, iconId: "20041" }, "200662": { baseCost: 160, groupId: 20066, iconId: "20021" }, "200671": { baseCost: 160, groupId: 20067, iconId: "20012" }, "200672": { baseCost: 160, groupId: 20067, iconId: "20011" }, "200681": { baseCost: 160, groupId: 20068, iconId: "20012" }, "200682": { baseCost: 160, groupId: 20068, iconId: "20011" }, "200691": { baseCost: 160, groupId: 20069, iconId: "20022" }, "200692": { baseCost: 160, groupId: 20069, iconId: "20021" }, "200701": { baseCost: 160, groupId: 20070, iconId: "20042" }, "200702": { baseCost: 160, groupId: 20070, iconId: "20041" }, "200711": { baseCost: 160, groupId: 20071, iconId: "20022" }, "200712": { baseCost: 160, groupId: 20071, iconId: "20021" }, "200721": { baseCost: 160, groupId: 20072, iconId: "20012" }, "200722": { baseCost: 160, groupId: 20072, iconId: "20011" }, "200731": { baseCost: 160, groupId: 20073, iconId: "20012" }, "200732": { baseCost: 160, groupId: 20073, iconId: "20011" }, "200741": { baseCost: 160, groupId: 20074, iconId: "20022" }, "200742": { baseCost: 160, groupId: 20074, iconId: "20021" }, "200751": { baseCost: 160, groupId: 20075, iconId: "20012" }, "200752": { baseCost: 160, groupId: 20075, iconId: "20011" }, "200761": { baseCost: 160, groupId: 20076, iconId: "20022" }, "200762": { baseCost: 160, groupId: 20076, iconId: "20021" }, "200771": { baseCost: 140, groupId: 20077, iconId: "30051" }, "200772": { baseCost: 140, groupId: 20077, iconId: "30052" }, "200781": { baseCost: 140, groupId: 20078, iconId: "30051" }, "200791": { baseCost: 130, groupId: 20079, iconId: "30041" }, "200801": { baseCost: 130, groupId: 20080, iconId: "30041" }, "200811": { baseCost: 130, groupId: 20081, iconId: "30041" }, "200821": { baseCost: 130, groupId: 20082, iconId: "30041" }, "200831": { baseCost: 130, groupId: 20083, iconId: "30051" }, "200841": { baseCost: 130, groupId: 20084, iconId: "30051" }, "200851": { baseCost: 130, groupId: 20085, iconId: "30011" }, "200861": { baseCost: 130, groupId: 20086, iconId: "30051" }, "200871": { baseCost: 130, groupId: 20087, iconId: "30051" }, "200881": { baseCost: 130, groupId: 20088, iconId: "30011" }, "200891": { baseCost: 130, groupId: 20089, iconId: "30051" }, "200901": { baseCost: 130, groupId: 20090, iconId: "30051" }, "200911": { baseCost: 130, groupId: 20091, iconId: "30011" }, "200921": { baseCost: 130, groupId: 20092, iconId: "30051" }, "200931": { baseCost: 130, groupId: 20093, iconId: "30051" }, "200941": { baseCost: 130, groupId: 20094, iconId: "30011" }, "200951": { baseCost: 110, groupId: 20095, iconId: "10021" }, "200952": { baseCost: 90, groupId: 20095, iconId: "10021" }, "200953": { baseCost: 50, groupId: 20095, iconId: "10024" }, "200961": { baseCost: 110, groupId: 20096, iconId: "20011" }, "200962": { baseCost: 100, groupId: 20096, iconId: "20011" }, "200963": { baseCost: 150, groupId: 20096, iconId: "20012" }, "200971": { baseCost: 110, groupId: 20097, iconId: "20011" }, "200972": { baseCost: 100, groupId: 20097, iconId: "20011" }, "200981": { baseCost: 170, groupId: 20098, iconId: "20012" }, "200982": { baseCost: 170, groupId: 20098, iconId: "20011" }, "200991": { baseCost: 160, groupId: 20099, iconId: "20042" }, "200992": { baseCost: 160, groupId: 20099, iconId: "20041" }, "201001": { baseCost: 140, groupId: 20100, iconId: "20052" }, "201002": { baseCost: 140, groupId: 20100, iconId: "20051" }, "201011": { baseCost: 170, groupId: 20101, iconId: "30012" }, "201012": { baseCost: 170, groupId: 20101, iconId: "30011" }, "201021": { baseCost: 170, groupId: 20102, iconId: "30052" }, "201022": { baseCost: 170, groupId: 20102, iconId: "30051" }, "201031": { baseCost: 110, groupId: 20103, iconId: "20011" }, "201032": { baseCost: 100, groupId: 20103, iconId: "20011" }, "201041": { baseCost: 110, groupId: 20104, iconId: "20011" }, "201042": { baseCost: 100, groupId: 20104, iconId: "20011" }, "201043": { baseCost: 150, groupId: 20104, iconId: "20012" }, "201051": { baseCost: 160, groupId: 20105, iconId: "20012" }, "201052": { baseCost: 160, groupId: 20105, iconId: "20011" }, "201061": { baseCost: 160, groupId: 20106, iconId: "20042" }, "201062": { baseCost: 160, groupId: 20106, iconId: "20041" }, "201071": { baseCost: 120, groupId: 20107, iconId: "20012" }, "201072": { baseCost: 120, groupId: 20107, iconId: "20011" }, "201081": { baseCost: 160, groupId: 20108, iconId: "30012" }, "201082": { baseCost: 160, groupId: 20108, iconId: "30011" }, "201091": { baseCost: 160, groupId: 20109, iconId: "30022" }, "201092": { baseCost: 160, groupId: 20109, iconId: "30021" }, "201101": { baseCost: 110, groupId: 20110, iconId: "20011" }, "201102": { baseCost: 100, groupId: 20110, iconId: "20011" }, "201103": { baseCost: 150, groupId: 20110, iconId: "20012" }, "201111": { baseCost: 110, groupId: 20111, iconId: "20011" }, "201112": { baseCost: 100, groupId: 20111, iconId: "20011" }, "201113": { baseCost: 150, groupId: 20111, iconId: "20012" }, "201121": { baseCost: 110, groupId: 20112, iconId: "20092" }, "201122": { baseCost: 110, groupId: 20112, iconId: "20091" }, "201131": { baseCost: 140, groupId: 20113, iconId: "20052" }, "201132": { baseCost: 140, groupId: 20113, iconId: "20051" }, "201141": { baseCost: 160, groupId: 20114, iconId: "20022" }, "201142": { baseCost: 160, groupId: 20114, iconId: "20021" }, "201151": { baseCost: 160, groupId: 20115, iconId: "30012" }, "201152": { baseCost: 160, groupId: 20115, iconId: "30011" }, "201161": { baseCost: 160, groupId: 20116, iconId: "30052" }, "201162": { baseCost: 160, groupId: 20116, iconId: "30051" }, "201171": { baseCost: 110, groupId: 20117, iconId: "20011" }, "201172": { baseCost: 100, groupId: 20117, iconId: "20011" }, "201173": { baseCost: 150, groupId: 20117, iconId: "20012" }, "201181": { baseCost: 110, groupId: 20118, iconId: "20011" }, "201182": { baseCost: 100, groupId: 20118, iconId: "20011" }, "201191": { baseCost: 160, groupId: 20119, iconId: "20012" }, "201192": { baseCost: 160, groupId: 20119, iconId: "20011" }, "201201": { baseCost: 160, groupId: 20120, iconId: "20022" }, "201202": { baseCost: 160, groupId: 20120, iconId: "20021" }, "201211": { baseCost: 160, groupId: 20121, iconId: "20012" }, "201212": { baseCost: 160, groupId: 20121, iconId: "20011" }, "201221": { baseCost: 160, groupId: 20122, iconId: "30052" }, "201222": { baseCost: 160, groupId: 20122, iconId: "30051" }, "201231": { baseCost: 110, groupId: 20123, iconId: "30072" }, "201232": { baseCost: 110, groupId: 20123, iconId: "30071" }, "201241": { baseCost: 140, groupId: 20124, iconId: "20011" }, "201242": { baseCost: 130, groupId: 20124, iconId: "20011" }, "201251": { baseCost: 140, groupId: 20125, iconId: "20011" }, "201252": { baseCost: 130, groupId: 20125, iconId: "20011" }, "201253": { baseCost: 150, groupId: 20125, iconId: "20012" }, "201261": { baseCost: 110, groupId: 20126, iconId: "20052" }, "201262": { baseCost: 110, groupId: 20126, iconId: "20051" }, "201271": { baseCost: 180, groupId: 20127, iconId: "20012" }, "201272": { baseCost: 180, groupId: 20127, iconId: "20011" }, "201281": { baseCost: 180, groupId: 20128, iconId: "20022" }, "201282": { baseCost: 180, groupId: 20128, iconId: "20021" }, "201291": { baseCost: 180, groupId: 20129, iconId: "20042" }, "201292": { baseCost: 180, groupId: 20129, iconId: "20041" }, "201302": { baseCost: 130, groupId: 20130, iconId: "30021" }, "201311": { baseCost: 140, groupId: 20131, iconId: "20011" }, "201312": { baseCost: 130, groupId: 20131, iconId: "20011" }, "201321": { baseCost: 140, groupId: 20132, iconId: "20011" }, "201322": { baseCost: 130, groupId: 20132, iconId: "20011" }, "201331": { baseCost: 120, groupId: 20133, iconId: "20042" }, "201332": { baseCost: 120, groupId: 20133, iconId: "20041" }, "201341": { baseCost: 120, groupId: 20134, iconId: "20042" }, "201342": { baseCost: 120, groupId: 20134, iconId: "20041" }, "201351": { baseCost: 180, groupId: 20135, iconId: "20022" }, "201352": { baseCost: 180, groupId: 20135, iconId: "20021" }, "201361": { baseCost: 120, groupId: 20136, iconId: "20042" }, "201362": { baseCost: 120, groupId: 20136, iconId: "20041" }, "201371": { baseCost: 110, groupId: 20137, iconId: "30072" }, "201372": { baseCost: 110, groupId: 20137, iconId: "30071" }, "201381": { baseCost: 140, groupId: 20138, iconId: "20011" }, "201382": { baseCost: 130, groupId: 20138, iconId: "20011" }, "201383": { baseCost: 150, groupId: 20138, iconId: "20012" }, "201391": { baseCost: 140, groupId: 20139, iconId: "20011" }, "201392": { baseCost: 130, groupId: 20139, iconId: "20011" }, "201393": { baseCost: 150, groupId: 20139, iconId: "20012" }, "201401": { baseCost: 120, groupId: 20140, iconId: "20042" }, "201402": { baseCost: 120, groupId: 20140, iconId: "20041" }, "201411": { baseCost: 120, groupId: 20141, iconId: "20012" }, "201412": { baseCost: 120, groupId: 20141, iconId: "20011" }, "201421": { baseCost: 180, groupId: 20142, iconId: "20022" }, "201422": { baseCost: 180, groupId: 20142, iconId: "20021" }, "201431": { baseCost: 120, groupId: 20143, iconId: "20092" }, "201432": { baseCost: 120, groupId: 20143, iconId: "20091" }, "201441": { baseCost: 180, groupId: 20144, iconId: "30052" }, "201442": { baseCost: 180, groupId: 20144, iconId: "30051" }, "201451": { baseCost: 140, groupId: 20145, iconId: "20011" }, "201452": { baseCost: 130, groupId: 20145, iconId: "20011" }, "201453": { baseCost: 150, groupId: 20145, iconId: "20012" }, "201461": { baseCost: 140, groupId: 20146, iconId: "20011" }, "201462": { baseCost: 130, groupId: 20146, iconId: "20011" }, "201463": { baseCost: 150, groupId: 20146, iconId: "20012" }, "201471": { baseCost: 110, groupId: 20147, iconId: "20092" }, "201472": { baseCost: 110, groupId: 20147, iconId: "20091" }, "201481": { baseCost: 170, groupId: 20148, iconId: "20022" }, "201482": { baseCost: 170, groupId: 20148, iconId: "20021" }, "201491": { baseCost: 180, groupId: 20149, iconId: "20022" }, "201492": { baseCost: 180, groupId: 20149, iconId: "20021" }, "201501": { baseCost: 110, groupId: 20150, iconId: "20092" }, "201502": { baseCost: 110, groupId: 20150, iconId: "20091" }, "201511": { baseCost: 180, groupId: 20151, iconId: "30012" }, "201512": { baseCost: 180, groupId: 20151, iconId: "30011" }, "201521": { baseCost: 130, groupId: 20152, iconId: "10051" }, "201522": { baseCost: 110, groupId: 20152, iconId: "10051" }, "201531": { baseCost: 130, groupId: 20153, iconId: "10051" }, "201532": { baseCost: 110, groupId: 20153, iconId: "10051" }, "201541": { baseCost: 130, groupId: 20154, iconId: "10051" }, "201542": { baseCost: 110, groupId: 20154, iconId: "10051" }, "201551": { baseCost: 130, groupId: 20155, iconId: "10051" }, "201552": { baseCost: 110, groupId: 20155, iconId: "10051" }, "201561": { baseCost: 110, groupId: 20156, iconId: "10062" }, "201562": { baseCost: 110, groupId: 20156, iconId: "10061" }, "201571": { baseCost: 160, groupId: 20157, iconId: "20021" }, "201581": { baseCost: 160, groupId: 20158, iconId: "20041" }, "201591": { baseCost: 160, groupId: 20159, iconId: "20011" }, "201592": { baseCost: 160, groupId: 20159, iconId: "20012" }, "201601": { baseCost: 100, groupId: 20160, iconId: "20041" }, "201602": { baseCost: 180, groupId: 20160, iconId: "20042" }, "201611": { baseCost: 100, groupId: 20161, iconId: "20011" }, "201612": { baseCost: 180, groupId: 20161, iconId: "20012" }, "201621": { baseCost: 100, groupId: 20162, iconId: "20021" }, "201631": { baseCost: 70, groupId: 20163, iconId: "10011" }, "201641": { baseCost: 70, groupId: 20164, iconId: "10011" }, "201651": { baseCost: 160, groupId: 20165, iconId: "20011" }, "201652": { baseCost: 160, groupId: 20165, iconId: "20012" }, "201661": { baseCost: 160, groupId: 20166, iconId: "20011" }, "201662": { baseCost: 160, groupId: 20166, iconId: "20012" }, "201671": { baseCost: 180, groupId: 20167, iconId: "20012" }, "201672": { baseCost: 180, groupId: 20167, iconId: "20011" }, "201681": { baseCost: 140, groupId: 20168, iconId: "20052" }, "201682": { baseCost: 140, groupId: 20168, iconId: "20051" }, "201691": { baseCost: 180, groupId: 20169, iconId: "20022" }, "201692": { baseCost: 180, groupId: 20169, iconId: "20021" }, "201701": { baseCost: 160, groupId: 20170, iconId: "20012" }, "201702": { baseCost: 160, groupId: 20170, iconId: "20011" }, "201801": { baseCost: 50, groupId: 20180, iconId: "10014" }, "201901": { baseCost: 180, groupId: 20190, iconId: "20042" }, "201902": { baseCost: 180, groupId: 20190, iconId: "20041" }, "202001": { baseCost: 200, groupId: 20200, iconId: "20022" }, "202002": { baseCost: 180, groupId: 20200, iconId: "20021" }, "202011": { baseCost: 160, groupId: 20201, iconId: "20012" }, "202012": { baseCost: 160, groupId: 20201, iconId: "20011" }, "202021": { baseCost: 180, groupId: 20202, iconId: "20012" }, "202022": { baseCost: 180, groupId: 20202, iconId: "20011" }, "202031": { baseCost: 120, groupId: 20203, iconId: "20012" }, "202032": { baseCost: 120, groupId: 20203, iconId: "20011" }, "202041": { baseCost: 160, groupId: 20204, iconId: "20012" }, "202042": { baseCost: 160, groupId: 20204, iconId: "20011" }, "202051": { baseCost: 200, groupId: 20205, iconId: "40012" }, "202061": { baseCost: 360, groupId: 20206, iconId: "2010010" }, "202071": { baseCost: 170, groupId: 20207, iconId: "20022" }, "202072": { baseCost: 170, groupId: 20207, iconId: "20021" }, "202081": { baseCost: 160, groupId: 20208, iconId: "20042" }, "202082": { baseCost: 160, groupId: 20208, iconId: "20041" }, "202091": { baseCost: 160, groupId: 20209, iconId: "20012" }, "202092": { baseCost: 160, groupId: 20209, iconId: "20011" }, "202101": { baseCost: 160, groupId: 20210, iconId: "20012" }, "202102": { baseCost: 160, groupId: 20210, iconId: "20011" }, "202111": { baseCost: 160, groupId: 20211, iconId: "20012" }, "202112": { baseCost: 160, groupId: 20211, iconId: "20011" }, "202121": { baseCost: 180, groupId: 20212, iconId: "20012" }, "202122": { baseCost: 180, groupId: 20212, iconId: "20011" }, "202131": { baseCost: 160, groupId: 20213, iconId: "20012" }, "202132": { baseCost: 160, groupId: 20213, iconId: "20011" }, "202141": { baseCost: 0, groupId: 20214, iconId: "20064" }, "202151": { baseCost: 160, groupId: 20215, iconId: "20012" }, "202152": { baseCost: 160, groupId: 20215, iconId: "20011" }, "202161": { baseCost: 160, groupId: 20216, iconId: "10051" }, "202171": { baseCost: 170, groupId: 20217, iconId: "20012" }, "202172": { baseCost: 170, groupId: 20217, iconId: "20011" }, "202181": { baseCost: 0, groupId: 20218, iconId: "10044" }, "202191": { baseCost: 170, groupId: 20219, iconId: "20022" }, "202192": { baseCost: 170, groupId: 20219, iconId: "20021" }, "202201": { baseCost: 90, groupId: 20220, iconId: "10021" }, "202202": { baseCost: 70, groupId: 20220, iconId: "10021" }, "202203": { baseCost: 40, groupId: 20220, iconId: "10024" }, "202211": { baseCost: 90, groupId: 20221, iconId: "10021" }, "202212": { baseCost: 70, groupId: 20221, iconId: "10021" }, "202213": { baseCost: 40, groupId: 20221, iconId: "10024" }, "202221": { baseCost: 90, groupId: 20222, iconId: "10021" }, "202222": { baseCost: 70, groupId: 20222, iconId: "10021" }, "202223": { baseCost: 40, groupId: 20222, iconId: "10024" }, "202231": { baseCost: 90, groupId: 20223, iconId: "10051" }, "202232": { baseCost: 70, groupId: 20223, iconId: "10051" }, "202233": { baseCost: 40, groupId: 20223, iconId: "10054" }, "202241": { baseCost: 90, groupId: 20224, iconId: "10051" }, "202242": { baseCost: 70, groupId: 20224, iconId: "10051" }, "202243": { baseCost: 40, groupId: 20224, iconId: "10054" }, "202251": { baseCost: 90, groupId: 20225, iconId: "10011" }, "202252": { baseCost: 70, groupId: 20225, iconId: "10011" }, "202253": { baseCost: 40, groupId: 20225, iconId: "10014" }, "202261": { baseCost: 180, groupId: 20226, iconId: "20012" }, "202262": { baseCost: 180, groupId: 20226, iconId: "20011" }, "202271": { baseCost: 180, groupId: 20227, iconId: "20012" }, "202272": { baseCost: 180, groupId: 20227, iconId: "20011" }, "202281": { baseCost: 180, groupId: 20228, iconId: "20012" }, "202282": { baseCost: 180, groupId: 20228, iconId: "20011" }, "202291": { baseCost: 150, groupId: 20229, iconId: "20012" }, "202292": { baseCost: 150, groupId: 20229, iconId: "20011" }, "202301": { baseCost: 160, groupId: 20230, iconId: "20012" }, "202302": { baseCost: 160, groupId: 20230, iconId: "20011" }, "202303": { baseCost: 100, groupId: 20230, iconId: "20014" }, "202311": { baseCost: 180, groupId: 20231, iconId: "20042" }, "202312": { baseCost: 180, groupId: 20231, iconId: "20041" }, "202321": { baseCost: 180, groupId: 20232, iconId: "20042" }, "202322": { baseCost: 180, groupId: 20232, iconId: "20041" }, "202331": { baseCost: 120, groupId: 20233, iconId: "10012" }, "202332": { baseCost: 120, groupId: 20233, iconId: "10011" }, "202341": { baseCost: 130, groupId: 20234, iconId: "10012" }, "202342": { baseCost: 110, groupId: 20234, iconId: "10011" }, "202343": { baseCost: 90, groupId: 20234, iconId: "10011" }, "202344": { baseCost: 50, groupId: 20234, iconId: "10014" }, "202351": { baseCost: 120, groupId: 20235, iconId: "30012" }, "202352": { baseCost: 120, groupId: 20235, iconId: "30011" }, "202361": { baseCost: 180, groupId: 20236, iconId: "30012" }, "202362": { baseCost: 180, groupId: 20236, iconId: "30011" }, "202371": { baseCost: 180, groupId: 20237, iconId: "20012" }, "202372": { baseCost: 180, groupId: 20237, iconId: "20011" }, "202381": { baseCost: 180, groupId: 20238, iconId: "20012" }, "202382": { baseCost: 180, groupId: 20238, iconId: "20011" }, "202391": { baseCost: 180, groupId: 20239, iconId: "20012" }, "202392": { baseCost: 180, groupId: 20239, iconId: "20011" }, "202401": { baseCost: 180, groupId: 20240, iconId: "20042" }, "202402": { baseCost: 180, groupId: 20240, iconId: "20041" }, "202411": { baseCost: 180, groupId: 20241, iconId: "20012" }, "202412": { baseCost: 180, groupId: 20241, iconId: "20011" }, "202421": { baseCost: 180, groupId: 20242, iconId: "20042" }, "202422": { baseCost: 180, groupId: 20242, iconId: "20041" }, "202431": { baseCost: 170, groupId: 20243, iconId: "20012" }, "202432": { baseCost: 170, groupId: 20243, iconId: "20011" }, "202441": { baseCost: 180, groupId: 20244, iconId: "10012" }, "202442": { baseCost: 180, groupId: 20244, iconId: "10011" }, "202451": { baseCost: 180, groupId: 20245, iconId: "20012" }, "202452": { baseCost: 180, groupId: 20245, iconId: "20011" }, "202461": { baseCost: 180, groupId: 20246, iconId: "20012" }, "202462": { baseCost: 180, groupId: 20246, iconId: "20011" }, "202471": { baseCost: 180, groupId: 20247, iconId: "20012" }, "202472": { baseCost: 180, groupId: 20247, iconId: "20011" }, "202481": { baseCost: 180, groupId: 20248, iconId: "20042" }, "202482": { baseCost: 180, groupId: 20248, iconId: "20041" }, "202491": { baseCost: 180, groupId: 20249, iconId: "20042" }, "202492": { baseCost: 180, groupId: 20249, iconId: "20041" }, "202501": { baseCost: 180, groupId: 20250, iconId: "20012" }, "202502": { baseCost: 180, groupId: 20250, iconId: "20011" }, "202511": { baseCost: 0, groupId: 20251, iconId: "10054" }, "202521": { baseCost: 180, groupId: 20252, iconId: "20012" }, "202522": { baseCost: 180, groupId: 20252, iconId: "20011" }, "202531": { baseCost: 180, groupId: 20253, iconId: "20012" }, "202532": { baseCost: 180, groupId: 20253, iconId: "20011" }, "202541": { baseCost: 190, groupId: 20254, iconId: "20012" }, "202542": { baseCost: 190, groupId: 20254, iconId: "20011" }, "202551": { baseCost: 200, groupId: 20255, iconId: "20012" }, "202552": { baseCost: 200, groupId: 20255, iconId: "20011" }, "202561": { baseCost: 160, groupId: 20256, iconId: "20012" }, "202562": { baseCost: 160, groupId: 20256, iconId: "20011" }, "202571": { baseCost: 0, groupId: 20257, iconId: "20042" }, "202581": { baseCost: 200, groupId: 20258, iconId: "20022" }, "202582": { baseCost: 200, groupId: 20258, iconId: "20021" }, "202591": { baseCost: 160, groupId: 20259, iconId: "20012" }, "202592": { baseCost: 160, groupId: 20259, iconId: "20011" }, "202601": { baseCost: 160, groupId: 20260, iconId: "20012" }, "202602": { baseCost: 160, groupId: 20260, iconId: "20011" }, "202612": { baseCost: 180, groupId: 20261, iconId: "20011" }, "202621": { baseCost: 180, groupId: 20262, iconId: "20012" }, "202622": { baseCost: 180, groupId: 20262, iconId: "20011" }, "202641": { baseCost: 180, groupId: 20264, iconId: "20012" }, "202642": { baseCost: 180, groupId: 20264, iconId: "20011" }, "202651": { baseCost: 180, groupId: 20265, iconId: "10012" }, "202652": { baseCost: 180, groupId: 20265, iconId: "10011" }, "202661": { baseCost: 180, groupId: 20266, iconId: "20012" }, "202662": { baseCost: 180, groupId: 20266, iconId: "20011" }, "202671": { baseCost: 160, groupId: 20267, iconId: "20042" }, "202672": { baseCost: 160, groupId: 20267, iconId: "20041" }, "202681": { baseCost: 200, groupId: 20268, iconId: "20012" }, "202682": { baseCost: 200, groupId: 20268, iconId: "20011" }, "202691": { baseCost: 120, groupId: 20269, iconId: "20042" }, "202692": { baseCost: 120, groupId: 20269, iconId: "20041" }, "202701": { baseCost: 120, groupId: 20270, iconId: "10012" }, "202702": { baseCost: 120, groupId: 20270, iconId: "10011" }, "202711": { baseCost: 180, groupId: 20271, iconId: "20042" }, "202712": { baseCost: 180, groupId: 20271, iconId: "20041" }, "202721": { baseCost: 180, groupId: 20272, iconId: "20012" }, "202722": { baseCost: 180, groupId: 20272, iconId: "20011" }, "202731": { baseCost: 90, groupId: 20273, iconId: "10021" }, "202732": { baseCost: 70, groupId: 20273, iconId: "10021" }, "202733": { baseCost: 40, groupId: 20273, iconId: "10024" }, "202734": { baseCost: 130, groupId: 20273, iconId: "10022" }, "202741": { baseCost: 180, groupId: 20274, iconId: "20012" }, "202742": { baseCost: 180, groupId: 20274, iconId: "20011" }, "202751": { baseCost: 160, groupId: 20275, iconId: "20012" }, "202752": { baseCost: 160, groupId: 20275, iconId: "20011" }, "210011": { baseCost: 200, groupId: 21001, iconId: "20102" }, "210012": { baseCost: 200, groupId: 21001, iconId: "20101" }, "210021": { baseCost: 200, groupId: 21002, iconId: "20112" }, "210022": { baseCost: 200, groupId: 21002, iconId: "20111" }, "210031": { baseCost: 200, groupId: 21003, iconId: "20122" }, "210032": { baseCost: 200, groupId: 21003, iconId: "20121" }, "210041": { baseCost: 200, groupId: 21004, iconId: "20102" }, "210042": { baseCost: 200, groupId: 21004, iconId: "20101" }, "210051": { baseCost: 200, groupId: 21005, iconId: "20132" }, "210052": { baseCost: 200, groupId: 21005, iconId: "20131" }, "210061": { baseCost: 200, groupId: 21006, iconId: "20142" }, "210062": { baseCost: 200, groupId: 21006, iconId: "20141" }, "210071": { baseCost: 200, groupId: 21007, iconId: "20152" }, "210072": { baseCost: 200, groupId: 21007, iconId: "20151" }, "210081": { baseCost: 200, groupId: 21008, iconId: "20162" }, "210082": { baseCost: 200, groupId: 21008, iconId: "20161" }, "210091": { baseCost: 150, groupId: 21009, iconId: "20161" }, "210101": { baseCost: 150, groupId: 21010, iconId: "20161" }, "210111": { baseCost: 150, groupId: 21011, iconId: "20161" }, "210121": { baseCost: 150, groupId: 21012, iconId: "20171" }, "210131": { baseCost: 150, groupId: 21013, iconId: "20161" }, "210141": { baseCost: 150, groupId: 21014, iconId: "20181" }, "210261": { baseCost: 200, groupId: 21026, iconId: "20192" }, "210262": { baseCost: 200, groupId: 21026, iconId: "20191" }, "210271": { baseCost: 200, groupId: 21027, iconId: "20202" }, "210272": { baseCost: 200, groupId: 21027, iconId: "20201" }, "210281": { baseCost: 200, groupId: 21028, iconId: "20192" }, "210282": { baseCost: 200, groupId: 21028, iconId: "20191" }, "210291": { baseCost: 200, groupId: 21029, iconId: "20212" }, "210292": { baseCost: 200, groupId: 21029, iconId: "20211" }, "300131": { baseCost: 0, groupId: 30013, iconId: "20013" }, "300141": { baseCost: 0, groupId: 30014, iconId: "20013" }, "900011": { baseCost: 200, groupId: 90001, iconId: "20011" }, "900021": { baseCost: 200, groupId: 90002, iconId: "20011" }, "900031": { baseCost: 200, groupId: 90003, iconId: "20011" }, "900041": { baseCost: 200, groupId: 90004, iconId: "20041" }, "900051": { baseCost: 200, groupId: 90005, iconId: "20011" }, "900061": { baseCost: 200, groupId: 90006, iconId: "20011" }, "900071": { baseCost: 200, groupId: 90007, iconId: "20011" }, "900081": { baseCost: 200, groupId: 90008, iconId: "20011" }, "900091": { baseCost: 200, groupId: 90009, iconId: "20011" }, "900101": { baseCost: 200, groupId: 90010, iconId: "20041" }, "900111": { baseCost: 200, groupId: 90011, iconId: "20011" }, "900121": { baseCost: 200, groupId: 90012, iconId: "20011" }, "900131": { baseCost: 200, groupId: 90013, iconId: "20011" }, "900141": { baseCost: 200, groupId: 90014, iconId: "20011" }, "900151": { baseCost: 200, groupId: 90015, iconId: "20011" }, "900161": { baseCost: 200, groupId: 90016, iconId: "20011" }, "900171": { baseCost: 200, groupId: 90017, iconId: "20011" }, "900181": { baseCost: 200, groupId: 90018, iconId: "20011" }, "900191": { baseCost: 200, groupId: 90019, iconId: "20011" }, "900201": { baseCost: 200, groupId: 90020, iconId: "20041" }, "900211": { baseCost: 200, groupId: 90021, iconId: "20011" }, "900221": { baseCost: 200, groupId: 90022, iconId: "20011" }, "900231": { baseCost: 200, groupId: 90023, iconId: "20011" }, "900241": { baseCost: 200, groupId: 90024, iconId: "20011" }, "900251": { baseCost: 200, groupId: 90025, iconId: "20011" }, "900261": { baseCost: 200, groupId: 90026, iconId: "20011" }, "900271": { baseCost: 200, groupId: 90027, iconId: "20041" }, "900281": { baseCost: 200, groupId: 90028, iconId: "20011" }, "900291": { baseCost: 200, groupId: 90029, iconId: "20011" }, "900301": { baseCost: 200, groupId: 90030, iconId: "20011" }, "900311": { baseCost: 200, groupId: 90031, iconId: "20011" }, "900321": { baseCost: 200, groupId: 90032, iconId: "20021" }, "900331": { baseCost: 200, groupId: 90033, iconId: "20011" }, "900341": { baseCost: 200, groupId: 90034, iconId: "20011" }, "900351": { baseCost: 200, groupId: 90035, iconId: "20011" }, "900361": { baseCost: 200, groupId: 90036, iconId: "20011" }, "900371": { baseCost: 200, groupId: 90037, iconId: "20011" }, "900381": { baseCost: 200, groupId: 90038, iconId: "20011" }, "900391": { baseCost: 200, groupId: 90039, iconId: "20011" }, "900401": { baseCost: 200, groupId: 90040, iconId: "20041" }, "900411": { baseCost: 200, groupId: 90041, iconId: "20011" }, "900421": { baseCost: 200, groupId: 90042, iconId: "20011" }, "900431": { baseCost: 200, groupId: 90043, iconId: "20011" }, "900441": { baseCost: 200, groupId: 90044, iconId: "20011" }, "900451": { baseCost: 200, groupId: 90045, iconId: "20021" }, "900461": { baseCost: 200, groupId: 90046, iconId: "20011" }, "900471": { baseCost: 200, groupId: 90047, iconId: "20011" }, "900481": { baseCost: 200, groupId: 90048, iconId: "20011" }, "900491": { baseCost: 200, groupId: 90049, iconId: "20011" }, "900501": { baseCost: 200, groupId: 90050, iconId: "20011" }, "900511": { baseCost: 200, groupId: 90051, iconId: "20041" }, "900521": { baseCost: 200, groupId: 90052, iconId: "20021" }, "900531": { baseCost: 200, groupId: 90053, iconId: "20041" }, "900551": { baseCost: 200, groupId: 90055, iconId: "20011" }, "900561": { baseCost: 200, groupId: 90056, iconId: "20011" }, "900571": { baseCost: 200, groupId: 90057, iconId: "20011" }, "900581": { baseCost: 200, groupId: 90058, iconId: "20011" }, "900591": { baseCost: 200, groupId: 90059, iconId: "20041" }, "900601": { baseCost: 200, groupId: 90060, iconId: "20011" }, "900611": { baseCost: 200, groupId: 90061, iconId: "20011" }, "900621": { baseCost: 200, groupId: 90062, iconId: "20021" }, "900641": { baseCost: 200, groupId: 90064, iconId: "20021" }, "900651": { baseCost: 200, groupId: 90065, iconId: "20011" }, "900661": { baseCost: 200, groupId: 90066, iconId: "20011" }, "900671": { baseCost: 200, groupId: 90067, iconId: "20011" }, "900681": { baseCost: 200, groupId: 90068, iconId: "20011" }, "900691": { baseCost: 200, groupId: 90069, iconId: "20011" }, "900701": { baseCost: 200, groupId: 90070, iconId: "20041" }, "900711": { baseCost: 200, groupId: 90071, iconId: "20011" }, "900721": { baseCost: 200, groupId: 90072, iconId: "20011" }, "900741": { baseCost: 200, groupId: 90074, iconId: "20011" }, "900761": { baseCost: 200, groupId: 90076, iconId: "20011" }, "900771": { baseCost: 200, groupId: 90077, iconId: "20011" }, "900781": { baseCost: 200, groupId: 90078, iconId: "20041" }, "900831": { baseCost: 200, groupId: 90083, iconId: "20011" }, "900841": { baseCost: 200, groupId: 90084, iconId: "20011" }, "900851": { baseCost: 200, groupId: 90085, iconId: "20011" }, "900861": { baseCost: 200, groupId: 90086, iconId: "20011" }, "900871": { baseCost: 200, groupId: 90087, iconId: "20011" }, "900931": { baseCost: 200, groupId: 90093, iconId: "20011" }, "900981": { baseCost: 200, groupId: 90098, iconId: "20011" }, "900991": { baseCost: 200, groupId: 90099, iconId: "20041" }, "901001": { baseCost: 200, groupId: 90100, iconId: "20011" }, "901041": { baseCost: 200, groupId: 90104, iconId: "20011" }, "901051": { baseCost: 200, groupId: 90105, iconId: "20011" }, "901061": { baseCost: 200, groupId: 90106, iconId: "20011" }, "910011": { baseCost: 200, groupId: 91001, iconId: "20021" }, "910021": { baseCost: 200, groupId: 91002, iconId: "20011" }, "910031": { baseCost: 200, groupId: 91003, iconId: "20011" }, "910041": { baseCost: 200, groupId: 91004, iconId: "20011" }, "910051": { baseCost: 200, groupId: 91005, iconId: "20011" }, "910061": { baseCost: 200, groupId: 91006, iconId: "20011" }, "910071": { baseCost: 200, groupId: 91007, iconId: "20011" }, "910081": { baseCost: 200, groupId: 91008, iconId: "20011" }, "910091": { baseCost: 200, groupId: 91009, iconId: "20011" }, "910101": { baseCost: 200, groupId: 91010, iconId: "20011" }, "910111": { baseCost: 200, groupId: 91011, iconId: "20021" }, "910121": { baseCost: 200, groupId: 91012, iconId: "20011" }, "910131": { baseCost: 200, groupId: 91013, iconId: "20011" }, "910141": { baseCost: 200, groupId: 91014, iconId: "20041" }, "910151": { baseCost: 200, groupId: 91015, iconId: "20011" }, "910161": { baseCost: 200, groupId: 91016, iconId: "20011" }, "910171": { baseCost: 200, groupId: 91017, iconId: "20011" }, "910181": { baseCost: 200, groupId: 91018, iconId: "20011" }, "910191": { baseCost: 200, groupId: 91019, iconId: "20011" }, "910201": { baseCost: 200, groupId: 91020, iconId: "20011" }, "910211": { baseCost: 200, groupId: 91021, iconId: "20011" }, "910221": { baseCost: 200, groupId: 91022, iconId: "20011" }, "910231": { baseCost: 200, groupId: 91023, iconId: "20011" }, "910241": { baseCost: 200, groupId: 91024, iconId: "20011" }, "910261": { baseCost: 200, groupId: 91026, iconId: "20011" }, "910271": { baseCost: 200, groupId: 91027, iconId: "20011" }, "910301": { baseCost: 200, groupId: 91030, iconId: "20021" }, "910311": { baseCost: 200, groupId: 91031, iconId: "20011" }, "910321": { baseCost: 200, groupId: 91032, iconId: "20011" }, "910341": { baseCost: 200, groupId: 91034, iconId: "20011" }, "910351": { baseCost: 200, groupId: 91035, iconId: "20011" }, "910361": { baseCost: 200, groupId: 91036, iconId: "20011" }, "910371": { baseCost: 200, groupId: 91037, iconId: "20011" }, "910381": { baseCost: 200, groupId: 91038, iconId: "20011" }, "910391": { baseCost: 200, groupId: 91039, iconId: "20011" }, "910401": { baseCost: 200, groupId: 91040, iconId: "20011" }, "910411": { baseCost: 200, groupId: 91041, iconId: "20041" }, "910451": { baseCost: 200, groupId: 91045, iconId: "20011" }, "910461": { baseCost: 200, groupId: 91046, iconId: "20011" }, "910481": { baseCost: 200, groupId: 91048, iconId: "20011" }, "910501": { baseCost: 200, groupId: 91050, iconId: "20011" }, "910511": { baseCost: 200, groupId: 91051, iconId: "20011" }, "910521": { baseCost: 200, groupId: 91052, iconId: "20011" }, "910531": { baseCost: 200, groupId: 91053, iconId: "20011" }, "910561": { baseCost: 200, groupId: 91056, iconId: "20011" }, "910581": { baseCost: 200, groupId: 91058, iconId: "20011" }, "910591": { baseCost: 200, groupId: 91059, iconId: "20011" }, "910601": { baseCost: 200, groupId: 91060, iconId: "20011" }, "910611": { baseCost: 200, groupId: 91061, iconId: "20041" }, "910621": { baseCost: 200, groupId: 91062, iconId: "20011" }, "910671": { baseCost: 200, groupId: 91067, iconId: "20011" }, "910681": { baseCost: 200, groupId: 91068, iconId: "20011" }, "910691": { baseCost: 200, groupId: 91069, iconId: "20041" }, "910711": { baseCost: 200, groupId: 91071, iconId: "20011" }, "910831": { baseCost: 200, groupId: 91083, iconId: "20011" }, "920011": { baseCost: 200, groupId: 92001, iconId: "20011" }, "920031": { baseCost: 200, groupId: 92003, iconId: "20011" }, "920071": { baseCost: 200, groupId: 92007, iconId: "20011" }, "920131": { baseCost: 200, groupId: 92013, iconId: "20011" }, "920671": { baseCost: 200, groupId: 92067, iconId: "20011" } };

  // ../components/SkillList.tsx
  var STRINGS_en = Object.freeze({ "skillfilters": Object.freeze({
    "white": "White skills",
    "gold": "Gold skills",
    "pink": "Evolved skills",
    "inherit": "Inherited uniques",
    "nige": "Runner",
    "senkou": "Leader",
    "sasi": "Betweener",
    "oikomi": "Chaser",
    "short": "Short",
    "mile": "Mile",
    "medium": "Medium",
    "long": "Long",
    "turf": "Turf",
    "dirt": "Dirt",
    "phase0": "Opening leg",
    "phase1": "Middle leg",
    "phase2": "Last leg",
    "phase3": "Final spurt",
    "finalcorner": "Final corner",
    "finalstraight": "Final straight"
  }) });
  function C(s3) {
    return parseAny(tokenize(s3), { conditions: mockConditions });
  }
  var filterOps = Object.freeze({
    "nige": [C("running_style==1")],
    "senkou": [C("running_style==2")],
    "sasi": [C("running_style==3")],
    "oikomi": [C("running_style==4")],
    "short": [C("distance_type==1")],
    "mile": [C("distance_type==2")],
    "medium": [C("distance_type==3")],
    "long": [C("distance_type==4")],
    "turf": [C("ground_type==1")],
    "dirt": [C("ground_type==2")],
    "phase0": [C("phase==0"), C("phase_random==0"), C("phase_firsthalf_random==0"), C("phase_laterhalf_random==0")],
    "phase1": [C("phase==1"), C("phase>=1"), C("phase_random==1"), C("phase_firsthalf_random==1"), C("phase_laterhalf_random==1")],
    "phase2": [C("phase==2"), C("phase>=2"), C("phase_random==2"), C("phase_firsthalf_random==2"), C("phase_laterhalf_random==2"), C("phase_firstquarter_random==2"), C("is_lastspurt==1")],
    "phase3": [C("phase==3"), C("phase_random==3"), C("phase_firsthalf_random==3"), C("phase_laterhalf_random==3")],
    "finalcorner": [C("is_finalcorner==1"), C("is_finalcorner_laterhalf==1"), C("is_finalcorner_random==1")],
    "finalstraight": [C("is_last_straight==1"), C("is_last_straight_onetime==1")]
  });
  var parsedConditions = {};
  Object.keys(skill_data_default).forEach((id) => {
    parsedConditions[id] = skill_data_default[id].alternatives.map((ef) => parse(tokenize(ef.condition), { conditions: mockConditions }));
  });
  function matchRarity(id, testRarity) {
    const r3 = skill_data_default[id].rarity;
    switch (testRarity) {
      case "white":
        return r3 == 1 /* White */;
      case "gold":
        return r3 == 2 /* Gold */;
      case "pink":
        return r3 == 6 /* Evolution */;
      case "inherit":
        return id[0] == "9";
      default:
        return true;
    }
  }
  var classnames = Object.freeze(["", "skill-white", "skill-gold", "skill-unique", "skill-unique", "skill-unique", "skill-pink"]);
  function Skill(props) {
    return /* @__PURE__ */ y("div", { class: `skill ${classnames[skill_data_default[props.id].rarity]} ${props.selected ? "selected" : ""}` }, /* @__PURE__ */ y("img", { class: "skillIcon", src: `/uma-tools/icons/${skill_meta_default[props.id].iconId}.png` }), /* @__PURE__ */ y("span", { class: "skillName" }, /* @__PURE__ */ y(Text, { id: `skillnames.${props.id}` })));
  }
  var iconIdPrefixes = Object.freeze({
    "1001": ["1001"],
    "1002": ["1002", "2018"],
    "1003": ["1003"],
    "1004": ["1004"],
    "1005": ["1005"],
    "1006": ["1006"],
    "2002": ["2002", "2011"],
    "2001": ["2001", "2010", "2014", "2015", "2016", "2019", "2021"],
    "2004": ["2004", "2012", "2017", "2020"],
    "2005": ["2005", "2013"],
    "2006": ["2006"],
    "2009": ["2009"],
    "3001": ["3001"],
    "3002": ["3002"],
    "3004": ["3004"],
    "3005": ["3005"],
    "3007": ["3007"],
    "4001": ["4001"]
  });
  var groups_filters = Object.freeze({
    "rarity": ["white", "gold", "pink", "inherit"],
    "icontype": ["1001", "1002", "1003", "1004", "1005", "1006", "4001", "2002", "2001", "2004", "2005", "2006", "2009", "3001", "3002", "3004", "3005", "3007"],
    "strategy": ["nige", "senkou", "sasi", "oikomi"],
    "distance": ["short", "mile", "medium", "long"],
    "surface": ["turf", "dirt"],
    "location": ["phase0", "phase1", "phase2", "phase3", "finalcorner", "finalstraight"]
  });
  function SkillList(props) {
    const [ids, setIds] = h2(props.ids);
    const [selectedSet, setSelectedSet] = h2(/* @__PURE__ */ new Map());
    const active = {}, setActive = {};
    Object.keys(groups_filters).forEach((group) => {
      active[group] = {};
      setActive[group] = {};
      groups_filters[group].forEach((filter) => {
        const [active_, setActive_] = h2(group == "icontype");
        active[group][filter] = active_;
        setActive[group][filter] = setActive_;
      });
    });
    function toggleSelected(e4) {
      const se = e4.target.closest("div");
      if (!se.classList.contains("skill"))
        return;
      e4.stopPropagation();
      const id = se.parentElement.dataset.skillid;
      const groupId = skill_meta_default[id].groupId;
      const selected = selectedSet.get(groupId) == id;
      const newSelected = new Map(selectedSet.entries());
      if (selected) {
        newSelected.delete(groupId);
      } else {
        newSelected.set(groupId, id);
      }
      setSelectedSet(newSelected);
    }
    function updateFilters(e4) {
      if (e4.target.tagName != "BUTTON")
        return;
      e4.stopPropagation();
      const group = e4.target.parentElement.dataset.filterGroup;
      const filter = e4.target.dataset.filter;
      if (group == "icontype") {
        if (groups_filters.icontype.every((f3) => active.icontype[f3])) {
          groups_filters.icontype.forEach((f3) => f3 != filter && setActive.icontype[f3](active.icontype[f3] = false));
        } else {
          setActive.icontype[filter](active.icontype[filter] = !active.icontype[filter]);
          if (!groups_filters.icontype.some((f3) => active.icontype[f3])) {
            groups_filters.icontype.forEach((f3) => setActive.icontype[f3](active.icontype[f3] = true));
          }
        }
      } else {
        setActive[group][filter](active[group][filter]);
        Object.keys(active[group]).forEach((k3) => setActive[group][k3](active[group][k3] = !active[group][k3] && k3 == filter));
      }
      setIds(props.ids.filter(
        (id) => Object.keys(groups_filters).every((group2) => {
          const check = groups_filters[group2].filter((f3) => active[group2][f3]);
          if (check.length == 0)
            return true;
          if (group2 == "rarity")
            return check.some((f3) => matchRarity(id, f3));
          else if (group2 == "icontype")
            return check.some((f3) => iconIdPrefixes[f3].some((p3) => skill_meta_default[id].iconId.startsWith(p3)));
          return check.some((f3) => filterOps[f3].some((op) => parsedConditions[id].some((alt) => treeMatch(op, alt))));
        })
      ));
    }
    function FilterGroup(props2) {
      return /* @__PURE__ */ y("div", { "data-filter-group": props2.group }, props2.children.map((c3) => F(c3, { group: props2.group })));
    }
    function FilterButton(props2) {
      return /* @__PURE__ */ y("button", { "data-filter": props2.filter, class: `filterButton ${active[props2.group][props2.filter] ? "active" : ""}` }, /* @__PURE__ */ y(Text, { id: `skillfilters.${props2.filter}` }));
    }
    function IconFilterButton(props2) {
      return /* @__PURE__ */ y("button", { "data-filter": props2.type, class: `iconFilterButton ${active[props2.group][props2.type] ? "active" : ""}`, style: `background-image:url(/uma-tools/icons/${props2.type}1.png)` });
    }
    const items = ids.map((id) => /* @__PURE__ */ y("li", { key: id, "data-skillid": id }, /* @__PURE__ */ y(Skill, { id, selected: selectedSet.get(skill_meta_default[id].groupId) == id })));
    return /* @__PURE__ */ y(IntlProvider, { definition: STRINGS_en }, /* @__PURE__ */ y("div", { class: "filterGroups", onClick: updateFilters }, /* @__PURE__ */ y(FilterGroup, { group: "rarity" }, /* @__PURE__ */ y(FilterButton, { filter: "white" }), /* @__PURE__ */ y(FilterButton, { filter: "gold" }), /* @__PURE__ */ y(FilterButton, { filter: "pink" }), /* @__PURE__ */ y(FilterButton, { filter: "inherit" })), /* @__PURE__ */ y(FilterGroup, { group: "icontype" }, groups_filters["icontype"].map((t3) => /* @__PURE__ */ y(IconFilterButton, { type: t3 }))), /* @__PURE__ */ y(FilterGroup, { group: "strategy" }, /* @__PURE__ */ y(FilterButton, { filter: "nige" }), /* @__PURE__ */ y(FilterButton, { filter: "senkou" }), /* @__PURE__ */ y(FilterButton, { filter: "sasi" }), /* @__PURE__ */ y(FilterButton, { filter: "oikomi" })), /* @__PURE__ */ y(FilterGroup, { group: "distance" }, /* @__PURE__ */ y(FilterButton, { filter: "short" }), /* @__PURE__ */ y(FilterButton, { filter: "mile" }), /* @__PURE__ */ y(FilterButton, { filter: "medium" }), /* @__PURE__ */ y(FilterButton, { filter: "long" })), /* @__PURE__ */ y(FilterGroup, { group: "surface" }, /* @__PURE__ */ y(FilterButton, { filter: "turf" }), /* @__PURE__ */ y(FilterButton, { filter: "dirt" })), /* @__PURE__ */ y(FilterGroup, { group: "location" }, /* @__PURE__ */ y(FilterButton, { filter: "phase0" }), /* @__PURE__ */ y(FilterButton, { filter: "phase1" }), /* @__PURE__ */ y(FilterButton, { filter: "phase2" }), /* @__PURE__ */ y(FilterButton, { filter: "phase3" }), /* @__PURE__ */ y(FilterButton, { filter: "finalcorner" }), /* @__PURE__ */ y(FilterButton, { filter: "finalstraight" }))), /* @__PURE__ */ y("ul", { class: "skillList", onClick: toggleSelected }, items));
  }

  // ../../skilltool/data/tracknames.json
  var tracknames_default = {
    "10001": ["\u672D\u5E4C", "Sapporo"],
    "10002": ["\u51FD\u9928", "Hakodate"],
    "10003": ["\u65B0\u6F5F", "Niigata"],
    "10004": ["\u798F\u5CF6", "Fukushima"],
    "10005": ["\u4E2D\u5C71", "Nakayama"],
    "10006": ["\u6771\u4EAC", "Tokyo"],
    "10007": ["\u4E2D\u4EAC", "Chuukyo"],
    "10008": ["\u4EAC\u90FD", "Kyoto"],
    "10009": ["\u962A\u795E", "Hanshin"],
    "10010": ["\u5C0F\u5009", "Kokura"],
    "10101": ["\u5927\u4E95", "Ooi"],
    "10103": ["\u5DDD\u5D0E", "Kawasaki"],
    "10104": ["\u8239\u6A4B", "Funabashi"],
    "10105": ["\u76DB\u5CA1", "Morioka"],
    "10201": ["\uFF9B\uFF9D\uFF7C\uFF6C\uFF9D", "Longchamp"]
  };

  // ../components/RaceTrack.tsx
  var STRINGS_ja = function() {
    const strings = {
      "racetrack": Object.freeze({
        "left": "\u5DE6",
        "right": "\u53F3",
        "turf": "\u829D",
        "dirt": "\u30C0\u30FC\u30C8",
        "straight": "\u76F4\u7DDA",
        "corner": "\u30B3\u30FC\u30CA\u30FC{{n}}",
        "uphill": "\u4E0A\u308A\u5742",
        "downhill": "\u4E0B\u308A\u5742",
        "phase0": "\u5E8F\u76E4",
        "phase1": "\u4E2D\u76E4",
        "phase2": "\u7D42\u76E4",
        "phase3": "\u30E9\u30B9\u30C8\u30B9\u30D1\u30FC\u30C8",
        "short": Object.freeze({
          "straight": "\u76F4",
          "corner": "\u30B3{{n}}",
          "uphill": "\u4E0A",
          "downhill": "\u4E0B"
        })
      }),
      "tracknames": {}
    };
    Object.keys(tracknames_default).forEach((k3) => strings.tracknames[k3] = `${tracknames_default[k3][0]}{{distance}}m {{surface}} {{orientation}}`);
    Object.freeze(strings.tracknames);
    return Object.freeze(strings);
  }();
  function DistanceMarker(props) {
    const y2 = props.up ? props.y - 11.5 : props.y;
    return /* @__PURE__ */ y(k, null, /* @__PURE__ */ y("text", { class: "distanceMarker", x: `${props.x}%`, y: `${y2 - (props.up ? -0.8 : 0.8)}%`, "font-size": "10px", "text-anchor": "middle", "dominant-baseline": props.up ? "hanging" : "auto", fill: "rgb(121,64,22)" }, `${props.d}m`), /* @__PURE__ */ y("line", { x1: `${props.x}%`, y1: `${y2}%`, x2: `${props.x}%`, y2: `${y2 + (props.up ? -2.5 : 2.5)}%`, stroke: "rgb(121,64,22)" }));
  }
  function SectionText(props) {
    return /* @__PURE__ */ y("text", { class: "sectionText", x: "50%", y: "50%", height: "40%", width: "100%", fill: "rgb(121,64,22)" }, /* @__PURE__ */ y(Text, { id: `racetrack${props.w < 0.085 ? ".short" : ""}.${props.id}`, fields: props.fields }));
  }
  function doMouseMove(e4) {
    const svg = e4.currentTarget;
    const line = svg.querySelector(".mouseoverLine");
    const text = svg.querySelector(".mouseoverText");
    const w3 = svg.getBoundingClientRect().width;
    line.setAttribute("x1", e4.offsetX);
    line.setAttribute("x2", e4.offsetX);
    text.setAttribute("x", e4.offsetX > w3 - 45 ? e4.offsetX - 45 : e4.offsetX + 5);
    text.setAttribute("y", e4.offsetY);
    text.textContent = Math.round(e4.offsetX / w3 * course_data_default[svg.dataset.courseid].distance) + "m";
  }
  function doMouseLeave(e4) {
    const svg = e4.currentTarget;
    const line = svg.querySelector(".mouseoverLine");
    const text = svg.querySelector(".mouseoverText");
    line.setAttribute("x1", -5);
    line.setAttribute("x2", -5);
    text.setAttribute("x", -5);
    text.setAttribute("y", -5);
  }
  function RaceTrack(props) {
    const course = CourseHelpers.getCourse(props.courseid);
    const trackNameHeader = F2(
      () => /* @__PURE__ */ y("div", { class: "racetrackName" }, /* @__PURE__ */ y(Text, { id: `tracknames.${course.raceTrackId}`, fields: {
        "distance": course.distance,
        "surface": /* @__PURE__ */ y(Text, { id: course.surface == 1 /* Turf */ ? "racetrack.turf" : "racetrack.dirt" }),
        "orientation": /* @__PURE__ */ y(Text, { id: course.turn == 1 /* Clockwise */ ? "racetrack.right" : "racetrack.left" })
      } })),
      [props.courseid]
    );
    const almostEverything = F2(function() {
      const highestPoint = course.slopes.reduce((x2, s3) => {
        const [last, highest] = x2;
        const us = last + s3.slope / 1e6 * s3.length;
        if (us > highest) {
          return [us, us];
        } else {
          return [us, highest];
        }
      }, [0, 0])[1];
      const full = course.slopes.slice();
      let lastEnd = 0;
      course.slopes.forEach((s3, i4) => {
        if (s3.start != lastEnd) {
          full.push({ start: lastEnd, length: s3.start - lastEnd, slope: 0 });
        }
        lastEnd = s3.start + s3.length;
      });
      if (lastEnd < course.distance) {
        full.push({ start: lastEnd, length: course.distance - lastEnd, slope: 0 });
      }
      full.sort((a4, b3) => a4.start - b3.start);
      const slopeEndHeights = [50];
      const slopes = full.reduce((elems, s3, i4) => {
        const lastEndHeight = slopeEndHeights[slopeEndHeights.length - 1];
        const thisEndHeight = lastEndHeight - s3.slope / 1e6 * s3.length / highestPoint * 40;
        slopeEndHeights.push(thisEndHeight);
        if (s3.slope == 0) {
          elems.push(/* @__PURE__ */ y("rect", { x: `${s3.start / course.distance * 100}%`, y: `${lastEndHeight * 0.262}%`, width: `${s3.length / course.distance * 100}%`, height: "26.2%", fill: "rgb(211,243,68)" }));
        } else {
          elems.push(
            /* @__PURE__ */ y("svg", { class: `hillArea ${s3.slope < 0 ? "downhill" : "uphill"}`, x: `${s3.start / course.distance * 100}%`, y: "0", width: `${s3.length / course.distance * 100}%`, height: "26.2%", viewBox: "0 0 100 100", preserveAspectRatio: "none" }, /* @__PURE__ */ y("polygon", { points: `0,${lastEndHeight} 0,100 100,100 100,${thisEndHeight}`, fill: "rgb(211,243,68)" }))
          );
        }
        return elems;
      }, []);
      const sections = course.straights.concat(course.corners.map((c3) => ({ start: c3.start, end: c3.start + c3.length }))).sort((a4, b3) => a4.start - b3.start);
      const phase1Start = Math.round(CourseHelpers.phaseStart(course.distance, 1)), phase2Start = Math.round(CourseHelpers.phaseStart(course.distance, 2)), phase3Start = Math.round(CourseHelpers.phaseStart(course.distance, 3));
      let upi = 0, downi = 0;
      return /* @__PURE__ */ y(k, null, slopes, /* @__PURE__ */ y("rect", { x: "0", y: "26.2%", width: "100%", height: "1.8%", fill: "rgb(140,170,10)" }), /* @__PURE__ */ y("svg", { class: "sectionsBg", x: "0", y: "28%", width: "100%", height: "18%" }, /* @__PURE__ */ y("rect", { x: "0", y: "0", height: "90%", width: "100%", fill: "rgb(239,229,241)" }), /* @__PURE__ */ y("rect", { x: "0", y: "90%", height: "10%", width: "100%", fill: "rgb(163,106,175)" })), course.slopes.map(
        (s3) => /* @__PURE__ */ y("svg", { class: "slope", x: `${s3.start / course.distance * 100}%`, y: "28%", width: `${s3.length / course.distance * 100}%`, height: "18%" }, /* @__PURE__ */ y("rect", { x: "0", y: "0", height: "90%", width: "100%", fill: s3.slope > 0 ? upi % 2 == 0 ? "rgb(234,207,147)" : "rgb(229,196,120)" : downi % 2 == 0 ? "rgb(82,195,184)" : "rgb(116,206,198)" }), /* @__PURE__ */ y("rect", { x: "0", y: "90%", height: "10%", width: "100%", fill: s3.slope > 0 ? upi++ % 2 == 0 ? "rgb(191,143,37)" : "rgb(175,132,33)" : downi++ % 2 == 0 ? "rgb(42,123,115)" : "rgb(50,142,134)" }), /* @__PURE__ */ y(SectionText, { id: s3.slope > 0 ? "uphill" : "downhill", w: s3.length / course.distance }))
      ), course.slopes.map((s3, i4) => {
        const nodes = [];
        let markedStart = false;
        if (s3.start != 0 && (i4 == 0 || s3.start != course.slopes[i4 - 1].start + course.slopes[i4 - 1].length)) {
          markedStart = true;
          nodes.push(/* @__PURE__ */ y(DistanceMarker, { d: s3.start, x: s3.start / course.distance * 100, y: 42, up: i4 > 0 && s3.start - (course.slopes[i4 - 1].start + course.slopes[i4 - 1].length) < course.distance * 0.05 }));
        }
        if (s3.start + s3.length != course.distance) {
          nodes.push(/* @__PURE__ */ y(DistanceMarker, { d: s3.start + s3.length, x: (s3.start + s3.length) / course.distance * 100, y: 42, up: markedStart && s3.length < course.distance * 0.05 }));
        }
        return /* @__PURE__ */ y(k, null, nodes);
      }), /* @__PURE__ */ y("svg", { class: "sectionsBg", x: "0", y: "46%", width: "100%", height: "18%" }, /* @__PURE__ */ y("rect", { x: "0", y: "0", height: "90%", width: "100%", fill: "rgb(232,232,232)" }), /* @__PURE__ */ y("rect", { x: "0", y: "90%", height: "10%", width: "100%", fill: "rgb(139,139,139)" })), course.straights.map(
        (s3, i4) => /* @__PURE__ */ y("svg", { class: "straight", x: `${s3.start / course.distance * 100}%`, y: "46%", width: `${(s3.end - s3.start) / course.distance * 100}%`, height: "18%" }, /* @__PURE__ */ y("rect", { x: "0", y: "0", height: "90%", width: "100%", fill: i4 % 2 == 0 ? "rgb(209,235,255)" : "rgb(185,224,255)" }), /* @__PURE__ */ y("rect", { x: "0", y: "90%", height: "10%", width: "100%", fill: i4 % 2 == 0 ? "rgb(23,154,255)" : "rgb(9,146,254)" }), /* @__PURE__ */ y(SectionText, { id: "straight", w: (s3.end - s3.start) / course.distance * 100 }))
      ), course.corners.map(
        (c3, i4) => /* @__PURE__ */ y("svg", { class: "corner", x: `${c3.start / course.distance * 100}%`, y: "46%", width: `${c3.length / course.distance * 100}%`, height: "18%" }, /* @__PURE__ */ y("rect", { x: "0", y: "0", height: "90%", width: "100%", fill: i4 % 2 == 0 ? "rgb(255,216,185)" : "rgb(254,228,209)" }), /* @__PURE__ */ y("rect", { x: "0", y: "90%", height: "10%", width: "100%", fill: i4 % 2 == 0 ? "rgb(254,117,9)" : "rgb(250,121,27)" }), /* @__PURE__ */ y(SectionText, { id: "corner", w: c3.length / course.distance, fields: { n: 4 - (course.corners.length - i4 - 1) % 4 } }))
      ), sections.map((s3, i4) => {
        const nodes = [];
        let markedStart = false;
        if (s3.start != 0 && (i4 == 0 || s3.start != sections[i4 - 1].end)) {
          markedStart = true;
          nodes.push(/* @__PURE__ */ y(DistanceMarker, { d: s3.start, x: s3.start / course.distance * 100, y: 60, up: i4 > 0 && s3.start - sections[i4 - 1].end < course.distance * 0.05 }));
        }
        if (s3.end != course.distance) {
          nodes.push(/* @__PURE__ */ y(DistanceMarker, { d: s3.end, x: s3.end / course.distance * 100, y: 60, up: markedStart && s3.length < course.distance * 0.05 }));
        }
        return /* @__PURE__ */ y(k, null, nodes);
      }), /* @__PURE__ */ y("svg", { class: "phase phase0", x: "0", y: "64%", width: "16.67%", height: "18%" }, /* @__PURE__ */ y("rect", { x: "0", y: "0", height: "90%", width: "100%", fill: "rgb(0,154,111)" }), " ", /* @__PURE__ */ y("rect", { x: "0", y: "90%", height: "10%", width: "100%", fill: "rgb(0,92,66)" }), " ", /* @__PURE__ */ y(SectionText, { id: "phase0", w: 0.1667 })), /* @__PURE__ */ y("svg", { class: "phase phase1", x: "16.67%", y: "64%", width: "50%", height: "18%" }, /* @__PURE__ */ y("rect", { x: "0", y: "0", height: "90%", width: "100%", fill: "rgb(242,233,103)" }), " ", /* @__PURE__ */ y("rect", { x: "0", y: "90%", height: "10%", width: "100%", fill: "rgb(190,179,16)" }), " ", /* @__PURE__ */ y(SectionText, { id: "phase1", w: 0.5 })), /* @__PURE__ */ y("svg", { class: "phase phase2", x: "66.67%", y: "64%", width: "16.67%", height: "18%" }, /* @__PURE__ */ y("rect", { x: "0", y: "0", height: "90%", width: "100%", fill: "rgb(209,134,175)" }), " ", /* @__PURE__ */ y("rect", { x: "0", y: "90%", height: "10%", width: "100%", fill: "rgb(149,56,107)" }), " ", /* @__PURE__ */ y(SectionText, { id: "phase2", w: 0.1667 })), /* @__PURE__ */ y("svg", { class: "phase phase3", x: "83.33%", y: "64%", width: "16.67%", height: "18%" }, /* @__PURE__ */ y("rect", { x: "0", y: "0", height: "90%", width: "100%", fill: "rgb(199,109,159)" }), " ", /* @__PURE__ */ y("rect", { x: "0", y: "90%", height: "10%", width: "100%", fill: "rgb(133,51,96)" }), " ", /* @__PURE__ */ y(SectionText, { id: "phase3", w: 0.1667 })), /* @__PURE__ */ y(DistanceMarker, { d: phase1Start, x: "16.67", y: 78 }), /* @__PURE__ */ y(DistanceMarker, { d: phase2Start, x: "66.67", y: 78 }), /* @__PURE__ */ y(DistanceMarker, { d: phase3Start, x: "83.33", y: 78 }), /* @__PURE__ */ y("rect", { x: "0", y: "82%", height: "18%", width: "100%", fill: "rgb(228,235,240)" }), Array.from({ length: 25 }, (_, i4) => i4).map((i4) => /* @__PURE__ */ y("line", { x1: `${i4 / 24 * 100}%`, y1: "96%", x2: `${i4 / 24 * 100}%`, y2: "100%", stroke: "rgb(107,145,173)", "stroke-width": i4 == 0 || i4 == 24 ? "4" : "2" })), Array.from({ length: 24 }, (_, i4) => i4 + 1).map((i4) => /* @__PURE__ */ y("text", { x: `${(1 / 48 + (i4 - 1) / 24) * 100}%`, y: "91%", "font-size": "10px", "text-anchor": "middle", "dominant-baseline": "central", fill: "rgb(107,145,173)" }, i4)), /* @__PURE__ */ y("rect", { x: "0", y: "98.2%", height: "1.8%", width: "100%", fill: "rgb(107,145,173)" }));
    }, [props.courseid]);
    return /* @__PURE__ */ y(IntlProvider, { definition: STRINGS_ja }, /* @__PURE__ */ y("div", { class: "racetrackWrapper", style: `width:${props.width}px` }, trackNameHeader, /* @__PURE__ */ y("svg", { version: "1.1", width: props.width, height: props.height, xmlns: "http://www.w3.org/2000/svg", class: "racetrackView", "data-courseid": props.courseid, onMouseMove: doMouseMove, onMouseLeave: doMouseLeave }, almostEverything, props.regions && props.regions.map((desc) => {
      if (desc.type == 0 /* Immediate */ && desc.regions.length > 0) {
        const x2 = desc.regions[0].start / course.distance * 100;
        return /* @__PURE__ */ y("line", { x1: `${x2}%`, y1: "0", x2: `${x2}%`, y2: "100%", stroke: "rgb(205,11,11)" });
      } else {
        return /* @__PURE__ */ y(k, null, desc.regions.map(
          (r3) => /* @__PURE__ */ y("rect", { x: `${r3.start / course.distance * 100}%`, y: "0", width: `${(r3.end - r3.start) / course.distance * 100}%`, height: "100%", fill: "rgba(247,115,115,0.3)", stroke: "rgb(205,11,11)" })
        ));
      }
    }), /* @__PURE__ */ y("line", { class: "mouseoverLine", x1: "-5", y1: "0", x2: "-5", y2: "100%", stroke: "rgb(121,64,22)", "stroke-width": "2" }), /* @__PURE__ */ y("text", { class: "mouseoverText", x: "-5", y: "-5", fill: "rgb(121,64,22)" }))));
  }

  // ../../skilltool/data/skillnames.json
  var skillnames_default = { "1000011": ["\u30AB\u30FC\u30CB\u30D0\u30EB\u30DC\u30FC\u30CA\u30B9", "Carnival Bonus (obsolete)"], "1000012": ["\u30AB\u30FC\u30CB\u30D0\u30EB\u30DC\u30FC\u30CA\u30B9", "Carnival Bonus (obsolete)"], "1000013": ["\u30AB\u30FC\u30CB\u30D0\u30EB\u30DC\u30FC\u30CA\u30B9", "Carnival Bonus (obsolete)"], "1000014": ["\u30AB\u30FC\u30CB\u30D0\u30EB\u30DC\u30FC\u30CA\u30B9", "Carnival Bonus (obsolete)"], "1000015": ["\u30AB\u30FC\u30CB\u30D0\u30EB\u30DC\u30FC\u30CA\u30B9", "Carnival Bonus"], "100011": ["\u30B7\u30E5\u30FC\u30C6\u30A3\u30F3\u30B0\u30B9\u30BF\u30FC", "Shooting Star"], "100021": ["\u5148\u982D\u306E\u666F\u8272\u306F\u8B72\u3089\u306A\u3044\u2026\uFF01", "I'm Not Giving up the Lead!"], "100031": ["\u7A76\u6975\u30C6\u30A4\u30AA\u30FC\u30B9\u30C6\u30C3\u30D7", "Ultimate Teio Step"], "100041": ["\u7D05\u7114\u30AE\u30A2/LP1211-M", "Red Flame Gear/LP1211-M"], "100051": ["\u714C\u661F\u306E\u30F4\u30A9\u30FC\u30C9\u30F4\u30A3\u30EB", "Glittering Star Vaudeville"], "100061": ["\u52DD\u5229\u306E\u9F13\u52D5", "The Beat of Victory"], "100071": ["\u4E0D\u6C88\u8266\u3001\u629C\u9328\u30A9\u30C3\uFF01", "Unsinkable Ship, Anchored!"], "100081": ["\u30AB\u30C3\u30C6\u30A3\u30F3\u30B0\xD7DRIVE\uFF01", "Cutting \xD7 DRIVE!"], "100091": ["\u30D6\u30EA\u30EA\u30A2\u30F3\u30C8\u30FB\u30EC\u30C3\u30C9\u30A8\u30FC\u30B9", "Brilliant Red Ace"], "100101": ["\u30F4\u30A3\u30AF\u30C8\u30EA\u30FC\u30B7\u30E7\u30C3\u30C8\uFF01", "Victory Shot!"], "100101111": ["\u306F\u3089\u307A\u3053\u5927\u5C06", "Hungry Commander"], "100101211": ["\u5922\u53F6\u3048\u308B\u672B\u811A", "Dream-fulfilling Sprint"], "100102111": ["\u771F\u590F\u306E\u601D\u3044\u5207\u308A", "Midsummer Resolution"], "100102211": ["\u771F\u590F\u306E\u7DCF\u5927\u5C06", "Midsummer Commander"], "100103111": ["\u6012\u6D9B\u306E\u51FA\u9663", "Tempestuous Attack"], "100103211": ["\u65E5\u4E4B\u672C\u4E00\u306E\u30C9\u6839\u6027", "Guts of the Rising Sun"], "100111": ["\u7CBE\u795E\u4E00\u5230\u4F55\u4E8B\u304B\u6210\u3089\u3056\u3089\u3093", "Where There's a Will, There's a Way"], "100121": ["\u30BF\u30A4\u30DE\u30F3\uFF01\u30C7\u30C3\u30C9\u30D2\u30FC\u30C8\uFF01", "One-On-One! Dead Heat!"], "100131": ["\u8CB4\u9855\u306E\u4F7F\u547D\u3092\u679C\u305F\u3059\u3079\u304F", "Fulfilling Your Noble Duty"], "100141": ["\u30D7\u30E9\u30F3\u30C1\u30E3\u2606\u30AC\u30CA\u30C9\u30FC\u30EB", "Plancha \u2606 Ganador"], "100151": ["\u30F4\u30A3\u30C3\u30C8\u30FC\u30EA\u30A2\u306B\u6367\u3050\u821E\u8E0F", "Dance for Vittoria"], "100161": ["Shadow Break", "Shadow Break"], "100171": ["\u6C5D\u3001\u7687\u5E1D\u306E\u795E\u5A01\u3092\u898B\u3088", "Thou, Witness the Heavenly Might of the Emperor"], "100181": ["\u30D6\u30EC\u30A4\u30BA\u30FB\u30AA\u30D6\u30FB\u30D7\u30E9\u30A4\u30C9", "Blaze of Pride"], "100191": ["\u5C0A\u307F\u2606\uFF97\uFF7D\uFF84\uFF7D\uFF8A\uFF9F\u2014(\uFF9F\u2200\uFF9F)\u2014\uFF84!", "Kyuute\u2606Last SpuU(\uFF9F\u2200\uFF9F)Uurt!"], "100201": ["\u30A2\u30F3\u30B0\u30EA\u30F3\u30B0\xD7\u30B9\u30AD\u30FC\u30DF\u30F3\u30B0", "Angling\xD7Scheming"], "100201111": ["\u6700\u5927\u96C6\u4E2D", "Perfect Concentration"], "100201211": ["\u7570\u6B21\u5143\u306E\u9003\u4EA1\u8005", "Dimensional Runaway"], "100202111": ["\u7460\u7483\u8272\u30A8\u30B9\u30B1\u30A4\u30D7", "Lapis Lazuli Escape"], "100202211": ["\u84BC\u5929\u3092\u99C6\u3051\u308B\u30E9\u30FC\u30D5\u30A1\u30AC", "Sky-Striding R\xE1faga"], "100211": ["\u767D\u3044\u7A32\u59BB\u3001\u898B\u305B\u305F\u308B\u3067\uFF01", "Imma Show You White Lightning!"], "100221": ["Fairy tale", "Fairy Tale"], "100231": ["\u2234win Q.E.D.", "\u2234win Q.E.D."], "100241": ["\u3072\u3089\u3081\u304D\u2606\u30E9\u30F3\u30C7\u30A3\u30F3\u30B0", "Inspiration \u2606 Landing"], "100251": ["\u30A2\u30CA\u30BF\u30F2\u30FB\u30AA\u30A4\u30AB\u30B1\u30C6", "Chasing After You"], "100261": ["G00 1st.F\u221E;", "G00 1st.F\u221E;"], "100271": ["\u30EC\u30C3\u30C4\u30FB\u30A2\u30CA\u30DC\u30EA\u30C3\u30AF\uFF01", "Let's Anabolic!"], "100281": ["I'M\u2606FULL\u2606SPEED!!", "I'M\u2606FULL\u2606SPEED!!"], "100291": ["\u3086\u304D\u3042\u304B\u308A\u3001\u304A\u3044\u304B\u3051\u3066", "Chasing the Snowlight"], "100301": ["\u30D6\u30EB\u30FC\u30ED\u30FC\u30BA\u30C1\u30A7\u30A4\u30B5\u30FC", "Blue Rose Chaser"], "100301111": ["\u5929\u624D\u7684\u6280\u5DE7", "Genius Technique"], "100301211": ["\u5E1D\u738B\u30B9\u30C6\u30C3\u30D7", "Teio Step"], "100302111": ["\u30EC\u30FC\u30B9\u306E\u5929\u624D", "Racing Genius"], "100302211": ["\u5730\u5E73\u306E\u5F7C\u65B9\u307E\u3067", "Beyond the Horizon"], "100303111": ["\u5929\u8CE6\u306E\u8EAB\u3054\u306A\u3057", ""], "100303211": ["\u76E4\u697D\u904A\u5B09", ""], "100311": ["\u30C1\u30E3\u30FC\u30B8\u5B8C\u4E86\uFF01\u5168\u901F\u524D\u9032\uFF01", "Charge Complete! Full Speed Ahead!"], "100321": ["U=ma2", "U=ma2"], "100331": ["\u30C7\u30A3\u30AA\u30B9\u30AF\u30ED\u30A4\u306E\u6D41\u661F", "Meteor of Dioscuri"], "100341": ["\u5FEB\u8D70\u304B\u306A\u3001\u5FEB\u8D70\u304B\u306A\uFF01", "Fast Running, Fast Running!"], "100351": ["\u52DD\u5229\u306E\u30C1\u30B1\u30C3\u30C8\u3092\u3001\u541B\u306B\u30C3\uFF01", "The Ticket to Victory, for You!"], "100361": ["trigger:BEAT", "trigger:BEAT"], "100371": ["Schwarzes Schwert", "Schwarzes Schwert"], "100381": ["#LookatCurren", "#LookatCurren"], "100391": ["\u59EB\u305F\u308B\u3082\u306E\u3001\u52DD\u5229\u3092\u3053\u306E\u624B\u306B", "Victory Befitting a Princess"], "100401": ["KEEP IT REAL.", "KEEP IT REAL."], "100401111": ["\u304B\u3063\u98DB\u3070\u3059\u308F\u3088\uFF01", "Blasting Off!"], "100401211": ["\u7D05\u84EE\u306E\u30AA\u30FC\u30D0\u30FC\u30EC\u30D6", "Crimson Over-revving"], "100402111": ["\u30C9\u30AD\u30C3\u2606\u3058\u3083\u3058\u3083\u30A6\u30DE\u5A18\uFF01", "Dazzling\u2606Wild Girl"], "100402211": ["\u304A\u7ACB\u3061\u53F0\u306E\u652F\u914D\u8005", "Ruler of the Stage"], "100411": ["\u512A\u7B49\u751F\xD7\u30D0\u30AF\u30B7\u30F3\uFF1D\u5927\u52DD\u5229\u30C3", "Honor Student x Bakushin = Big Victory"], "100421": ["\u300EI'm possible\u300F", "\u300EI'm Possible\u300F"], "100431": ["Ding Dong Boo", "Ding Dong Boo"], "100441": ["\u3044\u305F\u3060\u304D\u2606\u30B9\u30C8\u30EC\u30EA\u30C1\u30A2\uFF01", "You're Mine \u2606 Strelitzia"], "100451": ["\u30D4\u30E5\u30EA\u30C6\u30A3\u30AA\u30D6\u30CF\u30FC\u30C8", "Purity of Heart"], "100461": ["\u30AD\u30E9\u30AD\u30E9\u2606STARDOM", "Sparkling\u2606STARDOM"], "100471": ["\u63B2\u3052\u3088\u3001\u5DF1\u304C\u9B42\u306E\u5263\u3092\uFF01", "Raise Thy Soul's Sword!"], "100481": ["YEAH\u2606VIVID TIME!", "YEAH\u2606VIVID TIME!"], "100491": ["\u5263\u30F6\u5CF0\u3088\u308A\u3001\u72C2\u6C17\u306B\u55E4\u3048", "Laugh in the Face of Danger"], "100501": ["Nemesis", "Nemesis"], "100501111": ["\u8F1D\u304F\u30C8\u30C3\u30D7\u30B9\u30BF\u30A1", "Sparkling Top Star"], "100501211": ["\u30A8\u30F3\u30BF\u30FC\u30C6\u30A4\u30CA\u30FC", "Entertainer"], "100502111": ["\u5727\u5DFB\u306E\u30C8\u30EA\u30C3\u30AF", "Stunning Trick"], "100502211": ["\u714C\u3081\u304D\u306E\u30C8\u30C3\u30D7\u30B9\u30BF\u30A1", "Glittering Top Star"], "100511": ["\u3064\u307C\u307F\u3001\u307B\u3053\u308D\u3076\u6642", "When the Flower Bud Opens"], "100521": ["\u30EF\u30AF\u30EF\u30AF\u30AF\u30E9\u30A4\u30DE\u30C3\u30AF\u30B9", "Exciting Climax"], "100531": ["\u71B1\u8840\uFF01\uFF01\u98A8\u7D00\u30A2\u30BF\u30C3\u30AF", "Hot-Blooded Disciplinary Attack!"], "100551": ["\u4E07\u5F69\u2606\u30DE\u30FC\u30D9\u30E9\u30B9\u2605\u4E16\u754C", "Colorful\u2606Marvelous\u2605World"], "100561": ["\u6765\u307E\u3059\u6765\u3066\u307E\u3059\u6765\u3055\u305B\u307E\u3059\uFF01", "Luck Is Coming"], "100571": ["\u53D9\u60C5\u3001\u65C5\u8DEF\u306E\u679C\u3066\u306B", "Lyricism at Journey's End"], "100581": ["I Never Goof Up!", "I Never Goof Up!"], "100591": ["\u5F7C\u65B9\u3001\u305D\u306E\u5148\u3078\u2026", "Beyond the Other Side"], "100601": ["\u304D\u3063\u3068\u305D\u306E\u5148\u3078\u2026\uFF01", "Surely, Beyond...!"], "100601111": ["\u7B20\u677E\u306E\u98DF\u3044\u3057\u3093\u574A", "Glutton of Kasamatsu"], "100601121": ["\u98E2\u3048\u305F\u602A\u7269", ""], "100601211": ["\u602A\u7269\u7684\u30B3\u30FC\u30CA\u30EA\u30F3\u30B0", "Monstrous Cornering"], "100602111": ["\u30C9\u30AB\u98DF\u3044\u990A\u751F", "Gluttonous Regimen"], "100602211": ["\u30AF\u30EA\u30B9\u30DE\u30B9\u306E\u5947\u8DE1\u4F53\u9A13", "First-hand Christmas Miracle"], "100611": ["Pride of KING", "Pride of KING"], "100621": ["\u3069\u3093\u3063\u3001\u30D1\u30C3\u3001\u3080\u3093\u3063", "Bang, Bam, Mun"], "100641": ["\u3076\u3063\u3061\u304E\u308A\u30ED\u30FC\u30C9", "The Breakaway Road"], "100651": ["\u30A2\u30B2\u3066\u30A2\u30B2\u3066\u3077\u3061\u3087\u3078\u3093\u3056\uFF01", "Everybody Put Your Hands Up!"], "100661": ["\u30A8\u30F3\u30B8\u30F3\u5168\u958B\uFF01\u5927\u5674\u5C04\uFF01", "Engine, Full Throttle! Turbo Time!"], "100671": ["\u6666\u51A5\u3092\u7167\u3089\u305B\u6C38\u9060\u306E\u8000\u304D", "Brilliance Illuminating the Darkness"], "100681": ["\u52DD\u3061\u9B28\u30EF\u30C3\u30B7\u30E7\u30A4\uFF01", "Shout of Victory"], "100691": ["\u61A7\u308C\u306F\u685C\u3092\u8D8A\u3048\u308B\uFF01", "Longing Beyond the Sakura"], "100701": ["\u30BB\u30A4\u30EA\u30AA\u30B9", "Seirios"], "100701111": ["564\u30A2\u30A4\u30BA\u3067\u8996\u754C\u30AF\u30C3\u30AD\u30EA\uFF01", "Clear View with 564 Eyes!"], "100701211": ["\u30A8\u30AF\u30B9\u30C8\u30EA\u30FC\u30E0\u4E0B\u6821\u8853", "Extreme After-School Technique"], "100702111": ["\u795E\u79D8\u4F53\u9A13\uFF01\u30B4\u30EB\u30B7\u30EF\u30FC\u30D7", "Mysterious Gold Ship Warp!"], "100702211": ["\u30A4\u30AB\u63DA\u3052\u3001\u3044\u304B\u304C\u3067\u3059\u304B\uFF01\uFF1F", "Squid for a Quid!"], "100703111": ["\u62BC\u3057\u5BC4\u305B\u308B\u30B8\u30E5\u30C6\u30FC\u30E0", `Flood of "Je t'aime"`], "100703211": ["\u8352\u78EF\u597D\u307F\u306E\u9EC4\u91D1\u8239", "Golden Ship of the Rough Seas"], "10071": ["\u6CE2\u4E71\u6CE8\u610F\u7832\uFF01", "Warning Shot!"], "100711": ["\u4E00\u671F\u306E\u5922\u3001\u5239\u90A3\u306E\u98DB\u7FD4", "A Lifetime's Dream, A Moment's Flight"], "100721": ["\u70C8\u706B\u7E5A\u4E71\u3001\u7121\u6575\u4E4B\u821E", "Dazzling Fire, Invincible Dance"], "100741": ["\u9E97\u3057\u304D\u82B1\u4FE1\u98A8", "Lovely Spring Wind"], "100761": ["\u82B1\u958B\u304D\u3001\u4E16\u754C", "Blossoming World"], "100771": ["Road to Glory", "Road to Glory"], "100781": ["\u98A8\u5149\u308B", "A Spring in My Step"], "100801111": ["\u30B9\u30AD\u30C3\u30C8\u30EB\u30D6\u30EC\u30A4\u30AF", "Flasks Up"], "100801211": ["\u629C\u7FA4\u306E\u8C6A\u811A", "Unrivaled Strides"], "100802111": ["\u3076\u3063\u5DEE\u3057\u3066\u3084\u308B\u305C\uFF01", "I'll Leave You in the Dust!"], "100802211": ["\u6700\u901F\u306E\u30C8\u30C3\u30D7\u30AE\u30A2", "Fastest Top Gear"], "10081": ["\u30A2\u30AF\u30BB\u30EBX", "Accelerator X"], "100831": ["Mission: Triumph", "Mission: Triumph"], "100841": ["\u9739\u9742\u306E\u30A2\u30A6\u30D5\u30D8\u30FC\u30D9\u30F3", "Thunderstorm Sublation"], "100851": ["\u81F3\u4E0A\u3067\u3042\u308C", "Reign Supreme"], "100861": ["\u611B\u3068\u7194\u3051\u3088\u305F\u3060\u7194\u3051\u3088", "Melt in Love's Embrace"], "100871": ["Silent letter", "Silent Letter"], "100901111": ["\u30D1\u30FC\u30D5\u30A7\u30AF\u30C8\u30C1\u30E5\u30FC\u30F3", "Perfect Tune"], "100901211": ["\u30A2\u30BF\u30B7\u304C\u52DD\u3064\u3093\u3060\u304B\u3089\uFF01", "This is my win!"], "100902111": ["\u304A\u3066\u3093\u3070\u5973\u738B", "Tomboy Queen"], "100902211": ["\u958B\u304B\u308C\u308B\u5922\u306E\u6249", "Door of Dreams"], "10091": ["\u30EC\u30C3\u30C9\u30A8\u30FC\u30B9", "Red Ace"], "100931": ["\u5E78\u305B\u306E\u9752\u3044\u5149", "Blue Ray of Happiness"], "100981": ["\u7406\u904B\u958B\u304B\u308A\u3066\u7FD4\u308B", "Luck Comes to the Prepared"], "100991": ["\u304B\u304C\u3084\u3051\u2606\u3068\u307E\u3053\u307E\u3044", "Shine \u2606 Tomakomai"], "101001": ["Never Say Never", "Never Say Never"], "101001111": ["\u72D9\u3044\u6483\u3061\u30C7\u30B9\uFF01", "Sharpshooting!"], "101001211": ["Frontier Spirit", "Frontier Spirit"], "101002111": ["\u30A2\u30C9\u30D9\u30F3\u30C1\u30E3\u30FC\u306E\u5148\u5C0E\u8005", "Adventure Leader"], "101002211": ["\u771F\u5263\u52DD\u8CA0\u30C7\u30B9\uFF01", "No Holds Barred!"], "101041": ["\u6681\u306E\u5FA1\u65D7\u300E\u845B\u57CE\u6804\u4E3B\u300F\uFF01", "Flag of Dawn: Katsuragi Ace"], "101051": ["\u30A2\u30C9\u30FB\u30A2\u30B9\u30C8\u30E9", "Ad Astra"], "101061": ["Bang\u2606\u30DF\u30E9\u30AF\u308B\u308F\u305B\uFF01", "Bang\u2606Miracle Maker!"], "101101111": ["\u5927\u548C\u64AB\u5B50", "Yamato Nadeshiko"], "101101211": ["\u4E0D\u9000\u8EE2\u306E\u610F\u601D", "Conviction"], "101102111": ["\u30AD\u30E5\u30A2\u30EA\u30FC\u30D2\u30FC\u30EB", "Curely Heal"], "101102211": ["\u52C7\u6C17\u306E\u9B54\u6CD5", "Conjuring Courage"], "10111": ["\u7CBE\u795E\u4E00\u5230", "Desire to Win"], "101201111": ["\u52DD\u5229\u3078\u306E\u5486\u54EE", "Victory Roar"], "101201211": ["\u6012\u6FE4\u306E\u30DD\u30ED\u30ED\u30C3\u30AB", "Tempestuous Pororoca"], "101202111": ["\u71B1\u70C8\u30A8\u30F3\u30B2\u30FC\u30B8\uFF01", "Passionate Engagement!"], "101202211": ["\u95D8\u9B42\u5165\u5200\uFF01", "Fiery Cake-Cutting!"], "101301111": ["\u30E1\u30B8\u30ED\u306E\u5FC3\u5F97", "Mejiro's Wisdom"], "101301211": ["\u540D\u512A\u306E\u4F59\u88D5", "Star's Composure"], "101302111": ["\u30A2\u30AF\u30C6\u30A3\u30D6\u30EC\u30B9\u30C8", "Active Rest"], "101302211": ["\u7A7A\u306E\u679C\u3066\u307E\u3067", "End of Sky"], "101303111": ["\u590F\u306E\u540D\u512A", "Summer Star"], "101303211": ["\u4E00\u610F\u5C02\u5FC3\u306B\u30EA\u30D5\u30EC\u30C3\u30B7\u30E5\uFF01", "Wholehearted Refresher"], "101401111": ["\u9DF9\u30CE\u76EE", "Falcon Eyes"], "101401211": ["\u4F59\u88D5\u306E\u30D1\u30D5\u30A9\u30FC\u30DE\u30F3\u30B9", "Flawless Performance"], "101402111": ["\u8C6A\u52C7\u7121\u53CC", "Unparalleled Bravery"], "101402211": ["\u6607\u308A\u30B3\u30F3\u30C9\u30EB", "Rising Condor"], "10141": ["\u71B1\u8840\u2606\u30A2\u30DF\u30FC\u30B4", "Hot Blooded \u2606 Amigo"], "101501111": ["\u964D\u81E8\uFF01\u4E16\u7D00\u672B\u8987\u738B\uFF01", "Centurial Overlord Descends!"], "101501211": ["\u6B4C\u5287\u738B\u306E\u884C\u9032", "March of the Opera King"], "101502111": ["\u5186\u821E\u66F2\u306E\u30DE\u30A8\u30B9\u30C8\u30ED", "Waltz Maestro"], "101502211": ["\u30DC\u30AF\u306F\u9045\u308C\u305A\u306B\u3084\u3063\u3066\u304F\u308B\uFF01", "I Won't Fall Behind!"], "101601111": ["\u4E00\u5200\u4E21\u65AD", "Decisive Cleave"], "101601211": ["\u9913\u72FC\u7259", "Hungry Wolf's Fang"], "101602111": ["BLAZING WOLF", "BLAZING WOLF"], "101602211": ["\u6E07\u671B\u3059\u308B\u602A\u7269", "Craving Monster"], "101701111": ["\u7687\u5E1D\u306E\u773C\u5DEE\u3057", "Emperor's Gaze"], "101701211": ["\u93A7\u8896\u4E00\u89E6", "Hands-Down Victory"], "101702111": ["\u795E\u8272\u81EA\u82E5", "Perfect Composure"], "101702211": ["\u98A8\u971C\u9AD8\u6F54", "Noble Hardships"], "101801111": ["\u5973\u5E1D\u306E\u6A29\u8B00", "The Empress' Ploy"], "101801211": ["\u6C34\u6708\u93E1\u82B1", "Moonlit Water, Mirror Flower"], "101802111": ["\u5973\u5E1D\u306E\u77DC\u6301", "The Empress' Pride"], "101802211": ["\u4E0A\u5F26\u306E\u30BD\u30E0\u30EA\u30A8\u30FC\u30EB", "Crescent Moon Sommelier"], "10181": ["\u30A8\u30F3\u30D7\u30EC\u30B9\u30FB\u30D7\u30E9\u30A4\u30C9", "Empress\u30FBPride"], "101901111": ["\u9650\u754C\u30A6\u30DE\u30DE\u30CB\u30A2", "Uma Mania Max"], "101901211": ["\u6700\u524D\u5217\u306F\u8B72\u308C\u306A\u3044\uFF01", "The Front Row Is Non-Negotiable!"], "101902111": ["\u8D85\u7279\u6025\u5165\u7A3F\uFF01", "Super Express Submission!"], "101902211": ["\u5C0A\u307F\u3092\u6C42\u3081\u3066\u3075\u3063\u304B\u30FC\u30FC\u3064\uFF01", "Revived For Moe!"], "102001111": ["\u30D5\u30A1\u30B9\u30C8\u30EA\u30C8\u30EA\u30FC\u30D6", "Fast Retrieve"], "102001121": ["\u5927\u7269\u72D9\u3044\u306E\u5FC3\u5F97", "Angler's Wisdom"], "102001211": ["\u8131\u51FA\u5927\u4F5C\u6226", "Operation Escape"], "102002111": ["\u9003\u3052\u308D\uFF5E\u266A", "Run~Away~\u266A"], "102002211": ["\u30EC\u30B3\u30FC\u30C9\u30E9\u30F3\u30CA\u30FC", "Record Runner"], "102101111": ["\u96F7\u9A30\u96F2\u5954", "Stormstrider"], "102101211": ["\u5C3B\u5C3E\u306E\u6709\u9802\u5929", "Tail of Ecstasy"], "102102111": ["\u5148\u9054\u306B\u732E\u3050\u7948\u308A\u306E\u980C", "Ode to Our Predecessors"], "102102211": ["\u3055\u3042\u3001\u30A6\u30C1\u3068\u3084\u308D\u3046\u3084\uFF01", "'ight, let's get em!"], "102201111": ["\u30ED\u30A4\u30E4\u30EB\u30B9\u30BF\u30FC", "Royal Star"], "102201211": ["\u5929\u7A7A\u843D\u3068\u3057", "Sky Drop"], "102202111": ["\u601D\u3044\u51FA\u3092\u529B\u306B\u5909\u3048\u3066", "Memories Become Power"], "102202211": ["\u30E2\u30EA\u30AC\u30F3\u306E\u77DB\u621F", "Morr\xEDgan's Spear"], "102301111": ["\u60F3\u5B9A\u901A\u308A\u3001\u4F59\u88D5\u5341\u5206", "Exactly As Planned"], "102301211": ["\u8A08\u753B\u7684\u30AF\u30FC\u30EB\u30C0\u30A6\u30F3", "Scheduled Cooldown"], "102302111": ["VIP\u306A\u5F8C\u308D\u59FF", "VIP Back View"], "102302211": ["\u5168\u529B\u30B5\u30F3\u30BF\u30AF\u30ED\u30FC\u30B9", "Full Power Santa Claus"], "102401111": ["You copy?", "You Copy?"], "102401211": ["I copy!", "I Copy!"], "102402111": ["\u7D14\u767D\u306E\u3055\u3055\u3084\u304D", "Snow White Whisper"], "102402211": ["\u30D0\u30EC\u30EB\u30ED\u30FC\u30EB", "Barrel Roll"], "10241": ["\u52DD\u5229\u306E\u30AD\u30C3\u30B9\u2606", "Victory Kiss \u2606"], "102501111": ["\u30B3\u30FC\u30D2\u30FC\u30D6\u30EC\u30A4\u30AF", "Coffee Break"], "102501211": ["\u30AA\u30A4\u30C6\u30A4\u30AB\u30CA\u30A4\u30C7", "Don't Leave Me"], "102601111": ["\u30AF\u30ED\u30C3\u30AF\u30A2\u30C3\u30D7", "Overclocking"], "102601211": ["\u56F0\u96E3\u3092\u4E57\u308A\u8D8A\u3048\u308B\u8005", "Overcomer of Difficulties"], "102602111": ["\u5B8C\u74A7\u306A\u30A8\u30E9\u30FC\u5BFE\u51E6\u8853", "Perfect Bugfixing Technique"], "102602211": ["\u30D1\u30FC\u30D5\u30A7\u30AF\u30C8\u30D6\u30FC\u30C8", "Perfect Boot"], "102701111": ["\u30DE\u30C3\u30B9\u30EB\u30A2\u30F3\u30BB\u30E0", "Muscle Anthem"], "102701211": ["\u30E9\u30A4\u30B8\u30F3\u30B0\u30D0\u30EB\u30AF\u30A2\u30C3\u30D7", "Rising Bulk Up"], "102702111": ["\u5922\u53F6\u3048\u308B\u6C7A\u610F\u3092\u6388\u3051\u307E\u3057\u3087\u3046", "Granting Dream-fulfilling Determination"], "102702211": ["\u81F3\u9AD8\u306E\u52DD\u5229\u3092\u53EC\u3057\u4E0A\u304C\u308C", "Serving Victory Supreme"], "10271": ["\u71C3\u3048\u308D\u7B4B\u8089\uFF01", "Burning Muscles!"], "102801111": ["\u4E0B\u3054\u3057\u3089\u3048\u4E07\u5168\uFF01", "Flawless Mise en Place!"], "102801211": ["\u30DC\u30FC\u30CE\u306A\u5065\u5556\u5BB6", "Bono-style Gluttony"], "102901111": ["\u61A7\u308C\u306E\u30B7\u30C1\u30FC\u30AC\u30FC\u30EB", "Admired City Girl"], "102901211": ["\u96EA\u56FD\u4ED5\u8FBC\u307F\u306E\u76F4\u6ED1\u964D", "Seasoned Sledder's Swoop"], "103001111": ["\u6C7A\u610F\u306E\u30D2\u30FC\u30ED\u30FC", "Determined Hero"], "103001211": ["\u9ED2\u306E\u523A\u5BA2", "Black Assassin"], "103002111": ["\u304C\u3093\u3070\u308B\u305E\u30FC\u2026\u304A\u30FC\uFF01", "I'll Do My Beeest!"], "103002211": ["\u30C8\u30EA\u30C3\u30AF&\u30C8\u30EA\u30FC\u30C8", "Trick & Treat"], "103101111": ["\u3058\u3083\u3058\u3083\u30A6\u30DE\u304A\u59C9\u3061\u3083\u3093", "Wild Onee-chan"], "103101211": ["\u8352\u3076\u308B\u98A8\u795E", "Raging Wind God"], "103102111": ["\u30AA\u30FC\u30C0\u30FC\u306F\u30D0\u30C3\u30C1\u30EA\uFF01", "Perfect Order!"], "103102211": ["\u83EF\u9E97\u306A\u30B5\u30FC\u30D6", "Brilliant Serving"], "103201111": ["\u53EF\u80FD\u6027\u306E\u5F92", "Pupil of Possibility"], "103201211": ["\u52B9\u7387\u7684\u4F11\u606F\u6CD5", "Efficient Recreation"], "103202111": ["\u30E9\u30D7\u30E9\u30B9\u306E\u60AA\u9B54", "Laplace's Demon"], "103202211": ["\u7729\u8000\u306E\u30EB\u30AF\u30B7\u30AA\u30F3", "Dazzling Luxon"], "10321": ["introduction\uFF1AMy body", "introduction\uFF1AMy body"], "103301111": ["\u9759\u304B\u306A\u8A93\u3044", "Silent Oath"], "103301211": ["\u5DF1\u8EAB\u7126\u304C\u3059\u307B\u3046\u304D\u661F", "Immolated Comet"], "103401111": ["\u706B\u6D88\u306E\u68AF\u5B50\u767B\u308A", "Firefighter's Hashigo-nori"], "103401211": ["\u719F\u7DF4\u306E\u7802\u5875\u4F7F\u3044", "Sandstorm Wielder"], "103401221": ["\u7C8B\u3067\u3044\u306A\u305B\u306A\u9054\u4EBA\u6280", ""], "103402111": ["\u6247\u30CE\u821E", "Fan Dance"], "103402211": ["\u5927\u898B\u5F97\u5207\u308A", "Dramatic Finale"], "103501111": ["\u305F\u3086\u307E\u306C\u52AA\u529B", "Tireless Effort"], "103501211": ["\u30A6\u30A4\u30CB\u30F3\u30B0\u30ED\u30FC\u30C9", "Winning Road"], "103502111": ["\u5343\u4E07\u30D0\u30EA\u30AD\uFF01\uFF01\uFF01", "Ten Million Horsepower!!!"], "103502211": ["\u304D\u3063\u3068\u98DB\u3079\u308B\uFF01", "You'll fly for sure!"], "10351": ["\u5168\u529BV\u30B5\u30A4\u30F3\u30C3\uFF01", "Full Power V Sign!"], "103601111": ["\u30A2\u30C3\u30D7\u30EA\u30D5\u30C6\u30A3\u30F3\u30B0", "Uplifting"], "103601211": ["Lose Myself", "Lose Myself"], "103602111": ["Gluttony's Grip", "Gluttony's Grip"], "103602211": ["\u5211\u82E6", "Torment"], "103701111": ["\u9583\u5149\u306E\u30DE\u30AE\u30A2", "Flash Magier"], "103701211": ["\u8A87\u308A\u3092\u61F8\u3051\u3066", "Betting My Pride"], "103702111": ["\u52DD\u5229\u306E\u30EC\u30B7\u30D4", "Recipe of Victory"], "103702121": ["\u4ED5\u8FBC\u307F\u306F\u5B8C\u74A7", "Perfect Preparation"], "103702211": ["\u9ED2\u3044\u9583\u5149", "Black Flash"], "103801111": ["#\u30AB\u30EF\u30A4\u30A4\u304B\u304F\u4E71\u266A", "#Cute Perturbation\u266A"], "103801211": ["#\u5922\u4E2D\u306B\u306A\u3063\u3061\u3083\u3048\u266A", "#Go Crazy\u266A"], "103802111": ["#\u30AB\u30EC\u30F3\u306B\u67D3\u307E\u3063\u3066\u307F\u308B\uFF1F", "#WannaGetCurren'd?"], "103802211": ["#\u30D3\u30E5\u30FC\u30C6\u30A3\u30FC\u30B9\u30D7\u30EA\u30F3\u30C8", "#Beauty Sprint"], "103901111": ["\u30CE\u30F3\u30B9\u30C8\u30C3\u30D7\u30D7\u30EA\u30F3\u30BB\u30B9", "Non-stop Princess"], "103901211": ["\u66B4\u308C\u9F8D", "Raging Dragon"], "103902111": ["\u30C8\u30C3\u30D7\u30FB\u30AA\u30D6\u30FB\u30B6\u30FB\u59EB\uFF01", ""], "103902211": ["\u7206\u8D70\u731B\u59EB\u2606\u6025\u8EE2\u76F4\u4E0B\uFF01\uFF01", ""], "104001111": ["\u5148\u898B\u306E\u660E", "Prescience"], "104001211": ["\u30E9\u30F3\u30A6\u30A7\u30A4\u306E\u4E3B\u5F79", "Star of the Runway"], "104002111": ["\u9BAE\u3084\u304B\u306A\u5E03\u9663", "Vivid Battle Formation"], "104002211": ["\u864E\u8996\u7708\u3005", "Eagle-eyed"], "104101111": ["\u30D0\u30AF\u30B7\u30F3\u7684\u30B9\u30D7\u30EA\u30F3\u30C8\uFF01", "Bakushin Sprint!"], "104101211": ["\u30D0\u30AF\u30B7\u30F3\u7684\u30EA\u30FC\u30C9\uFF01", "Bakushin Lead!"], "104102111": ["\u732A\u7A81\u731B\u9032\uFF01\u30D0\u30AF\u30B7\u30F3\u30ED\u30FC\u30C9\uFF01", "Red-hot Rush! Bakushin Road!"], "104102211": ["\u9A40\u9032\uFF01\u7206\u9032\uFF01\u30D0\u30AF\u30B7\u30FC\u30F3\uFF01", "Bakushin! Bakushin! Bakushiiin!"], "10411": ["\u5B66\u7D1A\u59D4\u54E1\u9577+\u901F\u3055\uFF1D\u30D0\u30AF\u30B7\u30F3", "Class President + Speed = Bakushin"], "104201111": ["\u4E16\u754C\u3092\u8CAB\u304F\u81F3\u9AD8\u306E\u8F1D\u304D", "World-wide Supreme Brilliance"], "104201211": ["\u30D1\u30FC\u30EB\u6D41\u30C0\u30F3\u30B9\u30D0\u30C8\u30EB", "Pearl-style Dance Battle"], "104301111": ["\u5168\u901F\u524D\u9032\u306A\u306E\u3060\uFF01", "Full Speed Ahead, Nanoda!"], "104301211": ["\u3044\u305F\u305A\u3089\u30DE\u30A4\u30B9\u30BF\u30FC", "Masterful Prankster"], "104401111": ["\u653E\u8AB2\u5F8C\u9B54\u6CD5\u5C11\u5973", "After-School Magical Girl"], "104401211": ["\u30C1\u30E3\u30FC\u30E0\u30DE\u30B8\u30C3\u30AF", "Charm Magic"], "104401221": ["\u30B5\u30EB\u30D3\u30A2\u2606\u30B9\u30D7\u30EC\u30F3\u30C7\u30F3\u30B9", "Salvia\u2606Splendens"], "104501111": ["\u3042\u307E\uFF5E\u3044\u5E7B\u60D1", "Sweet Bewitching"], "104501211": ["\u7652\u3057\u306E\u30DE\u30A8\u30B9\u30C8\u30ED", "Healing Maestro"], "104502111": ["\u304A\u4E16\u8A71\u306E\u30D7\u30ED\u30D5\u30A7\u30C3\u30B7\u30E7\u30CA\u30EB", "Professional Pamperer"], "104502211": ["\u9B45\u60D1\u306E\u30DE\u30DF\u30FC\u30A6\u30A3\u30B9\u30D1\u30FC", "Charming Mummy Whisper"], "10451": ["\u30AF\u30EA\u30A2\u30CF\u30FC\u30C8", "Clear Heart"], "104601111": ["\u5927\u6CE8\u76EE\u306E\u30A6\u30DE\u30C9\u30EB\u53C2\u4E0A\u2605", "The Dazzling Umadol's Here\u2605"], "104601121": ["\u76EE\u3092\u9038\u3089\u3057\u3061\u3083\u30C0\u30E1\u3060\u3088\u2606", ""], "104601211": ["\u30A6\u30DE\u30C9\u30EB\u30D1\u30EF\u30FC\u6025\u4E0A\u6607\u2191\u2191", "Umadol Power Trend \u2191\u2191"], "104602111": ["\u5922\u306B\u5411\u304B\u3063\u3066\u6025\u4E0A\u6607\uFF01", "Trending Towards Your Dreams!"], "104602211": ["\u7D76\u5BFE\u7684\u30BB\u30F3\u30BF\u30FC\uFF01", "Absolute Center!"], "104701111": ["\u82F1\u96C4\u3078\u306E\u9053\u6A19", "Hero Handbook"], "104701121": ["\u7269\u8A9E\u3092\u7D21\u3050\u8005", "Story Weaver"], "104701211": ["\u5149\u8F1D\u304F\u5263", "Shining Sword"], "104801111": ["\u30CE\u3063\u3066\u3053\uFF01", "Get Those Vibes Up!"], "104801211": ["\u30C8\u30EC\u30F3\u30C9\u30D7\u30E9\u30F3\u30CA\u30FC", "Trend Planner"], "104802111": ["\u30EF\u30F3\u30C1\u30E3\u30F3\u307E\u304F\u3063\u305F\u308B\uFF01", "Taking Every Chance!"], "104802211": ["\u3042\u305F\u3057\u3057\u304B\u52DD\u305F\u3093\uFF01", "Can't Top Me!"], "104901111": ["\u4E7E\u5764\u4E00\u64F2\u306E\u5927\u535A\u6253", "All or Nothing"], "104901211": ["\u9244\u706B\u306E\u30AE\u30E3\u30F3\u30D6\u30E9\u30FC", "Hot-blooded Gambler"], "105001111": ["\u9B3C\u6C17\u68EE\u7136", "Menacing Presence"], "105001211": ["\u99C6\u308A\u7ACB\u3066\u308B\u60F3\u3044", "Spurring Emotions"], "105002111": ["\u898B\u305B\u3064\u3051\u3066\u3084\u308B\uFF01", "I'll Show You!"], "105002211": ["\u8D77\u6B7B\u56DE\u751F\u306E\u51FA\u529B", "Recovery Output"], "105101111": ["\u98A8\u82B1\u75BE\u8D70", "Flurry Dash"], "105101211": ["\u5927\u8F2A\u306E\u6C7A\u610F", "Large-Petaled Resolution"], "105102111": ["\u795D\u798F\u306E\u30D5\u30E9\u30EF\u30FC\u30AC\u30FC\u30EB", "Flower Girl's Blessing"], "105102211": ["\u30F4\u30A7\u30FC\u30EB\u63FA\u3089\u3059\u6625\u75BE\u98A8", "Veil-Swaying Spring Storm"], "105201111": ["\u307E\u3060\u307E\u3060\u3060\u3088\uFF01", "Not Done Yet!"], "105201211": ["\u307E\u3051\u306A\u3044\u304B\u3089\u306D\uFF01", "I Won't Lose!"], "105202111": ["\u898B\u3066\u3066\u898B\u3066\u3066\uFF01", "Look At Me, Look!"], "105202211": ["\u304C\u3093\u3070\u308B\u3082\u3093\uFF01", "Trying My Best!"], "10521": ["\u30EF\u30AF\u30EF\u30AF\u3088\u30FC\u3044\u30C9\u30F3", "Ready, Steady, Go!"], "105301111": ["\u98A8\u7D00\u306E\u767B\u9F8D\u9580", "Gateway To Discipline"], "105301211": ["\u62BC\u5FCD\u30C3\uFF01\u6C17\u5408\u5341\u5206\u3063\u30B9\uFF01", "Osu! I'm Fired Up!"], "105302111": ["\u71B1\u8840\u9032\u5316\u30E9\u30A4\u30C7\u30A3\u30F3\u30B0\uFF01", "Hot-blooded Riding!"], "105302211": ["\u5FC5\u6BBA\uFF01\u7206\u901F\u30B9\u30D7\u30EA\u30F3\u30C8\uFF01", "Special Move! Explosive Sprint!"], "105501111": ["\u30EF\u30AF\u30EF\u30AF\u2606\u30DE\u30FC\u30D9\u30E9\u30B9\u30BE\u30FC\u30F3", "Exciting\u2606Marvelous Zone"], "105501211": ["\u9032\u3081\uFF01\u4E16\u754C\u30DE\u30FC\u30D9\u30E9\u30B9\u8A08\u753B\u2606", "Marvelous World Plan\u2606"], "105601111": ["\u5409\u5146\u3067\u3059\uFF01", "Lucky Omen!"], "105601211": ["\u4E03\u798F\u5373\u751F", "Seven Heavenly Fortunes"], "105602111": ["\u6012\u6D9B\u306E\u8D85\u5E78\u904B\u30D1\u30EF\u30FC\uFF01", "Tempestuous Ultra Luck Power!"], "105602211": ["\u3070\u3063\u3061\u308A\u958B\u904B\u4F53\u9A13\uFF01", "First-hand Rising Fortune!"], "10561": ["\u6765\u3066\u304F\u3060\u3055\u3044\u6765\u3066\u304F\u3060\u3055\u3044\uFF01", "Come, Come!"], "105701111": ["\u5929\u7FD4\u308B\u8DB3\u53D6\u308A", "Soaring Step"], "105701211": ["\u5F3E\u3080\u5927\u5730", "Supple Land"], "105801111": ["\u6012\u6D9B\u306E\u30B9\u30D4\u30FC\u30C9", "Tempestuous Speed"], "105801211": ["\u8AE6\u3081\u306A\u3044\u3001\u3067\u3059\u3045\uFF5E\uFF01", "I'm Not Giving Up!"], "105802111": ["\u30E9\u30A4\u30D0\u30EB\u304C\u3044\u308B\u304B\u3089\uFF01", "I've Got a Rival After All!"], "105802211": ["\u9B42\u306E\u5C0E\u304D\u624B", "Soul Guide"], "105901111": ["\u30AF\u30FC\u30EB\u306A\u8996\u7DDA", "Cool Gaze"], "105901211": ["\u6DC0\u306E\u5973\u738B", "Queen of Yodo"], "105902111": ["\u3082\u3063\u3068\u5192\u967A\u3057\u3066\u307F\u305F\u3044\uFF01", "I Want To Be More Adventurous!"], "105902211": ["\u8D77\u6B7B\u56DE\u751F\u306E\u4E00\u6B69", "First Step To Recovery"], "106001111": ["\u9B45\u60D1\u306E\u30B7\u30CB\u30AB\u30EB\u30AC\u30FC\u30EB", "Charming Cynical Girl"], "106001211": ["\u76EE\u6307\u305B\uFF01\u4E3B\u4EBA\u516C\uFF01", "Aim for the Leading Role!"], "106002111": ["\u9811\u5F35\u308B\u3057\u304B\u306A\u3044\u3088\u306D", "Guess I've Gotta Try"], "106002211": ["\u30CE\u30F3\u30B9\u30C8\u30C3\u30D7\u30A8\u30FC\u30EB", "Non-stop Cheer"], "10601": ["\u30A2\u30BF\u30B7\u3082\u305F\u307E\u306B\u306F\u3001\u306D\uFF1F", "You Know, Sometimes Even I Can..."], "106101111": ["\u96FB\u6483\u306E\u64AB\u3067\u5207\u308A", "Electrifying Sweep"], "106101211": ["\u738B\u306E\u5927\u5C40\u89B3", "King's Perspective"], "106102111": ["\u7ADC\u306E\u96F2\u3092\u5F97\u308B\u5982\u3057", "Like Riding a Dragon's Cloud"], "106102211": ["\u6625\u98A8\u5439\u304D\u3066\u3001\u685C\u821E\u3046", "As Spring Blooms, the Sakura Dance"], "10611": ["Call me KING", "Call me KING"], "106201111": ["\u30B4\u30FC\u30A4\u30F3\u30B0\u30DE\u30A4\u30A6\u30A7\u30A4", "Going My Way"], "106201211": ["\u3048\u3044\uFF01\u3048\u3044\uFF01\u3080\u3093\uFF01", "Ei! Ei! Mun!"], "106202111": ["\u30DD\u30B8\u30C6\u30A3\u30D6\u30B9\u30DE\u30A4\u30EB", "Positive Smile"], "106202211": ["\u5927\u3069\u3093\u3067\u3093\u304C\u3048\u3057", "Big Comeback"], "10621": ["\u30EC\u30C7\u30A3\u30FC\u3001\u3069\u3093\u3063\uFF01", "Ready, Bang!"], "106401111": ["\u30D1\u306A\u3044\u3063\u3057\u3087\uFF1F", "Dope Stuff!"], "106401211": ["\u795E\u9003\u3052\u306E\u5FC3\u5F97", "Godly Runner's Wisdom"], "106501111": ["\u30DE\u30B8\u7206\u4E0A\u3052\u3063\u3057\u3087\uFF01", "Hella Vibes Up!"], "106501211": ["\u3068\u308A\u307E\u3084\u3063\u305F\u308C\uFF5E\uFF01", "Just Do It!"], "106601111": ["\u51FA\u529B1000\u4E07%\uFF01\uFF01", "Ten Million Percent Output!!"], "106601211": ["\u30BF\u30FC\u30DC\u306B\u3064\u3044\u3066\u3053\u30FC\u3044\uFF01", "Keep Up with Turbo!"], "10661": ["\u30A8\u30F3\u30B8\u30F3\u70B9\u706B\uFF01", "Engine Ignition!"], "106701111": ["\u91D1\u525B\u4E0D\u58CA", "Adamantine"], "106701121": ["\u96A0\u305B\u306C\u8F1D\u304D", ""], "106701211": ["\u53F3\u56DE\u308A\u306E\u8F2A\u821E\u66F2", "Clockwise Rondo"], "106702111": ["\u7121\u6211\u306E\u5883\u5730", "Realm of No-Self"], "106702211": ["\u660E\u3051\u306C\u591C\u306F\u306A\u3044\uFF01", "Dawn Always Comes!"], "106703111": ["\u84BC\u8272\u9769\u547D", "Azure Revolution"], "106703211": ["\u30C0\u30F3\u30B9\u30FB\u30C7\u30FB\u30EC\u307A", "Danse de L'Ep\xE9e"], "106801111": ["\u796D\u308A\u3060\u30EF\u30C3\u30B7\u30E7\u30A4\uFF01", "Festival Shout!"], "106801211": ["\u7206\u98A8\u4E00\u9583\uFF01", "Blast Flash"], "106802111": ["\u672A\u6765\u3078\u98DB\u3073\u7ACB\u3061\u307E\u3057\u3087\u3046\uFF01", "Leap Towards The Future!"], "106802211": ["\u5FC5\u52DD\u306E\u524D\u53E3\u4E0A\uFF01", "Preamble of Victory!"], "106901111": ["\u304A\u82B1\u898B\u5F53\u305F\u308A\u5E74\uFF01", "Pretty Blossoms, Pretty Year!"], "106901211": ["\u3051\u3075\u4E5D\u91CD\u306B\u6E80\u958B\u3067\u3059", "In Ninefold Bloom"], "106902111": ["\u685C\u82B1\u721B\u6F2B\u4E00\u76F4\u7DDA", "Trail of Blooming Sakura"], "106902211": ["\u8CA0\u3051\u305F\u304F\u306A\u3044\uFF01", "I Don't Want to Lose!"], "107001111": ["\u63FA\u308B\u304C\u306C\u30A2\u30B9\u30BF\u30FC", "Unwavering Aster"], "107001211": ["\u4E00\u7B49\u661F\u306E\u30A2\u30E9\u30D9\u30B9\u30AF", "Brightest Star's Arabesque"], "107101111": ["\u6C38\u9060\u306E\u8F1D\u304D", "Eternal Brilliance"], "107101211": ["\u5239\u90A3\u3078\u306E\u899A\u609F", "Moment's Readiness"], "107102111": ["\u7F8E\u3057\u304D\u71D0\u5149", "Beautiful Phosphorescence"], "107102211": ["\u6DE1\u304F\u511A\u3044\u6B8B\u7167", "Ephemeral Afterglow"], "107201111": ["\u6602\u308B\u7114", "Stirring Flame"], "107201211": ["\u516B\u91CD\u306E\u5411\u3053\u3046\u610F\u6C17", "Layered Determination"], "107401111": ["\u4E0D\u5C48\u306E\u304A\u5B22\u69D8", "Indomitable Dame"], "107401211": ["\u52D5\u304B\u3056\u308B\u3053\u3068\u7F8A\u8E44\u5C71\u306E\u82E5\u3057", "Immovable as Mt. Youtei"], "107601111": ["\u685C\u524D\u7DDA\u9032\u884C\u4E2D\uFF01", "Advancing Sakura Front!"], "107601211": ["\u4E00\u82B1\u54B2\u304B\u305B\u307E\u3057\u3087\u3046\uFF01", "Let's Bloom in the Moment!"], "107701111": ["\u30BF\u30FC\u30D5\u306E\u4E3B\u4EBA\u516C", "Turf Protagonist"], "107701211": ["\u6B63\u9053", "The Right Path"], "107801111": ["\u30A6\u30A4\u30F3\u30C9\u30B7\u30A2\u30FC", "Wind Shear"], "107801211": ["\u795E\u6E21\u3057", "Divine Crossing"], "108301111": ["\u8CEA\u5B9F\u525B\u5065", "Ironclad"], "108301211": ["\u9769\u547D\u3092\u3082\u305F\u3089\u3059\u5A01\u5BB9", "Revolutionary Presence"], "108302111": ["Burn Down", "Burn Down"], "108302211": ["Service: Transit", "Service: Transit"], "108401111": ["\u5D50\u3092\u547C\u3076\u7834\u58CA\u795E", "Storm-Calling God of Destruction"], "108401211": ["\u9154\u3044\u75F4\u308C\u3088\u3001\u4E16\u754C", "Imbibe in Ecstasy, World!"], "108501111": ["\u83EF\u9E97\u3067\u3042\u308C", "Be Majestic"], "108501211": ["\u5E38\u306B\u6700\u305F\u308B\u8F1D\u304D\u3092", "Pursuing Greater Brilliance"], "108601111": ["\u7D14\u611B", "Pure Love"], "108601211": ["\u9AD8\u5DBA\u306E\u8276\u7B11", "Enchanting Smile Beyond Reach"], "108701111": ["\u5FC5\u52DD\u306E\u30D4\u30C3\u30C1\u30A2\u30C3\u30D7", "Victory Pitch-Up"], "108701211": ["\u8A18\u61B6\u306B\u523B\u3080\u8DB3\u53D6\u308A", "Unforgettable Step"], "109301111": ["K.Speed", "K.Speed"], "109301211": ["\u547D\u306E\u706B\u82B1", "Spark of Life"], "109801111": ["\u30B3\u30D1\u30C3\u3068\u958B\u904B\uFF01", "Copano-style Rising Fortunes!"], "109801211": ["\u9F8D\u8108\u306E\u6CE2\u6FE4", "Surging Ley Lines"], "109901111": ["\u82EB\u5C0F\u7267\u30B0\u30EB\u30E1\u3067\u820C\u9F13\uFF01", "Feast of Tomakomai"], "109901211": ["\u89B3\u5149\u5927\u4F7F\u306E\u9762\u76EE\u8E8D\u5982\uFF01", "Tourism Ambassador's Prestige"], "1100011": ["\u8D85\u904A\u3073\u7656", "Dilly-Dally"], "110001111": ["\u95D8\u9B42\u6CE8\u5165", "Refueled Fighting Spirit"], "110001211": ["\u5973\u795E\u306E\u7802\u6D74\u3073", "Goddess' Dust Bath"], "110011": ["\u308F\u3084\u304B\u308F\u266A\u30DE\u30EA\u30F3\u30C0\u30A4\u30F4", "Wayakawa \u266A Marine Dive"], "110021": ["\u6C34\u5E73\u7DDA\u306E\u305D\u306E\u5148\u3078", "Beyond the Ocean's Infinity"], "110031": ["\u7D76\u5BFE\u306F\u3001\u30DC\u30AF\u3060", "It's Going to Be Me"], "110041": ["\u30B0\u30C3\u3068\u304D\u3066\u266AChu", "Heartfelt \u266A Smooch"], "110051": ["Ravissant", "Ravissante"], "110061": ["\u8056\u591C\u306E\u30DF\u30E9\u30AF\u30EB\u30E9\u30F3\uFF01", "Christmas Eve Miracle Run!"], "110071": ["Adventure of 564", "Adventure of 564"], "110081": ["Into High Gear!", "Into High Gear!"], "110091": ["Queen's Lumination", "Queen's Lumination"], "110101": ["Joyful Voyage!", "Joyful Voyage!"], "110111": ["\u30B2\u30A4\u30F3\u30D2\u30FC\u30EB\u30FB\u30B9\u30DA\u30EA\u30A2\u30FC", "Gain Superior Heal"], "110121": ["\u5927\u76DB\u308A\uFF01\u30D5\u30A1\u30FC\u30B9\u30C8\u30D0\u30A4\u30C8\uFF01", "Extra Large First Bite!"], "110131": ["\u6700\u5F37\u306E\u540D\u3092\u61F8\u3051\u3066", "For the Strongest Name"], "110141": ["\u30B3\u30F3\u30C9\u30EB\u731B\u6483\u6CE2", "Condor Onslaught"], "110151": ["\u6075\u798F\u30D0\u30EB\u30AB\u30ED\u30FC\u30EC", "Blessed Barcarolle"], "110161": ["\u7070\u8272\u306E\u81E8\u754C\u70B9", "Critical Point: Gray"], "110171": ["\u7FF3\u308A\u9000\u304F\u3001\u3055\u3056\u3081\u304D\u306E\u77E2", "Howling Arrow Piercing the Darkness"], "110181": ["\u85AB\u98A8\u3001\u6C38\u9060\u306A\u308B\u77AC\u9593\u3092", "Summer Breeze, the Eternal Moment"], "110191": ["\u840C\u5230\u8B93\u6211\u6D3B\u904E\u4F86\u4E86\uFF01", "Revived by Moe!"], "110201": ["Do Ya Breakin!", "Do Ya Breakin!"], "110211": ["\u706B\u795E\u9CF4", "Thunderous Firestarter"], "110221": ["Best day ever", "Best Day Ever"], "110231": ["Presents from X", "Presents from X"], "110241": ["\u30D5\u30E9\u30EF\u30EA\u30FC\u2606\u30DE\u30CB\u30E5\u30FC\u30D0", "Flowery \u2606 Maneuver"], "110261": ["\u30AA\u30DA\u30EC\u30FC\u30B7\u30E7\u30F3\u30FBCacao", "Operation Cacao"], "110271": ["\u3042\u306A\u305F\u306B\u6367\u3052\u308B\u30D5\u30EA\u30FC\u30DD\u30A2", "Latte Art For You"], "110301": ["Drain for rose", "Drain for Rose"], "110311": ["\u30D5\u30EC\u30C3\u30B7\u30E5\u2606\u30D1\u30FC\u30E9\u30FC", "Fresh \u2606 Parlor"], "110321": ["\u590F\u7A7A\u30CF\u30EC\u30FC\u30B7\u30E7\u30F3", "Summer Halation"], "110341": ["\u706F\u7A42", "Bristling Lights"], "110351": ["\u5922\u306E\u5148\u3078\u3001\u5C4A\u3051\uFF01", "Delivering Beyond the Dreams!"], "110361": ["...found you.", "...found you."], "110371": ["Guten Appetit\u266A", "Guten Appetit\u266A"], "110381": ["One True Color", "One True Color"], "110391": ["\u5FEB\u306A\u308B\u525B\u529B", ""], "110401": ["GET DOWN", "GET DOWN"], "110401111": ["\u3057\u3066\u3084\u3063\u305F\u308A\uFF01", "Beat You to It!"], "110401211": ["\u9003\u3052\u3063\u5207\u308A\u306E1\u4EBA\u65C5", "Solitary Getaway"], "110411": ["CHERRY\u2606\u30B9\u30AF\u30E9\u30F3\u30D6\u30EB", "Cherry\u2606Scramble"], "110451": ["\u3050\u308B\u3050\u308B\u30DE\u30DF\u30FC\u30C8\u30EA\u30C3\u30AF\u2661", "Round and Round, Mummy Trick\u2661"], "110461": ["\u03B1-star*", "\u03B1-star*"], "110481": ["GALmem.\u3075\u3049\u30FC\u3048\u3070\u266A", "GALmem. forever\u266A"], "110501": ["Hephaistos", "Hephaistos"], "110501111": ["\u9280\u6CB3\u306E\u305D\u306E\u5148\u3078\u3001\u3042\u306A\u305F\u3068", "Beyond the Milky Way With You"], "110501211": ["\u661F\u306E\u6D77\u3092\u99C6\u3051\u3066", "Crossing the Sea of Stars"], "110511": ["Flowering Dreams", "Flowering Dreams"], "110521": ["113\u8EE2\u3073114\u8D77\u304D", "Fall Down 113 Times, Get Up 114"], "110531": ["\u5965\u7FA9\u30FB\u5E38\u590F\u30D0\u30FC\u30CB\u30F3\u30B0\uFF01\uFF01", "Secret Technique: Everlasting Summer!!"], "110561": ["\u79BE\u30B9\u30CA\u30CF\u30C1\u767B\u30EB", "Grains Become Ripe"], "110581": ["Spooky-Scary-Happy", "Spooky-Scary-Happy"], "110591": ["\u3068\u304D\u3081\u304D\u304C\u547C\u3076\u307B\u3046\u3078", "To Where the Heart Beckons"], "110601": ["Go\u2606Go\u2606for it!", "Go\u2606Go\u2606For It!"], "110601111": ["\u7126\u3089\u305A\u3001\u6C17\u8CA0\u308F\u305A", "Keep Calm, Don't Overthink"], "110601211": ["\u3061\u3087\u3063\u3068\u3044\u3044\u3053\u3068\u3001\u96C6\u3081\u3066", "Collecting Little Joys"], "110611": ["\u8F5F\uFF01\u30C8\u30EC\u30BB\u30F3\u5FDC\u63F4\u56E3\uFF01\uFF01", "Roaring Tracen Cheerleading Squad"], "110621": ["\u3054\u308D\u308A\u3093\uFF01\uFF1F\u30D1\u30EF\u30FC\u30C9\u30E9\u30A4\u30D6", "Rolling Power Drive!"], "110671": ["\u7384\u96F2\u6563\u3089\u3059\u3001\u9EC4\u91D1\u7532\u77E2", "Arrow of Gold, Break up the Dark Clouds"], "110681": ["\u3042\u3063\u3071\u308C\u5927\u76E4\u632F\u308B\u821E\u3044\uFF01", "Lavish Feast"], "110691": ["\u54B2\u3051\u54B2\u3051\uFF01\u79C1\uFF01", "Bloom! Blossom! Sakura!"], "110711": ["Danser le pr\xE9sent", "Danser le Pr\xE9sent"], "110831": ["Immortal Work", "Immortal Work"], "1200011": ["\u4E2D\u8DDD\u96E2\u30EC\u30FC\u30B9\u3078\u306E\u60F3\u3044", "Medium-Distance Racing Passion"], "1200021": ["\u9577\u8DDD\u96E2\u30EC\u30FC\u30B9\u3078\u306E\u60F3\u3044", "Long-Distance Racing Passion"], "1200031": ["\u30DE\u30A4\u30EB\u30EC\u30FC\u30B9\u3078\u306E\u60F3\u3044", "Mile Racing Passion"], "1200041": ["\u77ED\u8DDD\u96E2\u30EC\u30FC\u30B9\u3078\u306E\u60F3\u3044", "Short-Distance Racing Passion"], "1200051": ["\u30C0\u30FC\u30C8\u30EC\u30FC\u30B9\u3078\u306E\u60F3\u3044", "Dirt Racing Passion"], "120011": ["\u5A01\u98A8\u5802\u3005\u3001\u5922\u9326\uFF01", "Dignified Dreamlike Brocade"], "120031": ["\u6B4C\u821E\u6B53\u697D\u3084\u3001\u3042\u3042\u3092\u304B\u3057", ""], "120071": ["Vive la GOLD", "Vive la GOLD"], "120131": ["\u304D\u3089\u3081\u304F\u306F\u6D77\u3001\u307E\u3070\u3086\u304D\u306F\u541B", "The Sea Glitters, but You're Dazzling"], "120671": ["\u30DD\u30F3\u30C6\u30FB\u30C7\u30FB\u30C7\u30A3\u30A2\u30DE\u30F3", "Ponte de Diamant"], "1300011": ["\u30DC\u30EB\u30C6\u30FC\u30B8\u30D2\u30FC\u30ED\u30FC", "Voltage Hero"], "1300021": ["\u30B5\u30F3\u30E9\u30A4\u30BA\u30D2\u30FC\u30ED\u30FC", "Sunrise Hero"], "1300031": ["\u30EC\u30A4\u30CB\u30FC\u30D2\u30FC\u30ED\u30FC", "Rainy Hero"], "1300041": ["\u30A4\u30F3\u30B5\u30A4\u30C9\u30D2\u30FC\u30ED\u30FC", "Inside Hero"], "1300051": ["\u30A2\u30A6\u30C8\u30B5\u30A4\u30C9\u30D2\u30FC\u30ED\u30FC", "Outside Hero"], "1300061": ["\u30EA\u30F3\u30B1\u30FC\u30B8\u30D2\u30FC\u30ED\u30FC", "Linkage Hero"], "1300071": ["\u30B9\u30D1\u30FC\u30C8\u30D2\u30FC\u30ED\u30FC", "Spurt Hero"], "200011": ["\u53F3\u56DE\u308A\u25CE", "Right Turns \u25CE"], "200012": ["\u53F3\u56DE\u308A\u25CB", "Right Turns \u25CB"], "200013": ["\u53F3\u56DE\u308A\xD7", "Right Turns \xD7"], "200014": ["\u53F3\u56DE\u308A\u306E\u9B3C", "Clockwise Demon"], "200021": ["\u5DE6\u56DE\u308A\u25CE", "Left Turns \u25CE"], "200022": ["\u5DE6\u56DE\u308A\u25CB", "Left Turns \u25CB"], "200023": ["\u5DE6\u56DE\u308A\xD7", "Left Turns \xD7"], "200031": ["\u6771\u4EAC\u30EC\u30FC\u30B9\u5834\u25CE", "Tokyo Racetrack \u25CE"], "200032": ["\u6771\u4EAC\u30EC\u30FC\u30B9\u5834\u25CB", "Tokyo Racetrack \u25CB"], "200033": ["\u6771\u4EAC\u30EC\u30FC\u30B9\u5834\xD7", "Tokyo Racetrack \xD7"], "200041": ["\u4E2D\u5C71\u30EC\u30FC\u30B9\u5834\u25CE", "Nakayama Racetrack \u25CE"], "200042": ["\u4E2D\u5C71\u30EC\u30FC\u30B9\u5834\u25CB", "Nakayama Racetrack \u25CB"], "200043": ["\u4E2D\u5C71\u30EC\u30FC\u30B9\u5834\xD7", "Nakayama Racetrack \xD7"], "200051": ["\u962A\u795E\u30EC\u30FC\u30B9\u5834\u25CE", "Hanshin Racetrack \u25CE"], "200052": ["\u962A\u795E\u30EC\u30FC\u30B9\u5834\u25CB", "Hanshin Racetrack \u25CB"], "200053": ["\u962A\u795E\u30EC\u30FC\u30B9\u5834\xD7", "Hanshin Racetrack \xD7"], "200061": ["\u4EAC\u90FD\u30EC\u30FC\u30B9\u5834\u25CE", "Kyoto Racetrack \u25CE"], "200062": ["\u4EAC\u90FD\u30EC\u30FC\u30B9\u5834\u25CB", "Kyoto Racetrack \u25CB"], "200063": ["\u4EAC\u90FD\u30EC\u30FC\u30B9\u5834\xD7", "Kyoto Racetrack \xD7"], "200064": ["\u6DC0\u306E\u7533\u3057\u5B50", "Child of Yodo"], "200071": ["\u4E2D\u4EAC\u30EC\u30FC\u30B9\u5834\u25CE", "Chukyo Racetrack \u25CE"], "200072": ["\u4E2D\u4EAC\u30EC\u30FC\u30B9\u5834\u25CB", "Chukyo Racetrack \u25CB"], "200073": ["\u4E2D\u4EAC\u30EC\u30FC\u30B9\u5834\xD7", "Chukyo Racetrack \xD7"], "200081": ["\u672D\u5E4C\u30EC\u30FC\u30B9\u5834\u25CE", "Sapporo Racetrack \u25CE"], "200082": ["\u672D\u5E4C\u30EC\u30FC\u30B9\u5834\u25CB", "Sapporo Racetrack \u25CB"], "200083": ["\u672D\u5E4C\u30EC\u30FC\u30B9\u5834\xD7", "Sapporo Racetrack \xD7"], "200091": ["\u51FD\u9928\u30EC\u30FC\u30B9\u5834\u25CE", "Hakodate Racetrack \u25CE"], "200092": ["\u51FD\u9928\u30EC\u30FC\u30B9\u5834\u25CB", "Hakodate Racetrack \u25CB"], "200093": ["\u51FD\u9928\u30EC\u30FC\u30B9\u5834\xD7", "Hakodate Racetrack \xD7"], "200101": ["\u798F\u5CF6\u30EC\u30FC\u30B9\u5834\u25CE", "Fukushima Racetrack \u25CE"], "200102": ["\u798F\u5CF6\u30EC\u30FC\u30B9\u5834\u25CB", "Fukushima Racetrack \u25CB"], "200103": ["\u798F\u5CF6\u30EC\u30FC\u30B9\u5834\xD7", "Fukushima Racetrack \xD7"], "200111": ["\u65B0\u6F5F\u30EC\u30FC\u30B9\u5834\u25CE", "Niigata Racetrack \u25CE"], "200112": ["\u65B0\u6F5F\u30EC\u30FC\u30B9\u5834\u25CB", "Niigata Racetrack \u25CB"], "200113": ["\u65B0\u6F5F\u30EC\u30FC\u30B9\u5834\xD7", "Niigata Racetrack \xD7"], "200121": ["\u5C0F\u5009\u30EC\u30FC\u30B9\u5834\u25CE", "Kokura Racetrack \u25CE"], "200122": ["\u5C0F\u5009\u30EC\u30FC\u30B9\u5834\u25CB", "Kokura Racetrack \u25CB"], "200123": ["\u5C0F\u5009\u30EC\u30FC\u30B9\u5834\xD7", "Kokura Racetrack \xD7"], "200131": ["\u6839\u5E79\u8DDD\u96E2\u25CE", "Core Distances \u25CE"], "200132": ["\u6839\u5E79\u8DDD\u96E2\u25CB", "Core Distances \u25CB"], "200133": ["\u6839\u5E79\u8DDD\u96E2\xD7", "Core Distances \xD7"], "200141": ["\u975E\u6839\u5E79\u8DDD\u96E2\u25CE", "Non-Core Distances \u25CE"], "200142": ["\u975E\u6839\u5E79\u8DDD\u96E2\u25CB", "Non-Core Distances \u25CB"], "200143": ["\u975E\u6839\u5E79\u8DDD\u96E2\xD7", "Non-Core Distances \xD7"], "200151": ["\u826F\u30D0\u5834\u25CE", "Good Track Condition \u25CE"], "200152": ["\u826F\u30D0\u5834\u25CB", "Good Track Condition \u25CB"], "200153": ["\u826F\u30D0\u5834\xD7", "Good Track Condition \xD7"], "200154": ["\u826F\u30D0\u5834\u306E\u9B3C", "Good Track Demon"], "200161": ["\u9053\u60AA\u25CE", "Bad Track Condition \u25CE"], "200162": ["\u9053\u60AA\u25CB", "Bad Track Condition \u25CB"], "200163": ["\u9053\u60AA\xD7", "Bad Track Condition \xD7"], "200164": ["\u9053\u60AA\u306E\u9B3C", "Bad Track Demon"], "200171": ["\u6625\u30A6\u30DE\u5A18\u25CE", "Spring Girl \u25CE"], "200172": ["\u6625\u30A6\u30DE\u5A18\u25CB", "Spring Girl \u25CB"], "200173": ["\u6625\u30A6\u30DE\u5A18\xD7", "Spring Girl \xD7"], "200174": ["\u6625\u4E00\u756A", "First Breeze of Spring"], "200181": ["\u590F\u30A6\u30DE\u5A18\u25CE", "Summer Girl \u25CE"], "200182": ["\u590F\u30A6\u30DE\u5A18\u25CB", "Summer Girl \u25CB"], "200183": ["\u590F\u30A6\u30DE\u5A18\xD7", "Summer Girl \xD7"], "200184": ["\u9752\u5D50", "Summer Gale"], "200191": ["\u79CB\u30A6\u30DE\u5A18\u25CE", "Autumn Girl \u25CE"], "200192": ["\u79CB\u30A6\u30DE\u5A18\u25CB", "Autumn Girl \u25CB"], "200193": ["\u79CB\u30A6\u30DE\u5A18\xD7", "Autumn Girl \xD7"], "200194": ["\u521D\u5D50", "The First Storm"], "200201": ["\u51AC\u30A6\u30DE\u5A18\u25CE", "Winter Girl \u25CE"], "200202": ["\u51AC\u30A6\u30DE\u5A18\u25CB", "Winter Girl \u25CB"], "200203": ["\u51AC\u30A6\u30DE\u5A18\xD7", "Winter Girl \xD7"], "200211": ["\u6674\u308C\u306E\u65E5\u25CE", "Sunny Days \u25CE"], "200212": ["\u6674\u308C\u306E\u65E5\u25CB", "Sunny Days \u25CB"], "200221": ["\u66C7\u308A\u306E\u65E5\u25CE", "Cloudy Days \u25CE"], "200222": ["\u66C7\u308A\u306E\u65E5\u25CB", "Cloudy Days \u25CB"], "200231": ["\u96E8\u306E\u65E5\u25CE", "Rainy Days \u25CE"], "200232": ["\u96E8\u306E\u65E5\u25CB", "Rainy Days \u25CB"], "200233": ["\u96E8\u306E\u65E5\xD7", "Rainy Days \xD7"], "200241": ["\u96EA\u306E\u65E5\u25CE", "Snowy Days \u25CE"], "200242": ["\u96EA\u306E\u65E5\u25CB", "Snowy Days \u25CB"], "200251": ["\u5185\u67A0\u5F97\u610F\u25CE", "Inner Gate Affinity \u25CE"], "200252": ["\u5185\u67A0\u5F97\u610F\u25CB", "Inner Gate Affinity \u25CB"], "200253": ["\u5185\u67A0\u82E6\u624B", "Inner Gate Affinity \xD7"], "200261": ["\u5916\u67A0\u5F97\u610F\u25CE", "Outer Gate Affinity \u25CE"], "200262": ["\u5916\u67A0\u5F97\u610F\u25CB", "Outer Gate Affinity \u25CB"], "200263": ["\u5916\u67A0\u82E6\u624B", "Outer Gate Affinity \xD7"], "200271": ["\u304A\u3072\u3068\u308A\u69D8\u25CE", "Loner \u25CE"], "200272": ["\u304A\u3072\u3068\u308A\u69D8\u25CB", "Loner \u25CB"], "200281": ["\u5BFE\u6297\u610F\u8B58\u25CE", "Competitive Spirit \u25CE"], "200282": ["\u5BFE\u6297\u610F\u8B58\u25CB", "Competitive Spirit \u25CB"], "200283": ["\u5F15\u3063\u8FBC\u307F\u601D\u6848", "Introverted"], "200291": ["\u5FB9\u5E95\u30DE\u30FC\u30AF\u25CE", "Eyes On You \u25CE"], "200292": ["\u5FB9\u5E95\u30DE\u30FC\u30AF\u25CB", "Eyes On You \u25CB"], "200301": ["\u4F0F\u5175\u25CE", "Underdog \u25CE"], "200302": ["\u4F0F\u5175\u25CB", "Underdog \u25CB"], "200311": ["G\u2160\u82E6\u624B", "G1 Dislike"], "200321": ["\u5C0F\u5FC3\u8005", "Timid"], "200331": ["\u5F27\u7DDA\u306E\u30D7\u30ED\u30D5\u30A7\u30C3\u30B5\u30FC", "Archline Professor"], "200332": ["\u30B3\u30FC\u30CA\u30FC\u5DE7\u8005\u25CB", "Clever Cornerer \u25CB"], "200333": ["\u30B3\u30FC\u30CA\u30FC\u5DE7\u8005\xD7", "Clever Cornerer \xD7"], "200341": ["\u66F2\u7DDA\u306E\u30BD\u30E0\u30EA\u30A8", "Curve Sommelier"], "200342": ["\u30B3\u30FC\u30CA\u30FC\u52A0\u901F\u25CB", "Corner Accel \u25CB"], "200343": ["\u30B3\u30FC\u30CA\u30FC\u52A0\u901F\xD7", "Corner Accel \xD7"], "200351": ["\u5186\u5F27\u306E\u30DE\u30A8\u30B9\u30C8\u30ED", "Arc Maestro"], "200352": ["\u30B3\u30FC\u30CA\u30FC\u56DE\u5FA9\u25CB", "Corner Recovery \u25CB"], "200353": ["\u30B3\u30FC\u30CA\u30FC\u56DE\u5FA9\xD7", "Corner Recovery \xD7"], "200361": ["\u30CF\u30E4\u30C6\u4E00\u6587\u5B57", "Like The Wind"], "200362": ["\u76F4\u7DDA\u5DE7\u8005", "Straight Skill"], "200371": ["\u4E00\u9663\u306E\u98A8", "Gust of Wind"], "200372": ["\u76F4\u7DDA\u52A0\u901F", "Straight Accel"], "200381": ["\u597D\u8EE2\u4E00\u606F", "Breath of Fresh Air"], "200382": ["\u76F4\u7DDA\u56DE\u5FA9", "Straight Recovery"], "200391": ["\u5742\u82E6\u624B", "Hill Dislike"], "200401": ["\u30D0\u7FA4\u5ACC\u3044", "Crowd Hater"], "200411": ["\u3042\u304D\u3089\u3081\u7656", "Resignation"], "200421": ["\u624B\u629C\u304D\u7656", "Negligence"], "200431": ["\u30B3\u30F3\u30BB\u30F3\u30C8\u30EC\u30FC\u30B7\u30E7\u30F3", "Concentration"], "200432": ["\u96C6\u4E2D\u529B", "Focus"], "200433": ["\u30B2\u30FC\u30C8\u96E3", "Gate Trouble"], "200441": ["\u92FC\u306E\u610F\u5FD7", "Will of Steel"], "200442": ["\u96A0\u308C\u84D1", "Undercover"], "200451": ["\u6CE8\u76EE\u306E\u8E0A\u308A\u5B50", "Star of the Show"], "200452": ["\u30DD\u30B8\u30B7\u30E7\u30F3\u30BB\u30F3\u30B9", "Position Sense"], "200461": ["\u30A2\u30AC\u30C3\u3066\u304D\u305F\uFF01", "Now I'm Pumped!"], "200462": ["\u30DA\u30FC\u30B9\u30A2\u30C3\u30D7", "Up The Pace"], "200471": ["\u4E0D\u5C48\u306E\u5FC3", "Indomitable Heart"], "200472": ["\u30DA\u30FC\u30B9\u30AD\u30FC\u30D7", "Keep the Pace"], "200481": ["\u3069\u3053\u5439\u304F\u98A8", "Where the Wind Blows"], "200482": ["\u30A6\u30DE\u8FBC\u307F\u51B7\u9759", "Crowded Calm"], "200491": ["\u30CE\u30F3\u30B9\u30C8\u30C3\u30D7\u30AC\u30FC\u30EB", "Non-stop Girl"], "200492": ["\u5782\u308C\u30A6\u30DE\u56DE\u907F", "Slight Detour"], "200501": ["\u30EC\u30FC\u30F3\u306E\u9B54\u8853\u5E2B", "Magician of the Lane"], "200502": ["\u81E8\u6A5F\u5FDC\u5909", "Improvise"], "200511": ["\u5168\u8EAB\u5168\u970A", "Heart and Soul"], "200512": ["\u672B\u811A", "Last Leg"], "200521": ["\u7A7A\u56DE\u308A", "Running Idle"], "200531": ["\u5148\u624B\u5FC5\u52DD", "Fortune Favors the Fast"], "200532": ["\u5148\u99C6\u3051", "Frontrunner"], "200541": ["\u8131\u51FA\u8853", "Escape Artist"], "200542": ["\u6025\u304E\u8DB3", "Fast Paced"], "200551": ["\u9003\u4EA1\u8005", "Runaway"], "200552": ["\u62BC\u3057\u5207\u308A\u6E96\u5099", "Press Forward, Ready!"], "200561": ["\u4F59\u88D5\u7DBD\u3005", "Calm and Composed"], "200562": ["\u30B9\u30BF\u30DF\u30CA\u30AD\u30FC\u30D7", "Stamina Keep"], "200571": ["\u30EC\u30FC\u30B9\u30D7\u30E9\u30F3\u30CA\u30FC", "Race Planner"], "200572": ["\u597D\u4F4D\u8FFD\u8D70", "Favorite Place"], "200581": ["\u30B9\u30D4\u30FC\u30C9\u30B9\u30BF\u30FC", "Speed Star"], "200582": ["\u629C\u3051\u51FA\u3057\u6E96\u5099", "Passing Preparations"], "200591": ["\u8FC5\u901F\u679C\u65AD", "Quick and Decisive"], "200592": ["\u4F4D\u7F6E\u53D6\u308A\u62BC\u3057\u4E0A\u3052", "Position Swiper"], "200601": ["\u4E57\u308A\u63DB\u3048\u4E0A\u624B", "Switch-up Pro"], "200602": ["\u5DEE\u3057\u5207\u308A\u4F53\u52E2", "Between the Lines"], "200611": ["\u6607\u308A\u9F8D", "Rising Dragon"], "200612": ["\u5916\u5DEE\u3057\u6E96\u5099", "Outside Pass, Ready!"], "200621": ["\u7720\u308C\u308B\u7345\u5B50", "Sleeping Lion"], "200622": ["\u5F8C\u65B9\u5F85\u6A5F", "On Standby"], "200631": ["\u75BE\u98A8\u6012\u6FE4", "Storm and Stress"], "200632": ["\u4ED5\u639B\u3051\u629C\u7FA4", "Outstanding Stratagem"], "200641": ["\u8FEB\u308B\u5F71", "Imminent Shadow"], "200642": ["\u76F4\u7DDA\u4E00\u6C17", "Straight Shot"], "200651": ["\u30B9\u30D7\u30EA\u30F3\u30C8\u30BF\u30FC\u30DC", "Sprint Turbo"], "200652": ["\u30B9\u30D7\u30EA\u30F3\u30C8\u30AE\u30A2", "Sprinting Gear"], "200662": ["\u69D8\u5B50\u898B", "Wait and See"], "200671": ["\u96FB\u6483\u306E\u714C\u3081\u304D", "Jolt of Energy"], "200672": ["\u8A70\u3081\u5BC4\u308A", "Draw Forward"], "200681": ["\u30DE\u30A4\u30EB\u306E\u652F\u914D\u8005", "Ruler of Mile"], "200682": ["\u7A4D\u6975\u7B56", "Positive Planning"], "200691": ["\u6167\u773C", "Keen Insight"], "200692": ["\u5C55\u958B\u7ABA\u3044", "Progress Peek"], "200701": ["\u8C6A\u811A", "Big Strides"], "200702": ["\u4E0A\u6607\u6C17\u6D41", "Updraft"], "200711": ["\u5207\u308A\u958B\u304F\u8005", "Trailblazer"], "200712": ["\u524D\u9014\u6D0B\u3005", "Bright Future"], "200721": ["\u30AD\u30E9\u30FC\u30C1\u30E5\u30FC\u30F3", "Killer Tune"], "200722": ["\u30C6\u30F3\u30DD\u30A2\u30C3\u30D7", "Uptempo"], "200731": ["\u52DD\u5229\u3078\u306E\u57F7\u5FF5", "To Victory!"], "200732": ["\u98DF\u3044\u4E0B\u304C\u308A", "Stand Your Ground"], "200741": ["\u30AF\u30FC\u30EB\u30C0\u30A6\u30F3", "Cooldown"], "200742": ["\u6DF1\u547C\u5438", "Deep Breaths"], "200751": ["\u5185\u7684\u4F53\u9A13", "Intrinsic Experience"], "200752": ["\u5185\u5F01\u6176", "King of the Castle"], "200761": ["\u706B\u4E8B\u5834\u306E\u30D0\u9E7F\u529B", "Fight or Flight"], "200762": ["\u5225\u8179\u30BF\u30F3\u30AF", "Backup Belly"], "200771": ["\u30C8\u30EA\u30C3\u30AF\uFF08\u524D\uFF09", "Trick (Front)"], "200772": ["\u898B\u60DA\u308C\u308B\u30C8\u30EA\u30C3\u30AF", "Captivating Trick"], "200781": ["\u30C8\u30EA\u30C3\u30AF\uFF08\u5F8C\uFF09", "Trick (Back)"], "200791": ["\u9003\u3052\u99C6\u3051\u5F15\u304D", "Frantic Runners"], "200801": ["\u5148\u884C\u99C6\u3051\u5F15\u304D", "Frantic Leaders"], "200811": ["\u5DEE\u3057\u99C6\u3051\u5F15\u304D", "Frantic Betweeners"], "200821": ["\u8FFD\u8FBC\u99C6\u3051\u5F15\u304D", "Frantic Chasers"], "200831": ["\u9003\u3052\u3051\u3093\u5236", "Restrained Runners"], "200841": ["\u9003\u3052\u7126\u308A", "Panicked Runners"], "200851": ["\u9003\u3052\u305F\u3081\u3089\u3044", "Faltering Runners"], "200861": ["\u5148\u884C\u3051\u3093\u5236", "Restrained Leaders"], "200871": ["\u5148\u884C\u7126\u308A", "Panicked Leaders"], "200881": ["\u5148\u884C\u305F\u3081\u3089\u3044", "Faltering Leaders"], "200891": ["\u5DEE\u3057\u3051\u3093\u5236", "Restrained Betweeners"], "200901": ["\u5DEE\u3057\u7126\u308A", "Panicked Betweeners"], "200911": ["\u5DEE\u3057\u305F\u3081\u3089\u3044", "Faltering Betweeners"], "200921": ["\u8FFD\u8FBC\u3051\u3093\u5236", "Restrained Chasers"], "200931": ["\u8FFD\u8FBC\u7126\u308A", "Panicked Chasers"], "200941": ["\u8FFD\u8FBC\u305F\u3081\u3089\u3044", "Faltering Chasers"], "200951": ["\u5927\u4E95\u30EC\u30FC\u30B9\u5834\u25CE", "Ooi Racetrack \u25CE"], "200952": ["\u5927\u4E95\u30EC\u30FC\u30B9\u5834\u25CB", "Ooi Racetrack \u25CB"], "200953": ["\u5927\u4E95\u30EC\u30FC\u30B9\u5834\xD7", "Ooi Racetrack \xD7"], "200961": ["\u77ED\u8DDD\u96E2\u76F4\u7DDA\u25CE", "Short Distance Straights \u25CE"], "200962": ["\u77ED\u8DDD\u96E2\u76F4\u7DDA\u25CB", "Short Distance Straights \u25CB"], "200963": ["\u7D2B\u96FB\u4E00\u9583", "Lightning Flash"], "200971": ["\u77ED\u8DDD\u96E2\u30B3\u30FC\u30CA\u30FC\u25CE", "Short Distance Corners \u25CE"], "200972": ["\u77ED\u8DDD\u96E2\u30B3\u30FC\u30CA\u30FC\u25CB", "Short Distance Corners \u25CB"], "200981": ["\u5727\u5012\u7684\u30EA\u30FC\u30C9", "Overwhelming Lead"], "200982": ["\u5927\u304D\u306A\u30EA\u30FC\u30C9", "Big Lead"], "200991": ["\u30D7\u30E9\u30F3X", "Plan X"], "200992": ["\u5584\u5F8C\u7B56", "Countermeasures"], "201001": ["\u6E96\u5099\u4E07\u5168\uFF01", "Flawless Preparation!"], "201002": ["\u4ED5\u639B\u3051\u6E96\u5099", "Calculated Preparations"], "201011": ["\u60A9\u6BBA\u8853", "Bewitching"], "201012": ["\u5F8C\u65B9\u91D8\u4ED8", "Final Nail"], "201021": ["\u9003\u4EA1\u7981\u6B62\u4EE4", "Escape Prohibition"], "201022": ["\u629C\u3051\u99C6\u3051\u7981\u6B62", "No Running Allowed"], "201031": ["\u30DE\u30A4\u30EB\u76F4\u7DDA\u25CE", "Mile Straights \u25CE"], "201032": ["\u30DE\u30A4\u30EB\u76F4\u7DDA\u25CB", "Mile Straights \u25CB"], "201041": ["\u30DE\u30A4\u30EB\u30B3\u30FC\u30CA\u30FC\u25CE", "Mile Corners \u25CE"], "201042": ["\u30DE\u30A4\u30EB\u30B3\u30FC\u30CA\u30FC\u25CB", "Mile Corners \u25CB"], "201043": ["\u8C6A\u98A8\u5186\u5203", "Cyclone Slash"], "201051": ["\u30AE\u30A2\u30C1\u30A7\u30F3\u30B8", "Gear Change"], "201052": ["\u30AE\u30A2\u30B7\u30D5\u30C8", "Shift Gears"], "201061": ["\u30A2\u30AF\u30BB\u30EB\u5168\u958B\uFF01", "Accel Full Throttle!"], "201062": ["\u30A2\u30AF\u30BB\u30E9\u30EC\u30FC\u30B7\u30E7\u30F3", "Acceleration"], "201071": ["\u59C9\u5FA1\u808C", "Big Sister Disposition"], "201072": ["\u8CA0\u3051\u3093\u6C17", "Rival Spirit"], "201081": ["\u30B9\u30D4\u30FC\u30C9\u30B0\u30EA\u30FC\u30C9", "Speed Greed"], "201082": ["\u30B9\u30D4\u30FC\u30C9\u30A4\u30FC\u30BF\u30FC", "Speed Eater"], "201091": ["\u5E03\u9663", "Battle Formation"], "201092": ["\u5E03\u77F3", "Opener"], "201101": ["\u4E2D\u8DDD\u96E2\u76F4\u7DDA\u25CE", "Medium Distance Straights \u25CE"], "201102": ["\u4E2D\u8DDD\u96E2\u76F4\u7DDA\u25CB", "Medium Distance Straights \u25CB"], "201103": ["\u5149\u8292\u4E00\u9583", "Photon Flash"], "201111": ["\u4E2D\u8DDD\u96E2\u30B3\u30FC\u30CA\u30FC\u25CE", "Medium Distance Corners \u25CE"], "201112": ["\u4E2D\u8DDD\u96E2\u30B3\u30FC\u30CA\u30FC\u25CB", "Medium Distance Corners \u25CB"], "201113": ["\u5149\u8292\u5186\u5203", "Photon Slash"], "201121": ["\u5343\u91CC\u773C", "Clairvoyance"], "201122": ["\u30DB\u30FC\u30AF\u30A2\u30A4", "Hawkeye"], "201131": ["\u30E9\u30A4\u30C8\u30CB\u30F3\u30B0\u30B9\u30C6\u30C3\u30D7", "Lightning Step"], "201132": ["\u30A4\u30CA\u30BA\u30DE\u30B9\u30C6\u30C3\u30D7", "Inazuma Step"], "201141": ["\u795E\u696D\u30B9\u30C6\u30C3\u30D7", "Miracle Step"], "201142": ["\u8EFD\u3084\u304B\u30B9\u30C6\u30C3\u30D7", "Light Step"], "201151": ["\u72EC\u5360\u529B", "Monopolizer"], "201152": ["\u675F\u7E1B", "Binding Chains"], "201161": ["\u9B45\u60D1\u306E\u3055\u3055\u3084\u304D", "Charming Whisper"], "201162": ["\u3055\u3055\u3084\u304D", "Gentle Whisper"], "201171": ["\u9577\u8DDD\u96E2\u76F4\u7DDA\u25CE", "Long Distance Straights \u25CE"], "201172": ["\u9577\u8DDD\u96E2\u76F4\u7DDA\u25CB", "Long Distance Straights \u25CB"], "201173": ["\u70C8\u98A8\u4E00\u9583", "Flash of Wind"], "201181": ["\u9577\u8DDD\u96E2\u30B3\u30FC\u30CA\u30FC\u25CE", "Long Distance Corners \u25CE"], "201182": ["\u9577\u8DDD\u96E2\u30B3\u30FC\u30CA\u30FC\u25CB", "Long Distance Corners \u25CB"], "201191": ["\u5148\u9663\u306E\u5FC3\u5F97", "Vanguard's Wisdom"], "201192": ["\u30EA\u30FC\u30C9\u30AD\u30FC\u30D7", "Keep the Lead"], "201201": ["VIP\u9854\u30D1\u30B9", "VIP Pass"], "201202": ["\u30D1\u30B9\u4E0A\u624B", "Pass Expert"], "201211": ["\u6012\u6D9B\u306E\u8FFD\u3044\u4E0A\u3052", "Tempestuous Pressure"], "201212": ["\u8FFD\u3044\u4E0A\u3052", "Press the Attack"], "201221": ["\u30B9\u30BF\u30DF\u30CA\u30B0\u30EA\u30FC\u30C9", "Stamina Greed"], "201222": ["\u30B9\u30BF\u30DF\u30CA\u30A4\u30FC\u30BF\u30FC", "Stamina Eater"], "201231": ["\u5947\u8853\u5E2B", "Conjurer"], "201232": ["\u76EE\u304F\u3089\u307E\u3057", "Smoke Screen"], "201241": ["\u9003\u3052\u76F4\u7DDA\u25CE", "Runner's Straights \u25CE"], "201242": ["\u9003\u3052\u76F4\u7DDA\u25CB", "Runner's Straights \u25CB"], "201251": ["\u9003\u3052\u30B3\u30FC\u30CA\u30FC\u25CE", "Runner's Corners \u25CE"], "201252": ["\u9003\u3052\u30B3\u30FC\u30CA\u30FC\u25CB", "Runner's Corners \u25CB"], "201253": ["\u9663\u98A8\u5186\u5203", "Gale Slash"], "201261": ["\u30B7\u30C3\u30AF\u30B9\u30BB\u30F3\u30B9", "Sixth Sense"], "201262": ["\u5371\u967A\u56DE\u907F", "Danger Avoidance"], "201271": ["\u30C8\u30C3\u30D7\u30E9\u30F3\u30CA\u30FC", "Top Runner"], "201272": ["\u5148\u982D\u30D7\u30E9\u30A4\u30C9", "Lead Pride"], "201281": ["\u3058\u3083\u3058\u3083\u30A6\u30DE\u5A18", "Wild Girl"], "201282": ["\u52E2\u3044\u4EFB\u305B", "Leave It to Vigor!"], "201291": ["\u518D\u71C3\u713C", "Recombustion"], "201292": ["\u4E8C\u306E\u77E2", "Next Steps"], "201302": ["\u30EA\u30B9\u30BF\u30FC\u30C8", "Restart"], "201311": ["\u5148\u884C\u76F4\u7DDA\u25CE", "Leader's Straights \u25CE"], "201312": ["\u5148\u884C\u76F4\u7DDA\u25CB", "Leader's Straights \u25CB"], "201321": ["\u5148\u884C\u30B3\u30FC\u30CA\u30FC\u25CE", "Leader's Corners \u25CE"], "201322": ["\u5148\u884C\u30B3\u30FC\u30CA\u30FC\u25CB", "Leader's Corners \u25CB"], "201331": ["\u6280\u5DE7\u6D3E", "Technician"], "201332": ["\u5DE7\u307F\u306A\u30B9\u30C6\u30C3\u30D7", "Clever Step"], "201341": ["\u6C7A\u610F\u306E\u76F4\u6ED1\u964D", "Straight Down Resolution"], "201342": ["\u76F4\u6ED1\u964D", "Straight Down"], "201351": ["\u98DF\u3044\u3057\u3093\u574A", "Big Eater"], "201352": ["\u6804\u990A\u88DC\u7D66", "Nutritional Supplements"], "201361": ["\u304F\u3058\u3051\u306C\u7CBE\u795E", "Unbreakable Spirit"], "201362": ["\u307E\u304D\u76F4\u3057", "Redo"], "201371": ["\u5E7B\u60D1\u306E\u304B\u304F\u4E71", "Glamorous Perturbation"], "201372": ["\u304B\u304F\u4E71", "Perturbation"], "201381": ["\u5DEE\u3057\u76F4\u7DDA\u25CE", "Betweener's Straights \u25CE"], "201382": ["\u5DEE\u3057\u76F4\u7DDA\u25CB", "Betweener's Straights \u25CB"], "201383": ["\u92ED\u811A\u4E00\u9583", "Incisive Flash"], "201391": ["\u5DEE\u3057\u30B3\u30FC\u30CA\u30FC\u25CE", "Betweener's Corners \u25CE"], "201392": ["\u5DEE\u3057\u30B3\u30FC\u30CA\u30FC\u25CB", "Betweener's Corners \u25CB"], "201393": ["\u92ED\u811A\u5186\u5203", "Incisive Slash"], "201401": ["\u52AA\u529B\u5BB6", "Laborious"], "201402": ["\u304C\u3093\u3070\u308A\u5C4B", "Hard Worker"], "201411": ["\u767E\u4E07\u30D0\u30EA\u30AD", "1M Horsepower"], "201412": ["\u5341\u4E07\u30D0\u30EA\u30AD", "100K Horsepower"], "201421": ["\u30EA\u30E9\u30C3\u30AF\u30B9", "Relax"], "201422": ["\u5C0F\u4F11\u61A9", "A Little Break"], "201431": ["\u5927\u5C40\u89B3", "Seeing the Big Picture"], "201432": ["\u8AAD\u89E3\u529B", "Reading Comprehension"], "201441": ["\u516B\u65B9\u306B\u3089\u307F", "Watching All Directions"], "201442": ["\u92ED\u3044\u773C\u5149", "Sharp Gaze"], "201451": ["\u8FFD\u8FBC\u76F4\u7DDA\u25CE", "Chaser's Straights \u25CE"], "201452": ["\u8FFD\u8FBC\u76F4\u7DDA\u25CB", "Chaser's Straights \u25CB"], "201453": ["\u6708\u5F71\u4E00\u9583", "Moonlight Flash"], "201461": ["\u8FFD\u8FBC\u30B3\u30FC\u30CA\u30FC\u25CE", "Chaser's Corners \u25CE"], "201462": ["\u8FFD\u8FBC\u30B3\u30FC\u30CA\u30FC\u25CB", "Chaser's Corners \u25CB"], "201463": ["\u6708\u5F71\u5186\u5203", "Moonlight Slash"], "201471": ["\u8996\u754C\u826F\u597D\uFF01\u7570\u5E38\u306A\u3057\uFF01", "Good Visibility! All Clear!"], "201472": ["\u304A\u898B\u901A\u3057", "See Right Through"], "201481": ["\u4E0B\u6821\u5F8C\u306E\u30B9\u30DA\u30B7\u30E3\u30EA\u30B9\u30C8", "After School Specialist"], "201482": ["\u4E0B\u6821\u306E\u697D\u3057\u307F", "Winding Down"], "201491": ["\u51B7\u9759\u6C88\u7740", "Calm and Collected"], "201492": ["\u51B7\u9759", "Serene"], "201501": ["\u5929\u547D\u58EB", "Heavenly Warrior"], "201502": ["\u7B56\u58EB", "Tactician"], "201511": ["\u71B1\u3044\u307E\u306A\u3056\u3057", "Passionate Gaze"], "201512": ["\u307E\u306A\u3056\u3057", "Sightlines"], "201521": ["\u9003\u3052\u306E\u30B3\u30C4\u25CE", "Runner's Tricks \u25CE"], "201522": ["\u9003\u3052\u306E\u30B3\u30C4\u25CB", "Runner's Tricks \u25CB"], "201531": ["\u5148\u884C\u306E\u30B3\u30C4\u25CE", "Leader's Tricks \u25CE"], "201532": ["\u5148\u884C\u306E\u30B3\u30C4\u25CB", "Leader's Tricks \u25CB"], "201541": ["\u5DEE\u3057\u306E\u30B3\u30C4\u25CE", "Betweener's Tricks \u25CE"], "201542": ["\u5DEE\u3057\u306E\u30B3\u30C4\u25CB", "Betweener's Tricks \u25CB"], "201551": ["\u8FFD\u8FBC\u306E\u30B3\u30C4\u25CE", "Chaser's Tricks \u25CE"], "201552": ["\u8FFD\u8FBC\u306E\u30B3\u30C4\u25CB", "Chaser's Tricks \u25CB"], "201561": ["\u30B9\u30FC\u30D1\u30FC\u30E9\u30C3\u30AD\u30FC\u30BB\u30D6\u30F3", "Super Lucky Seven"], "201562": ["\u30E9\u30C3\u30AD\u30FC\u30BB\u30D6\u30F3", "Lucky Seven"], "201571": ["\u30B9\u30EA\u30FC\u30BB\u30D6\u30F3", "Triple 7s"], "201581": ["\u767B\u5C71\u5BB6", "Mountain Climber"], "201591": ["\u30A6\u30DE\u597D\u307F", "Big Fan"], "201592": ["\u30A6\u30DE\u30DE\u30CB\u30A2", "Uma Mania"], "201601": ["\u5730\u56FA\u3081", "Groundwork"], "201602": ["\u76E4\u77F3\u306E\u69CB\u3048", "Unshakable Stance"], "201611": ["\u5C3B\u5C3E\u4E0A\u304C\u308A", "Hold Your Tail High"], "201612": ["\u5C3B\u5C3E\u306E\u6EDD\u767B\u308A", "Tail of Victory"], "201621": ["\u3075\u308A\u7D5E\u308A", "Shake It Out"], "201631": ["\u30B7\u30F3\u30D1\u30B7\u30FC", "Sympathy"], "201641": ["\u4E00\u5339\u72FC", "Lone Wolf"], "201651": ["\u30B9\u30EA\u30C3\u30D7\u30B9\u30C8\u30EA\u30FC\u30E0", "Slipstream"], "201652": ["\u3044\u3044\u3068\u3053\u5165\u3063\u305F\uFF01", "In the Right Place!"], "201661": ["\u904A\u3073\u306F\u304A\u3057\u307E\u3044\u3063\uFF01", "Playtime's Over!"], "201662": ["\u304A\u5148\u306B\u5931\u793C\u3063\uFF01", "Sorry, Gotta Go!"], "201671": ["\u30C1\u30E3\u30FC\u30C8\u6025\u4E0A\u6607\uFF01", "Trending Charts!"], "201672": ["\u30EC\u30B3\u30E1\u30F3\u30C9", "Recommendation"], "201681": ["\u72D9\u3046\u306F\u6700\u524D\u5217\uFF01", "Aim for the Front Row!"], "201682": ["\u524D\u5217\u72D9\u3044", "Front Row Aim"], "201691": ["\u6F5C\u4F0F\u614B\u52E2", "Concealed Readiness"], "201692": ["\u9759\u304B\u306A\u547C\u5438", "Quiet Breathing"], "201701": ["\u6C7A\u6B7B\u306E\u899A\u609F", "Prepared to Die"], "201702": ["\u3042\u308A\u3063\u305F\u3051", "All That There Is"], "201801": ["\u51F8\u51F9\u30CD\u30A4\u30EB", "Uneven Nail"], "201901": ["\u9354\u8FEB\u308A\u5408\u3044", "Fierce Competition"], "201902": ["\u771F\u3063\u5411\u52DD\u8CA0", "Head-To-Head"], "202001": ["\u7802\u306E\u7384\u4EBA", "Sand Expert"], "202002": ["\u7802\u5875\u6163\u308C", "Sandstorm Practice"], "202011": ["\u771F\u6253", "Shinuchi"], "202012": ["\u5F71\u6253", "Kageuchi"], "202021": ["\u5F37\u653B\u7B56", "Daring Attack"], "202022": ["\u65E9\u4ED5\u639B\u3051", "Early Gambit"], "202031": ["\u535A\u6253\u3046\u3061", "Gamester"], "202032": ["\u3042\u3084\u3057\u3052\u306A\u4F5C\u6226", "Questionable Strategy"], "202041": ["\u610F\u6C17\u885D\u5929", "In High Spirits"], "202042": ["\u8EFD\u3044\u8DB3\u53D6\u308A", "Nimble Step"], "202051": ["\u5927\u9003\u3052", "Great Escape"], "202061": ["\u65E5\u672C\u4E00\u306E\u30A6\u30DE\u5A18", "#1 Horsegirl in Japan"], "202071": ["\u6CF0\u7136\u81EA\u82E5", "Self-Possessed"], "202072": ["\u30DE\u30A4\u30DA\u30FC\u30B9", "My Own Pace"], "202081": ["\u8D77\u6B7B\u56DE\u751F", "Rise From the Ashes"], "202082": ["\u30EF\u30F3\u30C1\u30E3\u30F3\u30B9", "One Chance"], "202091": ["\u6C17\u708E\u4E07\u4E08", "Burning Spirit"], "202092": ["\u95D8\u4E89\u5FC3", "Fighting Spirit"], "202101": ["\u9AD8\u63DA\u611F", "Elation"], "202102": ["\u524D\u306E\u3081\u308A", "Tumbling Forward"], "202111": ["\u7834\u7AF9\u306E\u52E2\u3044", "Unstoppable Force"], "202112": ["\u6C17\u5408\u5341\u5206", "Sufficient Spirit"], "202121": ["\u5927\u80C6\u4E0D\u6575", "Daredevil"], "202122": ["\u6050\u308C\u306C\u5FC3", "Fearless Heart"], "202131": ["\u8352\u3076\u308B\u65CB\u98A8", "Wild Whirlwind"], "202132": ["\u6C17\u8FEB\u3092\u8FBC\u3081\u3066", "With Verve"], "202141": ["\u30A2\u30BF\u30B7\u306B\u6307\u56F3\u3057\u306A\u3044\u3067\uFF01\uFF01", "Don't Tell Me What to Do!"], "202151": ["\u52C7\u5F80\u9081\u9032", "Pushing Forward"], "202152": ["\u30D5\u30EB\u30B9\u30ED\u30C3\u30C8\u30EB", "Full Throttle"], "202161": ["\u81EA\u5236\u5FC3", "Self-Control"], "202171": ["\u81F3\u9AD8\u306E\u30C0\u30A6\u30F3\u30D2\u30E9\u30FC", "Supreme Downhiller"], "202172": ["\u4E0B\u308A\u5742\u5DE7\u8005", "Downhill Adept"], "202181": ["99 Problems", "99 Problems"], "202191": ["\u4E00\u610F\u5C02\u5FC3", "Single-Minded"], "202192": ["\u629C\u304B\u308A\u306A\u3057", "Faultless"], "202201": ["\u5DDD\u5D0E\u30EC\u30FC\u30B9\u5834\u25CE", "Kawasaki Racetrack \u25CE"], "202202": ["\u5DDD\u5D0E\u30EC\u30FC\u30B9\u5834\u25CB", "Kawasaki Racetrack \u25CB"], "202203": ["\u5DDD\u5D0E\u30EC\u30FC\u30B9\u5834\xD7", "Kawasaki Racetrack \xD7"], "202211": ["\u8239\u6A4B\u30EC\u30FC\u30B9\u5834\u25CE", "Funabashi Racetrack \u25CE"], "202212": ["\u8239\u6A4B\u30EC\u30FC\u30B9\u5834\u25CB", "Funabashi Racetrack \u25CB"], "202213": ["\u8239\u6A4B\u30EC\u30FC\u30B9\u5834\xD7", "Funabashi Racetrack \xD7"], "202221": ["\u76DB\u5CA1\u30EC\u30FC\u30B9\u5834\u25CE", "Morioka Racetrack \u25CE"], "202222": ["\u76DB\u5CA1\u30EC\u30FC\u30B9\u5834\u25CB", "Morioka Racetrack \u25CB"], "202223": ["\u76DB\u5CA1\u30EC\u30FC\u30B9\u5834\xD7", "Morioka Racetrack \xD7"], "202231": ["\u30CA\u30A4\u30BF\u30FC\u25CE", "Nocturnal \u25CE"], "202232": ["\u30CA\u30A4\u30BF\u30FC\u25CB", "Nocturnal \u25CB"], "202233": ["\u30CA\u30A4\u30BF\u30FC\xD7", "Nocturnal \xD7"], "202241": ["\u5C0F\u56DE\u308A\u25CE", "Tight Turns \u25CE"], "202242": ["\u5C0F\u56DE\u308A\u25CB", "Tight Turns \u25CB"], "202243": ["\u5C0F\u56DE\u308A\xD7", "Tight Turns \xD7"], "202251": ["\u4EA4\u6D41\u91CD\u8CDE\u25CE", "Exchange Races \u25CE"], "202252": ["\u4EA4\u6D41\u91CD\u8CDE\u25CB", "Exchange Races \u25CB"], "202253": ["\u4EA4\u6D41\u91CD\u8CDE\xD7", "Exchange Races \xD7"], "202261": ["\u52DD\u5229\u306E\u6A5F\u904B", "Victory Opportunity"], "202262": ["\u660E\u308B\u3044\u5146\u3057", "Promising Omen"], "202271": ["\u6372\u571F\u91CD\u6765", "Redoubled Efforts"], "202272": ["\u76DB\u308A\u8FD4\u3057", "Turnaround"], "202281": ["\u5168\u901F\u524D\u9032\uFF01", "Full Speed Ahead!"], "202282": ["\u307E\u3063\u3057\u3050\u3089", "At Full Speed"], "202291": ["\u660E\u93E1\u6B62\u6C34", "Clear and Serene"], "202292": ["\u51B4\u3048\u308B\u601D\u8003", "Clear Head"], "202301": ["\u512A\u96C5\u306A\u7802\u6D74\u3073", "Leisurely Dust Bath"], "202302": ["\u7802\u6D74\u3073\u25CB", "Dust Bath \u25CB"], "202303": ["\u7802\u6D74\u3073\xD7", "Dust Bath \xD7"], "202311": ["\u76EE\u6307\u305B\u30BB\u30F3\u30BF\u30FC\uFF01", "Aim for the Center!"], "202312": ["\u610F\u6C17\u8FBC\u307F\u5341\u5206", "Full of Zeal"], "202321": ["\u7206\u8D70\u30E2\u30FC\u30C9\uFF01", "Blast Mode!"], "202322": ["\u6025\u6D6E\u4E0A", "Rapid Ascent"], "202331": ["\u629C\u7FA4\u306E\u8E0F\u307F\u8FBC\u307F", "Outstanding Step"], "202332": ["\u8E0F\u307F\u8FBC\u307F\u4E0A\u624B", "Skillful Step"], "202341": ["\u6CE5\u3093\u3053\u30DE\u30A4\u30B9\u30BF\u30FC", "Mud Master"], "202342": ["\u6CE5\u904A\u3073\u25CE", "Mud Play \u25CE"], "202343": ["\u6CE5\u904A\u3073\u25CB", "Mud Play \u25CB"], "202344": ["\u6CE5\u904A\u3073\xD7", "Mud Play \xD7"], "202351": ["\u7802\u4E0A\u306E\u821E\u59EB", "Dancer of the Sands"], "202352": ["\u571F\u7159", "Cloud of Dust"], "202361": ["\u6CB9\u65AD\u5927\u6575", "Don't Let Your Guard Down"], "202362": ["\u5727\u8FEB\u611F", "Pressing Feeling"], "202371": ["\u30A2\u30F3\u30B9\u30C8\u30C3\u30D1\u30D6\u30EB", "Unstoppable"], "202372": ["\u653B\u3081\u306E\u59FF\u52E2", "Attack Stance"], "202381": ["\u30D6\u30EC\u30A4\u30AF\u30B9\u30EB\u30FC", "Breakthrough"], "202382": ["\u6253\u958B\u7B56", "Breakthrough Plan"], "202391": ["\u51FA\u529B1000\uFF05\uFF01", "1000% Output!"], "202392": ["\u3057\u3083\u304B\u308A\u304D", "Frantic State"], "202401": ["\u96FB\u5149\u77F3\u706B", "Lightning Speed"], "202402": ["\u4E00\u8DB3\u98DB\u3073", "Mighty Leap"], "202411": ["\u98A8\u96F2\u306E\u5FD7", "Winds of Change"], "202412": ["\u5411\u4E0A\u5FC3", "Ambitions"], "202421": ["\u7121\u6211\u5922\u4E2D", "Lose Yourself"], "202422": ["\u304C\u3080\u3057\u3083\u3089", "Devil-May-Care"], "202431": ["\u5FEB\u9032\u6483", "Steady Advance"], "202432": ["\u78BA\u304B\u306A\u8DB3\u53D6\u308A", "Firm Step"], "202441": ["\u52DD\u8CA0\u5E2B", "Gambler"], "202442": ["\u3084\u307E\u3063\u3051", "Gambling Spirit"], "202451": ["\u30C8\u30C3\u30D7\u30AE\u30A2", "Top Gear"], "202452": ["\u30AD\u30EC\u308B\u811A", "Razor-Sharp Stride"], "202461": ["\u8E0F\u307E\u305B\u306C\u5F71", "Untouchable Shadow"], "202462": ["\u7C98\u308A\u8170", "Steadfast"], "202471": ["\u731B\u8FFD", "Hot Pursuit"], "202472": ["\u98DF\u3089\u3044\u3064\u304D", "Tooth and Tail"], "202481": ["\u602A\u7269", "Monster"], "202482": ["\u672C\u9818\u767A\u63EE", "True Worth"], "202491": ["\u629C\u7FA4\u306E\u5207\u308C\u5473", "Unrivaled Wits"], "202492": ["\u5207\u308C\u5473", "Witful"], "202501": ["\u906E\u4E8C\u7121\u4E8C", "Reckless"], "202502": ["\u5411\u3053\u3046\u898B\u305A", "Rushing in Blind"], "202511": ["1\u756A\u4EBA\u6C17\u3067\u30E4\u30D0\u305F\u3093", "Favorite, For Reals?!"], "202521": ["\u5929\u8863\u7121\u7E2B", "Seamless"], "202522": ["\u578B\u7834\u308A", "Mold Breaker"], "202531": ["\u512A\u4F4D\u5F62\u6210", "Ascendance"], "202532": ["\u3057\u3068\u3084\u304B\u306A\u8DB3\u53D6\u308A", "Graceful Step"], "202541": ["\u5A01\u98A8\u5802\u3005", "Dignified"], "202542": ["\u30D7\u30EC\u30C3\u30B7\u30E3\u30FC", "Pressure"], "202551": ["\u795E\u901F", "Divine Speed"], "202552": ["\u5FEB\u901F", "Rapid"], "202561": ["\u4E00\u767A\u5FC5\u4E2D", "One-shot"], "202562": ["\u30ED\u30C3\u30AF\u30AA\u30F3", "Lock On"], "202571": ["\u672A\u6765\u3092\u62D3\u304F\u5947\u8DE1", "Miracle Pathmaker"], "202581": ["\u8131\u514E\u306E\u5148\u3078", "Ahead of the Game"], "202582": ["\u8107\u76EE\u3082\u632F\u3089\u305A", "Stay the Course"], "202591": ["\u4E00\u6C17\u5475\u6210", "In One Fell Swoop"], "202592": ["\u5927\u6025\u304E", "Great Haste"], "202601": ["\u30EB\u30DF\u30CD\u30BB\u30F3\u30B9", "Luminescence"], "202602": ["\u30A4\u30B0\u30CB\u30C3\u30B7\u30E7\u30F3", "Ignition"], "202612": ["\u6EA2\u308C\u308B\u60C5\u71B1", "Overflowing Passion"], "202621": ["\u7A81\u6483\u9B42", "Blitzing Spirit"], "202622": ["\u9032\u51FA\u958B\u59CB", "On the Move"], "202641": ["\u5343\u91CC\u306E\u9053", "Thousand-Mile Journey"], "202642": ["\u4E00\u6B69\u304B\u3089", "From the First Step"], "202651": ["\u96F2\u84B8\u7ADC\u5909", "Cloud Dragon's Metamorphosis"], "202652": ["\u81EA\u4FE1\u5BB6", "Self-Assured"], "202661": ["\u6602\u308B\u9F13\u52D5", "Surging Beat"], "202662": ["\u8FBC\u307F\u4E0A\u3052\u308B\u71B1", "Rising Passion"], "202671": ["\u30CF\u30A4\u30DC\u30EB\u30C6\u30FC\u30B8", "High Voltage"], "202672": ["\u5FC3\u5F3E\u3093\u3067", "High Hopes"], "202681": ["\u30D6\u30C1\u2606\u30A2\u30B2\u2191\u30D0\u30A4\u30D6\u30B9", "Seriously\u2606Good\u2191Vibes"], "202682": ["\u30D0\u30A4\u30D6\u30B9\u4E0A\u6607", "Up the Vibes"], "202691": ["\u8AB0\u3088\u308A\u524D\u3078\uFF01", "Further Than Anyone"], "202692": ["\u4E00\u756A\u4E57\u308A", "Early Bird"], "202701": ["\u30B7\u30F3\u30AE\u30E5\u30E9\u30EA\u30C6\u30A3", "Singularity"], "202702": ["\u63A2\u6C42\u5FC3", "Inquisitive Mind"], "202711": ["\u738B\u624B", "Check"], "202712": ["\u4F1A\u5FC3\u306E\u4E00\u6B69", "Satisfying Pace"], "202721": ["\u30CD\u30D0\u30FC\u30AE\u30D6\u30A2\u30C3\u30D7", "Never Give Up"], "202722": ["\u6298\u308C\u306A\u3044\u5FC3", "Unbreakable Mind"], "202731": ["\u30ED\u30F3\u30B7\u30E3\u30F3\u30EC\u30FC\u30B9\u5834\u25CE", "Longchamp Racecourse \u25CE"], "202732": ["\u30ED\u30F3\u30B7\u30E3\u30F3\u30EC\u30FC\u30B9\u5834\u25CB", "Longchamp Racecourse \u25CB"], "202733": ["\u30ED\u30F3\u30B7\u30E3\u30F3\u30EC\u30FC\u30B9\u5834\xD7", "Longchamp Racecourse \xD7"], "202734": ["\u30ED\u30F3\u30B7\u30E3\u30F3\u306E\u7533\u3057\u5B50", "Child of Longchamp"], "202741": ["\u5341\u5168\u5341\u7F8E", "Pure Perfection"], "202742": ["\u54C1\u884C\u65B9\u6B63", "Refined Conduct"], "202751": ["\u6C17\u9AA8\u7A1C\u7A1C", ""], "202752": ["\u3072\u305F\u3080\u304D\u524D\u9032", ""], "210011": ["\u30A2\u30AA\u30CF\u30EB\u71C3\u713C\u30FB\u901F", "Aoharu Burning\u30FBSpeed"], "210012": ["\u30A2\u30AA\u30CF\u30EB\u70B9\u706B\u30FB\u901F", "Aoharu Ignition\u30FBSpeed"], "210021": ["\u30A2\u30AA\u30CF\u30EB\u71C3\u713C\u30FB\u4F53", "Aoharu Burning\u30FBStamina"], "210022": ["\u30A2\u30AA\u30CF\u30EB\u70B9\u706B\u30FB\u4F53", "Aoharu Ignition\u30FBStamina"], "210031": ["\u30A2\u30AA\u30CF\u30EB\u71C3\u713C\u30FB\u529B", "Aoharu Burning\u30FBPower"], "210032": ["\u30A2\u30AA\u30CF\u30EB\u70B9\u706B\u30FB\u529B", "Aoharu Ignition\u30FBPower"], "210041": ["\u30A2\u30AA\u30CF\u30EB\u71C3\u713C\u30FB\u6839", "Aoharu Burning\u30FBGuts"], "210042": ["\u30A2\u30AA\u30CF\u30EB\u70B9\u706B\u30FB\u6839", "Aoharu Ignition\u30FBGuts"], "210051": ["\u30A2\u30AA\u30CF\u30EB\u71C3\u713C\u30FB\u8CE2", "Aoharu Burning\u30FBWisdom"], "210052": ["\u30A2\u30AA\u30CF\u30EB\u70B9\u706B\u30FB\u8CE2", "Aoharu Ignition\u30FBWisdom"], "210061": ["\u4E00\u756A\u661F", "The First Star"], "210062": ["\u7DBA\u7F85\u661F", "Glittering Stars"], "210071": ["\u30AD\u30DF\u3068\u52DD\u3061\u305F\u3044", "I Want to Win With You"], "210072": ["\u5922\u306E\u9014\u4E2D", "Halfway to a Dream"], "210081": ["\u9650\u754C\u306E\u5148\u3078", "Beyond the Limits"], "210082": ["\u524D\u3060\u3051\u898B\u636E\u3048\u3066", "Eyes on the Horizon"], "210091": ["\u30EC\u30FC\u30B9\u306E\u771F\u9AC4\u30FB\u901F", "Essence of Racing\u30FBSpeed"], "210101": ["\u30EC\u30FC\u30B9\u306E\u771F\u9AC4\u30FB\u4F53", "Essence of Racing\u30FBStamina"], "210111": ["\u30EC\u30FC\u30B9\u306E\u771F\u9AC4\u30FB\u529B", "Essence of Racing\u30FBPower"], "210121": ["\u30EC\u30FC\u30B9\u306E\u771F\u9AC4\u30FB\u6839", "Essence of Racing\u30FBGuts"], "210131": ["\u30EC\u30FC\u30B9\u306E\u771F\u9AC4\u30FB\u8CE2", "Essence of Racing\u30FBWisdom"], "210141": ["\u30EC\u30FC\u30B9\u306E\u771F\u9AC4\u30FB\u5FC3", "Essence of Racing\u30FBEnergy"], "210261": ["\u592A\u967D\u306E\u53E1\u667A", "Wisdom of the Sun"], "210262": ["\u967D\u306E\u52A0\u8B77", "Blessing of the Sun"], "210271": ["\u5927\u6D77\u306E\u53E1\u667A", "Wisdom of the Ocean"], "210272": ["\u6D77\u306E\u52A0\u8B77", "Blessing of the Ocean"], "210281": ["\u5927\u5730\u306E\u53E1\u667A", "Wisdom of the Land"], "210282": ["\u5730\u306E\u52A0\u8B77", "Blessing of the Land"], "210291": ["\u6700\u9AD8\u5CF0\u306E\u5922", "Dreaming of the Peak"], "210292": ["\u60F3\u3044\u3092\u80CC\u8CA0\u3063\u3066", "Bearer of Hope"], "300011": ["\u7652\u3048\u306A\u3044\u6E07\u304D", "Unquenched Thirst"], "300021": ["\u5909\u308F\u3089\u306C\u307E\u307E\u3067", "Unchanged"], "300031": ["\u5922\u306E\u666F\u8272\u3078", "Scenery of Dreams"], "300041": ["\u62E1\u304C\u308B\u6050\u308C", "Spreading Fear"], "300051": ["\u9BAE\u660E\u306B\u306A\u308B\u754F\u6016", "Unfolding Horror"], "300061": ["\u5922\u306E\u8D70\u308A", "Dream Run"], "300071": ["\u672A\u77E5\u3078\u306E\u8D70\u308A\u3092\u898B\u305B\u3066\u304F\u308C", "Running Towards the Unknown"], "300081": ["\u307B\u3093\u306B\u3083\u304B\u5FEB\u8D70\u7948\u9858\uFF01", "Pray For a Fast Run!"], "300091": ["\u53CB\u3068\u3057\u3066\u3001\u30E9\u30A4\u30D0\u30EB\u3068\u3057\u3066", "As a Friend, as a Rival"], "300101": ["\u61A7\u308C\u306E\u30A8\u30FC\u30EB", "Cheers of Admiration"], "300111": ["\u80F8\u3092\u5F35\u308C\u30C0\u30FC\u30D3\u30FC\u30A6\u30DE\u5A18", "Proud Derby Girl"], "300121": ["\u30C1\u30FC\u30E0\u306E\u4E00\u54E1\u3068\u3057\u3066", "As a Member of the Team"], "300131": ["\u65E5\u672C\u7DCF\u5927\u5C06", "Supreme Commander of Japan"], "300141": ["\u4E0D\u6493\u4E0D\u5C48", "Dauntlessness"], "9000011": ["\u30AB\u30FC\u30CB\u30D0\u30EB\u30DC\u30FC\u30CA\u30B9\uFF08\u7D99\u627F\uFF09", "Carnival Bonus (obsolete) (inherited)"], "9000012": ["\u30AB\u30FC\u30CB\u30D0\u30EB\u30DC\u30FC\u30CA\u30B9\uFF08\u7D99\u627F\uFF09", "Carnival Bonus (obsolete) (inherited)"], "9000013": ["\u30AB\u30FC\u30CB\u30D0\u30EB\u30DC\u30FC\u30CA\u30B9\uFF08\u7D99\u627F\uFF09", "Carnival Bonus (obsolete) (inherited)"], "9000014": ["\u30AB\u30FC\u30CB\u30D0\u30EB\u30DC\u30FC\u30CA\u30B9\uFF08\u7D99\u627F\uFF09", "Carnival Bonus (obsolete) (inherited)"], "9000015": ["\u30AB\u30FC\u30CB\u30D0\u30EB\u30DC\u30FC\u30CA\u30B9\uFF08\u7D99\u627F\uFF09", "Carnival Bonus (inherited)"], "900011": ["\u30B7\u30E5\u30FC\u30C6\u30A3\u30F3\u30B0\u30B9\u30BF\u30FC\uFF08\u7D99\u627F\uFF09", "Shooting Star (inherited)"], "900021": ["\u5148\u982D\u306E\u666F\u8272\u306F\u8B72\u3089\u306A\u3044\u2026\uFF01\uFF08\u7D99\u627F\uFF09", "I'm Not Giving up the Lead! (inherited)"], "900031": ["\u7A76\u6975\u30C6\u30A4\u30AA\u30FC\u30B9\u30C6\u30C3\u30D7\uFF08\u7D99\u627F\uFF09", "Ultimate Teio Step (inherited)"], "900041": ["\u7D05\u7114\u30AE\u30A2/LP1211-M\uFF08\u7D99\u627F\uFF09", "Red Flame Gear/LP1211-M (inherited)"], "900051": ["\u714C\u661F\u306E\u30F4\u30A9\u30FC\u30C9\u30F4\u30A3\u30EB\uFF08\u7D99\u627F\uFF09", "Glittering Star Vaudeville (inherited)"], "900061": ["\u52DD\u5229\u306E\u9F13\u52D5\uFF08\u7D99\u627F\uFF09", "The Beat of Victory (inherited)"], "900071": ["\u4E0D\u6C88\u8266\u3001\u629C\u9328\u30A9\u30C3\uFF01\uFF08\u7D99\u627F\uFF09", "Unsinkable Ship, Anchored! (inherited)"], "900081": ["\u30AB\u30C3\u30C6\u30A3\u30F3\u30B0\xD7DRIVE\uFF01\uFF08\u7D99\u627F\uFF09", "Cutting \xD7 DRIVE! (inherited)"], "900091": ["\u30D6\u30EA\u30EA\u30A2\u30F3\u30C8\u30FB\u30EC\u30C3\u30C9\u30A8\u30FC\u30B9\uFF08\u7D99\u627F\uFF09", "Brilliant Red Ace (inherited)"], "900101": ["\u30F4\u30A3\u30AF\u30C8\u30EA\u30FC\u30B7\u30E7\u30C3\u30C8\uFF01\uFF08\u7D99\u627F\uFF09", "Victory Shot! (inherited)"], "900101111": ["\u306F\u3089\u307A\u3053\u5927\u5C06\uFF08\u7D99\u627F\uFF09", "Hungry Commander (inherited)"], "900101211": ["\u5922\u53F6\u3048\u308B\u672B\u811A\uFF08\u7D99\u627F\uFF09", "Dream-fulfilling Sprint (inherited)"], "900102111": ["\u771F\u590F\u306E\u601D\u3044\u5207\u308A\uFF08\u7D99\u627F\uFF09", "Midsummer Resolution (inherited)"], "900102211": ["\u771F\u590F\u306E\u7DCF\u5927\u5C06\uFF08\u7D99\u627F\uFF09", "Midsummer Commander (inherited)"], "900103111": ["\u6012\u6D9B\u306E\u51FA\u9663\uFF08\u7D99\u627F\uFF09", "Tempestuous Attack (inherited)"], "900103211": ["\u65E5\u4E4B\u672C\u4E00\u306E\u30C9\u6839\u6027\uFF08\u7D99\u627F\uFF09", "Guts of the Rising Sun (inherited)"], "900111": ["\u7CBE\u795E\u4E00\u5230\u4F55\u4E8B\u304B\u6210\u3089\u3056\u3089\u3093\uFF08\u7D99\u627F\uFF09", "Where There's a Will, There's a Way (inherited)"], "900121": ["\u30BF\u30A4\u30DE\u30F3\uFF01\u30C7\u30C3\u30C9\u30D2\u30FC\u30C8\uFF01\uFF08\u7D99\u627F\uFF09", "One-On-One! Dead Heat! (inherited)"], "900131": ["\u8CB4\u9855\u306E\u4F7F\u547D\u3092\u679C\u305F\u3059\u3079\u304F\uFF08\u7D99\u627F\uFF09", "Fulfilling Your Noble Duty (inherited)"], "900141": ["\u30D7\u30E9\u30F3\u30C1\u30E3\u2606\u30AC\u30CA\u30C9\u30FC\u30EB\uFF08\u7D99\u627F\uFF09", "Plancha \u2606 Ganador (inherited)"], "900151": ["\u30F4\u30A3\u30C3\u30C8\u30FC\u30EA\u30A2\u306B\u6367\u3050\u821E\u8E0F\uFF08\u7D99\u627F\uFF09", "Dance for Vittoria (inherited)"], "900161": ["Shadow Break\uFF08\u7D99\u627F\uFF09", "Shadow Break (inherited)"], "900171": ["\u6C5D\u3001\u7687\u5E1D\u306E\u795E\u5A01\u3092\u898B\u3088\uFF08\u7D99\u627F\uFF09", "Thou, Witness the Heavenly Might of the Emperor (inherited)"], "900181": ["\u30D6\u30EC\u30A4\u30BA\u30FB\u30AA\u30D6\u30FB\u30D7\u30E9\u30A4\u30C9\uFF08\u7D99\u627F\uFF09", "Blaze of Pride (inherited)"], "900191": ["\u5C0A\u307F\u2606\uFF97\uFF7D\uFF84\uFF7D\uFF8A\uFF9F\u2014(\uFF9F\u2200\uFF9F)\u2014\uFF84!\uFF08\u7D99\u627F\uFF09", "Kyuute\u2606Last SpuU(\uFF9F\u2200\uFF9F)Uurt! (inherited)"], "900201": ["\u30A2\u30F3\u30B0\u30EA\u30F3\u30B0\xD7\u30B9\u30AD\u30FC\u30DF\u30F3\u30B0\uFF08\u7D99\u627F\uFF09", "Angling\xD7Scheming (inherited)"], "900201111": ["\u6700\u5927\u96C6\u4E2D\uFF08\u7D99\u627F\uFF09", "Perfect Concentration (inherited)"], "900201211": ["\u7570\u6B21\u5143\u306E\u9003\u4EA1\u8005\uFF08\u7D99\u627F\uFF09", "Dimensional Runaway (inherited)"], "900202111": ["\u7460\u7483\u8272\u30A8\u30B9\u30B1\u30A4\u30D7\uFF08\u7D99\u627F\uFF09", "Lapis Lazuli Escape (inherited)"], "900202211": ["\u84BC\u5929\u3092\u99C6\u3051\u308B\u30E9\u30FC\u30D5\u30A1\u30AC\uFF08\u7D99\u627F\uFF09", "Sky-Striding R\xE1faga (inherited)"], "900211": ["\u767D\u3044\u7A32\u59BB\u3001\u898B\u305B\u305F\u308B\u3067\uFF01\uFF08\u7D99\u627F\uFF09", "Imma Show You White Lightning! (inherited)"], "900221": ["Fairy tale\uFF08\u7D99\u627F\uFF09", "Fairy Tale (inherited)"], "900231": ["\u2234win Q.E.D.\uFF08\u7D99\u627F\uFF09", "\u2234win Q.E.D. (inherited)"], "900241": ["\u3072\u3089\u3081\u304D\u2606\u30E9\u30F3\u30C7\u30A3\u30F3\u30B0\uFF08\u7D99\u627F\uFF09", "Inspiration \u2606 Landing (inherited)"], "900251": ["\u30A2\u30CA\u30BF\u30F2\u30FB\u30AA\u30A4\u30AB\u30B1\u30C6\uFF08\u7D99\u627F\uFF09", "Chasing After You (inherited)"], "900261": ["G00 1st.F\u221E;\uFF08\u7D99\u627F\uFF09", "G00 1st.F\u221E; (inherited)"], "900271": ["\u30EC\u30C3\u30C4\u30FB\u30A2\u30CA\u30DC\u30EA\u30C3\u30AF\uFF01\uFF08\u7D99\u627F\uFF09", "Let's Anabolic! (inherited)"], "900281": ["I'M\u2606FULL\u2606SPEED!!\uFF08\u7D99\u627F\uFF09", "I'M\u2606FULL\u2606SPEED!! (inherited)"], "900291": ["\u3086\u304D\u3042\u304B\u308A\u3001\u304A\u3044\u304B\u3051\u3066\uFF08\u7D99\u627F\uFF09", "Chasing the Snowlight (inherited)"], "900301": ["\u30D6\u30EB\u30FC\u30ED\u30FC\u30BA\u30C1\u30A7\u30A4\u30B5\u30FC\uFF08\u7D99\u627F\uFF09", "Blue Rose Chaser (inherited)"], "900301111": ["\u5929\u624D\u7684\u6280\u5DE7\uFF08\u7D99\u627F\uFF09", "Genius Technique (inherited)"], "900301211": ["\u5E1D\u738B\u30B9\u30C6\u30C3\u30D7\uFF08\u7D99\u627F\uFF09", "Teio Step (inherited)"], "900302111": ["\u30EC\u30FC\u30B9\u306E\u5929\u624D\uFF08\u7D99\u627F\uFF09", "Racing Genius (inherited)"], "900302211": ["\u5730\u5E73\u306E\u5F7C\u65B9\u307E\u3067\uFF08\u7D99\u627F\uFF09", "Beyond the Horizon (inherited)"], "900303111": ["\u5929\u8CE6\u306E\u8EAB\u3054\u306A\u3057\uFF08\u7D99\u627F\uFF09", " (inherited)"], "900303211": ["\u76E4\u697D\u904A\u5B09\uFF08\u7D99\u627F\uFF09", " (inherited)"], "900311": ["\u30C1\u30E3\u30FC\u30B8\u5B8C\u4E86\uFF01\u5168\u901F\u524D\u9032\uFF01\uFF08\u7D99\u627F\uFF09", "Charge Complete! Full Speed Ahead! (inherited)"], "900321": ["U=ma2\uFF08\u7D99\u627F\uFF09", "U=ma2 (inherited)"], "900331": ["\u30C7\u30A3\u30AA\u30B9\u30AF\u30ED\u30A4\u306E\u6D41\u661F\uFF08\u7D99\u627F\uFF09", "Meteor of Dioscuri (inherited)"], "900341": ["\u5FEB\u8D70\u304B\u306A\u3001\u5FEB\u8D70\u304B\u306A\uFF01\uFF08\u7D99\u627F\uFF09", "Fast Running, Fast Running! (inherited)"], "900351": ["\u52DD\u5229\u306E\u30C1\u30B1\u30C3\u30C8\u3092\u3001\u541B\u306B\u30C3\uFF01\uFF08\u7D99\u627F\uFF09", "The Ticket to Victory, for You! (inherited)"], "900361": ["trigger:BEAT\uFF08\u7D99\u627F\uFF09", "trigger:BEAT (inherited)"], "900371": ["Schwarzes Schwert\uFF08\u7D99\u627F\uFF09", "Schwarzes Schwert (inherited)"], "900381": ["#LookatCurren\uFF08\u7D99\u627F\uFF09", "#LookatCurren (inherited)"], "900391": ["\u59EB\u305F\u308B\u3082\u306E\u3001\u52DD\u5229\u3092\u3053\u306E\u624B\u306B\uFF08\u7D99\u627F\uFF09", "Victory Befitting a Princess (inherited)"], "900401": ["KEEP IT REAL.\uFF08\u7D99\u627F\uFF09", "KEEP IT REAL. (inherited)"], "900401111": ["\u304B\u3063\u98DB\u3070\u3059\u308F\u3088\uFF01\uFF08\u7D99\u627F\uFF09", "Blasting Off! (inherited)"], "900401211": ["\u7D05\u84EE\u306E\u30AA\u30FC\u30D0\u30FC\u30EC\u30D6\uFF08\u7D99\u627F\uFF09", "Crimson Over-revving (inherited)"], "900402111": ["\u30C9\u30AD\u30C3\u2606\u3058\u3083\u3058\u3083\u30A6\u30DE\u5A18\uFF01\uFF08\u7D99\u627F\uFF09", "Dazzling\u2606Wild Girl (inherited)"], "900402211": ["\u304A\u7ACB\u3061\u53F0\u306E\u652F\u914D\u8005\uFF08\u7D99\u627F\uFF09", "Ruler of the Stage (inherited)"], "900411": ["\u512A\u7B49\u751F\xD7\u30D0\u30AF\u30B7\u30F3\uFF1D\u5927\u52DD\u5229\u30C3\uFF08\u7D99\u627F\uFF09", "Honor Student x Bakushin = Big Victory (inherited)"], "900421": ["\u300EI'm possible\u300F\uFF08\u7D99\u627F\uFF09", "\u300EI'm Possible\u300F (inherited)"], "900431": ["Ding Dong Boo\uFF08\u7D99\u627F\uFF09", "Ding Dong Boo (inherited)"], "900441": ["\u3044\u305F\u3060\u304D\u2606\u30B9\u30C8\u30EC\u30EA\u30C1\u30A2\uFF01\uFF08\u7D99\u627F\uFF09", "You're Mine \u2606 Strelitzia (inherited)"], "900451": ["\u30D4\u30E5\u30EA\u30C6\u30A3\u30AA\u30D6\u30CF\u30FC\u30C8\uFF08\u7D99\u627F\uFF09", "Purity of Heart (inherited)"], "900461": ["\u30AD\u30E9\u30AD\u30E9\u2606STARDOM\uFF08\u7D99\u627F\uFF09", "Sparkling\u2606STARDOM (inherited)"], "900471": ["\u63B2\u3052\u3088\u3001\u5DF1\u304C\u9B42\u306E\u5263\u3092\uFF01\uFF08\u7D99\u627F\uFF09", "Raise Thy Soul's Sword! (inherited)"], "900481": ["YEAH\u2606VIVID TIME!\uFF08\u7D99\u627F\uFF09", "YEAH\u2606VIVID TIME! (inherited)"], "900491": ["\u5263\u30F6\u5CF0\u3088\u308A\u3001\u72C2\u6C17\u306B\u55E4\u3048\uFF08\u7D99\u627F\uFF09", "Laugh in the Face of Danger (inherited)"], "900501": ["Nemesis\uFF08\u7D99\u627F\uFF09", "Nemesis (inherited)"], "900501111": ["\u8F1D\u304F\u30C8\u30C3\u30D7\u30B9\u30BF\u30A1\uFF08\u7D99\u627F\uFF09", "Sparkling Top Star (inherited)"], "900501211": ["\u30A8\u30F3\u30BF\u30FC\u30C6\u30A4\u30CA\u30FC\uFF08\u7D99\u627F\uFF09", "Entertainer (inherited)"], "900502111": ["\u5727\u5DFB\u306E\u30C8\u30EA\u30C3\u30AF\uFF08\u7D99\u627F\uFF09", "Stunning Trick (inherited)"], "900502211": ["\u714C\u3081\u304D\u306E\u30C8\u30C3\u30D7\u30B9\u30BF\u30A1\uFF08\u7D99\u627F\uFF09", "Glittering Top Star (inherited)"], "900511": ["\u3064\u307C\u307F\u3001\u307B\u3053\u308D\u3076\u6642\uFF08\u7D99\u627F\uFF09", "When the Flower Bud Opens (inherited)"], "900521": ["\u30EF\u30AF\u30EF\u30AF\u30AF\u30E9\u30A4\u30DE\u30C3\u30AF\u30B9\uFF08\u7D99\u627F\uFF09", "Exciting Climax (inherited)"], "900531": ["\u71B1\u8840\uFF01\uFF01\u98A8\u7D00\u30A2\u30BF\u30C3\u30AF\uFF08\u7D99\u627F\uFF09", "Hot-Blooded Disciplinary Attack! (inherited)"], "900551": ["\u4E07\u5F69\u2606\u30DE\u30FC\u30D9\u30E9\u30B9\u2605\u4E16\u754C\uFF08\u7D99\u627F\uFF09", "Colorful\u2606Marvelous\u2605World (inherited)"], "900561": ["\u6765\u307E\u3059\u6765\u3066\u307E\u3059\u6765\u3055\u305B\u307E\u3059\uFF01\uFF08\u7D99\u627F\uFF09", "Luck Is Coming (inherited)"], "900571": ["\u53D9\u60C5\u3001\u65C5\u8DEF\u306E\u679C\u3066\u306B\uFF08\u7D99\u627F\uFF09", "Lyricism at Journey's End (inherited)"], "900581": ["I Never Goof Up!\uFF08\u7D99\u627F\uFF09", "I Never Goof Up! (inherited)"], "900591": ["\u5F7C\u65B9\u3001\u305D\u306E\u5148\u3078\u2026\uFF08\u7D99\u627F\uFF09", "Beyond the Other Side (inherited)"], "900601": ["\u304D\u3063\u3068\u305D\u306E\u5148\u3078\u2026\uFF01\uFF08\u7D99\u627F\uFF09", "Surely, Beyond...! (inherited)"], "900601111": ["\u7B20\u677E\u306E\u98DF\u3044\u3057\u3093\u574A\uFF08\u7D99\u627F\uFF09", "Glutton of Kasamatsu (inherited)"], "900601121": ["\u98E2\u3048\u305F\u602A\u7269\uFF08\u7D99\u627F\uFF09", " (inherited)"], "900601211": ["\u602A\u7269\u7684\u30B3\u30FC\u30CA\u30EA\u30F3\u30B0\uFF08\u7D99\u627F\uFF09", "Monstrous Cornering (inherited)"], "900602111": ["\u30C9\u30AB\u98DF\u3044\u990A\u751F\uFF08\u7D99\u627F\uFF09", "Gluttonous Regimen (inherited)"], "900602211": ["\u30AF\u30EA\u30B9\u30DE\u30B9\u306E\u5947\u8DE1\u4F53\u9A13\uFF08\u7D99\u627F\uFF09", "First-hand Christmas Miracle (inherited)"], "900611": ["Pride of KING\uFF08\u7D99\u627F\uFF09", "Pride of KING (inherited)"], "900621": ["\u3069\u3093\u3063\u3001\u30D1\u30C3\u3001\u3080\u3093\u3063\uFF08\u7D99\u627F\uFF09", "Bang, Bam, Mun (inherited)"], "900641": ["\u3076\u3063\u3061\u304E\u308A\u30ED\u30FC\u30C9\uFF08\u7D99\u627F\uFF09", "The Breakaway Road (inherited)"], "900651": ["\u30A2\u30B2\u3066\u30A2\u30B2\u3066\u3077\u3061\u3087\u3078\u3093\u3056\uFF01\uFF08\u7D99\u627F\uFF09", "Everybody Put Your Hands Up! (inherited)"], "900661": ["\u30A8\u30F3\u30B8\u30F3\u5168\u958B\uFF01\u5927\u5674\u5C04\uFF01\uFF08\u7D99\u627F\uFF09", "Engine, Full Throttle! Turbo Time! (inherited)"], "900671": ["\u6666\u51A5\u3092\u7167\u3089\u305B\u6C38\u9060\u306E\u8000\u304D\uFF08\u7D99\u627F\uFF09", "Brilliance Illuminating the Darkness (inherited)"], "900681": ["\u52DD\u3061\u9B28\u30EF\u30C3\u30B7\u30E7\u30A4\uFF01\uFF08\u7D99\u627F\uFF09", "Shout of Victory (inherited)"], "900691": ["\u61A7\u308C\u306F\u685C\u3092\u8D8A\u3048\u308B\uFF01\uFF08\u7D99\u627F\uFF09", "Longing Beyond the Sakura (inherited)"], "900701": ["\u30BB\u30A4\u30EA\u30AA\u30B9\uFF08\u7D99\u627F\uFF09", "Seirios (inherited)"], "900701111": ["564\u30A2\u30A4\u30BA\u3067\u8996\u754C\u30AF\u30C3\u30AD\u30EA\uFF01\uFF08\u7D99\u627F\uFF09", "Clear View with 564 Eyes! (inherited)"], "900701211": ["\u30A8\u30AF\u30B9\u30C8\u30EA\u30FC\u30E0\u4E0B\u6821\u8853\uFF08\u7D99\u627F\uFF09", "Extreme After-School Technique (inherited)"], "900702111": ["\u795E\u79D8\u4F53\u9A13\uFF01\u30B4\u30EB\u30B7\u30EF\u30FC\u30D7\uFF08\u7D99\u627F\uFF09", "Mysterious Gold Ship Warp! (inherited)"], "900702211": ["\u30A4\u30AB\u63DA\u3052\u3001\u3044\u304B\u304C\u3067\u3059\u304B\uFF01\uFF1F\uFF08\u7D99\u627F\uFF09", "Squid for a Quid! (inherited)"], "900703111": ["\u62BC\u3057\u5BC4\u305B\u308B\u30B8\u30E5\u30C6\u30FC\u30E0\uFF08\u7D99\u627F\uFF09", `Flood of "Je t'aime" (inherited)`], "900703211": ["\u8352\u78EF\u597D\u307F\u306E\u9EC4\u91D1\u8239\uFF08\u7D99\u627F\uFF09", "Golden Ship of the Rough Seas (inherited)"], "90071": ["\u6CE2\u4E71\u6CE8\u610F\u7832\uFF01\uFF08\u7D99\u627F\uFF09", "Warning Shot! (inherited)"], "900711": ["\u4E00\u671F\u306E\u5922\u3001\u5239\u90A3\u306E\u98DB\u7FD4\uFF08\u7D99\u627F\uFF09", "A Lifetime's Dream, A Moment's Flight (inherited)"], "900721": ["\u70C8\u706B\u7E5A\u4E71\u3001\u7121\u6575\u4E4B\u821E\uFF08\u7D99\u627F\uFF09", "Dazzling Fire, Invincible Dance (inherited)"], "900741": ["\u9E97\u3057\u304D\u82B1\u4FE1\u98A8\uFF08\u7D99\u627F\uFF09", "Lovely Spring Wind (inherited)"], "900761": ["\u82B1\u958B\u304D\u3001\u4E16\u754C\uFF08\u7D99\u627F\uFF09", "Blossoming World (inherited)"], "900771": ["Road to Glory\uFF08\u7D99\u627F\uFF09", "Road to Glory (inherited)"], "900781": ["\u98A8\u5149\u308B\uFF08\u7D99\u627F\uFF09", "A Spring in My Step (inherited)"], "900801111": ["\u30B9\u30AD\u30C3\u30C8\u30EB\u30D6\u30EC\u30A4\u30AF\uFF08\u7D99\u627F\uFF09", "Flasks Up (inherited)"], "900801211": ["\u629C\u7FA4\u306E\u8C6A\u811A\uFF08\u7D99\u627F\uFF09", "Unrivaled Strides (inherited)"], "900802111": ["\u3076\u3063\u5DEE\u3057\u3066\u3084\u308B\u305C\uFF01\uFF08\u7D99\u627F\uFF09", "I'll Leave You in the Dust! (inherited)"], "900802211": ["\u6700\u901F\u306E\u30C8\u30C3\u30D7\u30AE\u30A2\uFF08\u7D99\u627F\uFF09", "Fastest Top Gear (inherited)"], "90081": ["\u30A2\u30AF\u30BB\u30EBX\uFF08\u7D99\u627F\uFF09", "Accelerator X (inherited)"], "900831": ["Mission: Triumph\uFF08\u7D99\u627F\uFF09", "Mission: Triumph (inherited)"], "900841": ["\u9739\u9742\u306E\u30A2\u30A6\u30D5\u30D8\u30FC\u30D9\u30F3\uFF08\u7D99\u627F\uFF09", "Thunderstorm Sublation (inherited)"], "900851": ["\u81F3\u4E0A\u3067\u3042\u308C\uFF08\u7D99\u627F\uFF09", "Reign Supreme (inherited)"], "900861": ["\u611B\u3068\u7194\u3051\u3088\u305F\u3060\u7194\u3051\u3088\uFF08\u7D99\u627F\uFF09", "Melt in Love's Embrace (inherited)"], "900871": ["Silent letter\uFF08\u7D99\u627F\uFF09", "Silent Letter (inherited)"], "900901111": ["\u30D1\u30FC\u30D5\u30A7\u30AF\u30C8\u30C1\u30E5\u30FC\u30F3\uFF08\u7D99\u627F\uFF09", "Perfect Tune (inherited)"], "900901211": ["\u30A2\u30BF\u30B7\u304C\u52DD\u3064\u3093\u3060\u304B\u3089\uFF01\uFF08\u7D99\u627F\uFF09", "This is my win! (inherited)"], "900902111": ["\u304A\u3066\u3093\u3070\u5973\u738B\uFF08\u7D99\u627F\uFF09", "Tomboy Queen (inherited)"], "900902211": ["\u958B\u304B\u308C\u308B\u5922\u306E\u6249\uFF08\u7D99\u627F\uFF09", "Door of Dreams (inherited)"], "90091": ["\u30EC\u30C3\u30C9\u30A8\u30FC\u30B9\uFF08\u7D99\u627F\uFF09", "Red Ace (inherited)"], "900931": ["\u5E78\u305B\u306E\u9752\u3044\u5149\uFF08\u7D99\u627F\uFF09", "Blue Ray of Happiness (inherited)"], "900981": ["\u7406\u904B\u958B\u304B\u308A\u3066\u7FD4\u308B\uFF08\u7D99\u627F\uFF09", "Luck Comes to the Prepared (inherited)"], "900991": ["\u304B\u304C\u3084\u3051\u2606\u3068\u307E\u3053\u307E\u3044\uFF08\u7D99\u627F\uFF09", "Shine \u2606 Tomakomai (inherited)"], "901001": ["Never Say Never\uFF08\u7D99\u627F\uFF09", "Never Say Never (inherited)"], "901001111": ["\u72D9\u3044\u6483\u3061\u30C7\u30B9\uFF01\uFF08\u7D99\u627F\uFF09", "Sharpshooting! (inherited)"], "901001211": ["Frontier Spirit\uFF08\u7D99\u627F\uFF09", "Frontier Spirit (inherited)"], "901002111": ["\u30A2\u30C9\u30D9\u30F3\u30C1\u30E3\u30FC\u306E\u5148\u5C0E\u8005\uFF08\u7D99\u627F\uFF09", "Adventure Leader (inherited)"], "901002211": ["\u771F\u5263\u52DD\u8CA0\u30C7\u30B9\uFF01\uFF08\u7D99\u627F\uFF09", "No Holds Barred! (inherited)"], "901041": ["\u6681\u306E\u5FA1\u65D7\u300E\u845B\u57CE\u6804\u4E3B\u300F\uFF01\uFF08\u7D99\u627F\uFF09", "Flag of Dawn: Katsuragi Ace (inherited)"], "901051": ["\u30A2\u30C9\u30FB\u30A2\u30B9\u30C8\u30E9\uFF08\u7D99\u627F\uFF09", "Ad Astra (inherited)"], "901061": ["Bang\u2606\u30DF\u30E9\u30AF\u308B\u308F\u305B\uFF01\uFF08\u7D99\u627F\uFF09", "Bang\u2606Miracle Maker! (inherited)"], "901101111": ["\u5927\u548C\u64AB\u5B50\uFF08\u7D99\u627F\uFF09", "Yamato Nadeshiko (inherited)"], "901101211": ["\u4E0D\u9000\u8EE2\u306E\u610F\u601D\uFF08\u7D99\u627F\uFF09", "Conviction (inherited)"], "901102111": ["\u30AD\u30E5\u30A2\u30EA\u30FC\u30D2\u30FC\u30EB\uFF08\u7D99\u627F\uFF09", "Curely Heal (inherited)"], "901102211": ["\u52C7\u6C17\u306E\u9B54\u6CD5\uFF08\u7D99\u627F\uFF09", "Conjuring Courage (inherited)"], "90111": ["\u7CBE\u795E\u4E00\u5230\uFF08\u7D99\u627F\uFF09", "Desire to Win (inherited)"], "901201111": ["\u52DD\u5229\u3078\u306E\u5486\u54EE\uFF08\u7D99\u627F\uFF09", "Victory Roar (inherited)"], "901201211": ["\u6012\u6FE4\u306E\u30DD\u30ED\u30ED\u30C3\u30AB\uFF08\u7D99\u627F\uFF09", "Tempestuous Pororoca (inherited)"], "901202111": ["\u71B1\u70C8\u30A8\u30F3\u30B2\u30FC\u30B8\uFF01\uFF08\u7D99\u627F\uFF09", "Passionate Engagement! (inherited)"], "901202211": ["\u95D8\u9B42\u5165\u5200\uFF01\uFF08\u7D99\u627F\uFF09", "Fiery Cake-Cutting! (inherited)"], "901301111": ["\u30E1\u30B8\u30ED\u306E\u5FC3\u5F97\uFF08\u7D99\u627F\uFF09", "Mejiro's Wisdom (inherited)"], "901301211": ["\u540D\u512A\u306E\u4F59\u88D5\uFF08\u7D99\u627F\uFF09", "Star's Composure (inherited)"], "901302111": ["\u30A2\u30AF\u30C6\u30A3\u30D6\u30EC\u30B9\u30C8\uFF08\u7D99\u627F\uFF09", "Active Rest (inherited)"], "901302211": ["\u7A7A\u306E\u679C\u3066\u307E\u3067\uFF08\u7D99\u627F\uFF09", "End of Sky (inherited)"], "901303111": ["\u590F\u306E\u540D\u512A\uFF08\u7D99\u627F\uFF09", "Summer Star (inherited)"], "901303211": ["\u4E00\u610F\u5C02\u5FC3\u306B\u30EA\u30D5\u30EC\u30C3\u30B7\u30E5\uFF01\uFF08\u7D99\u627F\uFF09", "Wholehearted Refresher (inherited)"], "901401111": ["\u9DF9\u30CE\u76EE\uFF08\u7D99\u627F\uFF09", "Falcon Eyes (inherited)"], "901401211": ["\u4F59\u88D5\u306E\u30D1\u30D5\u30A9\u30FC\u30DE\u30F3\u30B9\uFF08\u7D99\u627F\uFF09", "Flawless Performance (inherited)"], "901402111": ["\u8C6A\u52C7\u7121\u53CC\uFF08\u7D99\u627F\uFF09", "Unparalleled Bravery (inherited)"], "901402211": ["\u6607\u308A\u30B3\u30F3\u30C9\u30EB\uFF08\u7D99\u627F\uFF09", "Rising Condor (inherited)"], "90141": ["\u71B1\u8840\u2606\u30A2\u30DF\u30FC\u30B4\uFF08\u7D99\u627F\uFF09", "Hot Blooded \u2606 Amigo (inherited)"], "901501111": ["\u964D\u81E8\uFF01\u4E16\u7D00\u672B\u8987\u738B\uFF01\uFF08\u7D99\u627F\uFF09", "Centurial Overlord Descends! (inherited)"], "901501211": ["\u6B4C\u5287\u738B\u306E\u884C\u9032\uFF08\u7D99\u627F\uFF09", "March of the Opera King (inherited)"], "901502111": ["\u5186\u821E\u66F2\u306E\u30DE\u30A8\u30B9\u30C8\u30ED\uFF08\u7D99\u627F\uFF09", "Waltz Maestro (inherited)"], "901502211": ["\u30DC\u30AF\u306F\u9045\u308C\u305A\u306B\u3084\u3063\u3066\u304F\u308B\uFF01\uFF08\u7D99\u627F\uFF09", "I Won't Fall Behind! (inherited)"], "901601111": ["\u4E00\u5200\u4E21\u65AD\uFF08\u7D99\u627F\uFF09", "Decisive Cleave (inherited)"], "901601211": ["\u9913\u72FC\u7259\uFF08\u7D99\u627F\uFF09", "Hungry Wolf's Fang (inherited)"], "901602111": ["BLAZING WOLF\uFF08\u7D99\u627F\uFF09", "BLAZING WOLF (inherited)"], "901602211": ["\u6E07\u671B\u3059\u308B\u602A\u7269\uFF08\u7D99\u627F\uFF09", "Craving Monster (inherited)"], "901701111": ["\u7687\u5E1D\u306E\u773C\u5DEE\u3057\uFF08\u7D99\u627F\uFF09", "Emperor's Gaze (inherited)"], "901701211": ["\u93A7\u8896\u4E00\u89E6\uFF08\u7D99\u627F\uFF09", "Hands-Down Victory (inherited)"], "901702111": ["\u795E\u8272\u81EA\u82E5\uFF08\u7D99\u627F\uFF09", "Perfect Composure (inherited)"], "901702211": ["\u98A8\u971C\u9AD8\u6F54\uFF08\u7D99\u627F\uFF09", "Noble Hardships (inherited)"], "901801111": ["\u5973\u5E1D\u306E\u6A29\u8B00\uFF08\u7D99\u627F\uFF09", "The Empress' Ploy (inherited)"], "901801211": ["\u6C34\u6708\u93E1\u82B1\uFF08\u7D99\u627F\uFF09", "Moonlit Water, Mirror Flower (inherited)"], "901802111": ["\u5973\u5E1D\u306E\u77DC\u6301\uFF08\u7D99\u627F\uFF09", "The Empress' Pride (inherited)"], "901802211": ["\u4E0A\u5F26\u306E\u30BD\u30E0\u30EA\u30A8\u30FC\u30EB\uFF08\u7D99\u627F\uFF09", "Crescent Moon Sommelier (inherited)"], "90181": ["\u30A8\u30F3\u30D7\u30EC\u30B9\u30FB\u30D7\u30E9\u30A4\u30C9\uFF08\u7D99\u627F\uFF09", "Empress\u30FBPride (inherited)"], "901901111": ["\u9650\u754C\u30A6\u30DE\u30DE\u30CB\u30A2\uFF08\u7D99\u627F\uFF09", "Uma Mania Max (inherited)"], "901901211": ["\u6700\u524D\u5217\u306F\u8B72\u308C\u306A\u3044\uFF01\uFF08\u7D99\u627F\uFF09", "The Front Row Is Non-Negotiable! (inherited)"], "901902111": ["\u8D85\u7279\u6025\u5165\u7A3F\uFF01\uFF08\u7D99\u627F\uFF09", "Super Express Submission! (inherited)"], "901902211": ["\u5C0A\u307F\u3092\u6C42\u3081\u3066\u3075\u3063\u304B\u30FC\u30FC\u3064\uFF01\uFF08\u7D99\u627F\uFF09", "Revived For Moe! (inherited)"], "902001111": ["\u30D5\u30A1\u30B9\u30C8\u30EA\u30C8\u30EA\u30FC\u30D6\uFF08\u7D99\u627F\uFF09", "Fast Retrieve (inherited)"], "902001121": ["\u5927\u7269\u72D9\u3044\u306E\u5FC3\u5F97\uFF08\u7D99\u627F\uFF09", "Angler's Wisdom (inherited)"], "902001211": ["\u8131\u51FA\u5927\u4F5C\u6226\uFF08\u7D99\u627F\uFF09", "Operation Escape (inherited)"], "902002111": ["\u9003\u3052\u308D\uFF5E\u266A\uFF08\u7D99\u627F\uFF09", "Run~Away~\u266A (inherited)"], "902002211": ["\u30EC\u30B3\u30FC\u30C9\u30E9\u30F3\u30CA\u30FC\uFF08\u7D99\u627F\uFF09", "Record Runner (inherited)"], "902101111": ["\u96F7\u9A30\u96F2\u5954\uFF08\u7D99\u627F\uFF09", "Stormstrider (inherited)"], "902101211": ["\u5C3B\u5C3E\u306E\u6709\u9802\u5929\uFF08\u7D99\u627F\uFF09", "Tail of Ecstasy (inherited)"], "902102111": ["\u5148\u9054\u306B\u732E\u3050\u7948\u308A\u306E\u980C\uFF08\u7D99\u627F\uFF09", "Ode to Our Predecessors (inherited)"], "902102211": ["\u3055\u3042\u3001\u30A6\u30C1\u3068\u3084\u308D\u3046\u3084\uFF01\uFF08\u7D99\u627F\uFF09", "'ight, let's get em! (inherited)"], "902201111": ["\u30ED\u30A4\u30E4\u30EB\u30B9\u30BF\u30FC\uFF08\u7D99\u627F\uFF09", "Royal Star (inherited)"], "902201211": ["\u5929\u7A7A\u843D\u3068\u3057\uFF08\u7D99\u627F\uFF09", "Sky Drop (inherited)"], "902202111": ["\u601D\u3044\u51FA\u3092\u529B\u306B\u5909\u3048\u3066\uFF08\u7D99\u627F\uFF09", "Memories Become Power (inherited)"], "902202211": ["\u30E2\u30EA\u30AC\u30F3\u306E\u77DB\u621F\uFF08\u7D99\u627F\uFF09", "Morr\xEDgan's Spear (inherited)"], "902301111": ["\u60F3\u5B9A\u901A\u308A\u3001\u4F59\u88D5\u5341\u5206\uFF08\u7D99\u627F\uFF09", "Exactly As Planned (inherited)"], "902301211": ["\u8A08\u753B\u7684\u30AF\u30FC\u30EB\u30C0\u30A6\u30F3\uFF08\u7D99\u627F\uFF09", "Scheduled Cooldown (inherited)"], "902302111": ["VIP\u306A\u5F8C\u308D\u59FF\uFF08\u7D99\u627F\uFF09", "VIP Back View (inherited)"], "902302211": ["\u5168\u529B\u30B5\u30F3\u30BF\u30AF\u30ED\u30FC\u30B9\uFF08\u7D99\u627F\uFF09", "Full Power Santa Claus (inherited)"], "902401111": ["You copy?\uFF08\u7D99\u627F\uFF09", "You Copy? (inherited)"], "902401211": ["I copy!\uFF08\u7D99\u627F\uFF09", "I Copy! (inherited)"], "902402111": ["\u7D14\u767D\u306E\u3055\u3055\u3084\u304D\uFF08\u7D99\u627F\uFF09", "Snow White Whisper (inherited)"], "902402211": ["\u30D0\u30EC\u30EB\u30ED\u30FC\u30EB\uFF08\u7D99\u627F\uFF09", "Barrel Roll (inherited)"], "90241": ["\u52DD\u5229\u306E\u30AD\u30C3\u30B9\u2606\uFF08\u7D99\u627F\uFF09", "Victory Kiss \u2606 (inherited)"], "902501111": ["\u30B3\u30FC\u30D2\u30FC\u30D6\u30EC\u30A4\u30AF\uFF08\u7D99\u627F\uFF09", "Coffee Break (inherited)"], "902501211": ["\u30AA\u30A4\u30C6\u30A4\u30AB\u30CA\u30A4\u30C7\uFF08\u7D99\u627F\uFF09", "Don't Leave Me (inherited)"], "902601111": ["\u30AF\u30ED\u30C3\u30AF\u30A2\u30C3\u30D7\uFF08\u7D99\u627F\uFF09", "Overclocking (inherited)"], "902601211": ["\u56F0\u96E3\u3092\u4E57\u308A\u8D8A\u3048\u308B\u8005\uFF08\u7D99\u627F\uFF09", "Overcomer of Difficulties (inherited)"], "902602111": ["\u5B8C\u74A7\u306A\u30A8\u30E9\u30FC\u5BFE\u51E6\u8853\uFF08\u7D99\u627F\uFF09", "Perfect Bugfixing Technique (inherited)"], "902602211": ["\u30D1\u30FC\u30D5\u30A7\u30AF\u30C8\u30D6\u30FC\u30C8\uFF08\u7D99\u627F\uFF09", "Perfect Boot (inherited)"], "902701111": ["\u30DE\u30C3\u30B9\u30EB\u30A2\u30F3\u30BB\u30E0\uFF08\u7D99\u627F\uFF09", "Muscle Anthem (inherited)"], "902701211": ["\u30E9\u30A4\u30B8\u30F3\u30B0\u30D0\u30EB\u30AF\u30A2\u30C3\u30D7\uFF08\u7D99\u627F\uFF09", "Rising Bulk Up (inherited)"], "902702111": ["\u5922\u53F6\u3048\u308B\u6C7A\u610F\u3092\u6388\u3051\u307E\u3057\u3087\u3046\uFF08\u7D99\u627F\uFF09", "Granting Dream-fulfilling Determination (inherited)"], "902702211": ["\u81F3\u9AD8\u306E\u52DD\u5229\u3092\u53EC\u3057\u4E0A\u304C\u308C\uFF08\u7D99\u627F\uFF09", "Serving Victory Supreme (inherited)"], "90271": ["\u71C3\u3048\u308D\u7B4B\u8089\uFF01\uFF08\u7D99\u627F\uFF09", "Burning Muscles! (inherited)"], "902801111": ["\u4E0B\u3054\u3057\u3089\u3048\u4E07\u5168\uFF01\uFF08\u7D99\u627F\uFF09", "Flawless Mise en Place! (inherited)"], "902801211": ["\u30DC\u30FC\u30CE\u306A\u5065\u5556\u5BB6\uFF08\u7D99\u627F\uFF09", "Bono-style Gluttony (inherited)"], "902901111": ["\u61A7\u308C\u306E\u30B7\u30C1\u30FC\u30AC\u30FC\u30EB\uFF08\u7D99\u627F\uFF09", "Admired City Girl (inherited)"], "902901211": ["\u96EA\u56FD\u4ED5\u8FBC\u307F\u306E\u76F4\u6ED1\u964D\uFF08\u7D99\u627F\uFF09", "Seasoned Sledder's Swoop (inherited)"], "903001111": ["\u6C7A\u610F\u306E\u30D2\u30FC\u30ED\u30FC\uFF08\u7D99\u627F\uFF09", "Determined Hero (inherited)"], "903001211": ["\u9ED2\u306E\u523A\u5BA2\uFF08\u7D99\u627F\uFF09", "Black Assassin (inherited)"], "903002111": ["\u304C\u3093\u3070\u308B\u305E\u30FC\u2026\u304A\u30FC\uFF01\uFF08\u7D99\u627F\uFF09", "I'll Do My Beeest! (inherited)"], "903002211": ["\u30C8\u30EA\u30C3\u30AF&\u30C8\u30EA\u30FC\u30C8\uFF08\u7D99\u627F\uFF09", "Trick & Treat (inherited)"], "903101111": ["\u3058\u3083\u3058\u3083\u30A6\u30DE\u304A\u59C9\u3061\u3083\u3093\uFF08\u7D99\u627F\uFF09", "Wild Onee-chan (inherited)"], "903101211": ["\u8352\u3076\u308B\u98A8\u795E\uFF08\u7D99\u627F\uFF09", "Raging Wind God (inherited)"], "903102111": ["\u30AA\u30FC\u30C0\u30FC\u306F\u30D0\u30C3\u30C1\u30EA\uFF01\uFF08\u7D99\u627F\uFF09", "Perfect Order! (inherited)"], "903102211": ["\u83EF\u9E97\u306A\u30B5\u30FC\u30D6\uFF08\u7D99\u627F\uFF09", "Brilliant Serving (inherited)"], "903201111": ["\u53EF\u80FD\u6027\u306E\u5F92\uFF08\u7D99\u627F\uFF09", "Pupil of Possibility (inherited)"], "903201211": ["\u52B9\u7387\u7684\u4F11\u606F\u6CD5\uFF08\u7D99\u627F\uFF09", "Efficient Recreation (inherited)"], "903202111": ["\u30E9\u30D7\u30E9\u30B9\u306E\u60AA\u9B54\uFF08\u7D99\u627F\uFF09", "Laplace's Demon (inherited)"], "903202211": ["\u7729\u8000\u306E\u30EB\u30AF\u30B7\u30AA\u30F3\uFF08\u7D99\u627F\uFF09", "Dazzling Luxon (inherited)"], "90321": ["introduction\uFF1AMy body\uFF08\u7D99\u627F\uFF09", "introduction\uFF1AMy body (inherited)"], "903301111": ["\u9759\u304B\u306A\u8A93\u3044\uFF08\u7D99\u627F\uFF09", "Silent Oath (inherited)"], "903301211": ["\u5DF1\u8EAB\u7126\u304C\u3059\u307B\u3046\u304D\u661F\uFF08\u7D99\u627F\uFF09", "Immolated Comet (inherited)"], "903401111": ["\u706B\u6D88\u306E\u68AF\u5B50\u767B\u308A\uFF08\u7D99\u627F\uFF09", "Firefighter's Hashigo-nori (inherited)"], "903401211": ["\u719F\u7DF4\u306E\u7802\u5875\u4F7F\u3044\uFF08\u7D99\u627F\uFF09", "Sandstorm Wielder (inherited)"], "903401221": ["\u7C8B\u3067\u3044\u306A\u305B\u306A\u9054\u4EBA\u6280\uFF08\u7D99\u627F\uFF09", " (inherited)"], "903402111": ["\u6247\u30CE\u821E\uFF08\u7D99\u627F\uFF09", "Fan Dance (inherited)"], "903402211": ["\u5927\u898B\u5F97\u5207\u308A\uFF08\u7D99\u627F\uFF09", "Dramatic Finale (inherited)"], "903501111": ["\u305F\u3086\u307E\u306C\u52AA\u529B\uFF08\u7D99\u627F\uFF09", "Tireless Effort (inherited)"], "903501211": ["\u30A6\u30A4\u30CB\u30F3\u30B0\u30ED\u30FC\u30C9\uFF08\u7D99\u627F\uFF09", "Winning Road (inherited)"], "903502111": ["\u5343\u4E07\u30D0\u30EA\u30AD\uFF01\uFF01\uFF01\uFF08\u7D99\u627F\uFF09", "Ten Million Horsepower!!! (inherited)"], "903502211": ["\u304D\u3063\u3068\u98DB\u3079\u308B\uFF01\uFF08\u7D99\u627F\uFF09", "You'll fly for sure! (inherited)"], "90351": ["\u5168\u529BV\u30B5\u30A4\u30F3\u30C3\uFF01\uFF08\u7D99\u627F\uFF09", "Full Power V Sign! (inherited)"], "903601111": ["\u30A2\u30C3\u30D7\u30EA\u30D5\u30C6\u30A3\u30F3\u30B0\uFF08\u7D99\u627F\uFF09", "Uplifting (inherited)"], "903601211": ["Lose Myself\uFF08\u7D99\u627F\uFF09", "Lose Myself (inherited)"], "903602111": ["Gluttony's Grip\uFF08\u7D99\u627F\uFF09", "Gluttony's Grip (inherited)"], "903602211": ["\u5211\u82E6\uFF08\u7D99\u627F\uFF09", "Torment (inherited)"], "903701111": ["\u9583\u5149\u306E\u30DE\u30AE\u30A2\uFF08\u7D99\u627F\uFF09", "Flash Magier (inherited)"], "903701211": ["\u8A87\u308A\u3092\u61F8\u3051\u3066\uFF08\u7D99\u627F\uFF09", "Betting My Pride (inherited)"], "903702111": ["\u52DD\u5229\u306E\u30EC\u30B7\u30D4\uFF08\u7D99\u627F\uFF09", "Recipe of Victory (inherited)"], "903702121": ["\u4ED5\u8FBC\u307F\u306F\u5B8C\u74A7\uFF08\u7D99\u627F\uFF09", "Perfect Preparation (inherited)"], "903702211": ["\u9ED2\u3044\u9583\u5149\uFF08\u7D99\u627F\uFF09", "Black Flash (inherited)"], "903801111": ["#\u30AB\u30EF\u30A4\u30A4\u304B\u304F\u4E71\u266A\uFF08\u7D99\u627F\uFF09", "#Cute Perturbation\u266A (inherited)"], "903801211": ["#\u5922\u4E2D\u306B\u306A\u3063\u3061\u3083\u3048\u266A\uFF08\u7D99\u627F\uFF09", "#Go Crazy\u266A (inherited)"], "903802111": ["#\u30AB\u30EC\u30F3\u306B\u67D3\u307E\u3063\u3066\u307F\u308B\uFF1F\uFF08\u7D99\u627F\uFF09", "#WannaGetCurren'd? (inherited)"], "903802211": ["#\u30D3\u30E5\u30FC\u30C6\u30A3\u30FC\u30B9\u30D7\u30EA\u30F3\u30C8\uFF08\u7D99\u627F\uFF09", "#Beauty Sprint (inherited)"], "903901111": ["\u30CE\u30F3\u30B9\u30C8\u30C3\u30D7\u30D7\u30EA\u30F3\u30BB\u30B9\uFF08\u7D99\u627F\uFF09", "Non-stop Princess (inherited)"], "903901211": ["\u66B4\u308C\u9F8D\uFF08\u7D99\u627F\uFF09", "Raging Dragon (inherited)"], "903902111": ["\u30C8\u30C3\u30D7\u30FB\u30AA\u30D6\u30FB\u30B6\u30FB\u59EB\uFF01\uFF08\u7D99\u627F\uFF09", " (inherited)"], "903902211": ["\u7206\u8D70\u731B\u59EB\u2606\u6025\u8EE2\u76F4\u4E0B\uFF01\uFF01\uFF08\u7D99\u627F\uFF09", " (inherited)"], "904001111": ["\u5148\u898B\u306E\u660E\uFF08\u7D99\u627F\uFF09", "Prescience (inherited)"], "904001211": ["\u30E9\u30F3\u30A6\u30A7\u30A4\u306E\u4E3B\u5F79\uFF08\u7D99\u627F\uFF09", "Star of the Runway (inherited)"], "904002111": ["\u9BAE\u3084\u304B\u306A\u5E03\u9663\uFF08\u7D99\u627F\uFF09", "Vivid Battle Formation (inherited)"], "904002211": ["\u864E\u8996\u7708\u3005\uFF08\u7D99\u627F\uFF09", "Eagle-eyed (inherited)"], "904101111": ["\u30D0\u30AF\u30B7\u30F3\u7684\u30B9\u30D7\u30EA\u30F3\u30C8\uFF01\uFF08\u7D99\u627F\uFF09", "Bakushin Sprint! (inherited)"], "904101211": ["\u30D0\u30AF\u30B7\u30F3\u7684\u30EA\u30FC\u30C9\uFF01\uFF08\u7D99\u627F\uFF09", "Bakushin Lead! (inherited)"], "904102111": ["\u732A\u7A81\u731B\u9032\uFF01\u30D0\u30AF\u30B7\u30F3\u30ED\u30FC\u30C9\uFF01\uFF08\u7D99\u627F\uFF09", "Red-hot Rush! Bakushin Road! (inherited)"], "904102211": ["\u9A40\u9032\uFF01\u7206\u9032\uFF01\u30D0\u30AF\u30B7\u30FC\u30F3\uFF01\uFF08\u7D99\u627F\uFF09", "Bakushin! Bakushin! Bakushiiin! (inherited)"], "90411": ["\u5B66\u7D1A\u59D4\u54E1\u9577+\u901F\u3055\uFF1D\u30D0\u30AF\u30B7\u30F3\uFF08\u7D99\u627F\uFF09", "Class President + Speed = Bakushin (inherited)"], "904201111": ["\u4E16\u754C\u3092\u8CAB\u304F\u81F3\u9AD8\u306E\u8F1D\u304D\uFF08\u7D99\u627F\uFF09", "World-wide Supreme Brilliance (inherited)"], "904201211": ["\u30D1\u30FC\u30EB\u6D41\u30C0\u30F3\u30B9\u30D0\u30C8\u30EB\uFF08\u7D99\u627F\uFF09", "Pearl-style Dance Battle (inherited)"], "904301111": ["\u5168\u901F\u524D\u9032\u306A\u306E\u3060\uFF01\uFF08\u7D99\u627F\uFF09", "Full Speed Ahead, Nanoda! (inherited)"], "904301211": ["\u3044\u305F\u305A\u3089\u30DE\u30A4\u30B9\u30BF\u30FC\uFF08\u7D99\u627F\uFF09", "Masterful Prankster (inherited)"], "904401111": ["\u653E\u8AB2\u5F8C\u9B54\u6CD5\u5C11\u5973\uFF08\u7D99\u627F\uFF09", "After-School Magical Girl (inherited)"], "904401211": ["\u30C1\u30E3\u30FC\u30E0\u30DE\u30B8\u30C3\u30AF\uFF08\u7D99\u627F\uFF09", "Charm Magic (inherited)"], "904401221": ["\u30B5\u30EB\u30D3\u30A2\u2606\u30B9\u30D7\u30EC\u30F3\u30C7\u30F3\u30B9\uFF08\u7D99\u627F\uFF09", "Salvia\u2606Splendens (inherited)"], "904501111": ["\u3042\u307E\uFF5E\u3044\u5E7B\u60D1\uFF08\u7D99\u627F\uFF09", "Sweet Bewitching (inherited)"], "904501211": ["\u7652\u3057\u306E\u30DE\u30A8\u30B9\u30C8\u30ED\uFF08\u7D99\u627F\uFF09", "Healing Maestro (inherited)"], "904502111": ["\u304A\u4E16\u8A71\u306E\u30D7\u30ED\u30D5\u30A7\u30C3\u30B7\u30E7\u30CA\u30EB\uFF08\u7D99\u627F\uFF09", "Professional Pamperer (inherited)"], "904502211": ["\u9B45\u60D1\u306E\u30DE\u30DF\u30FC\u30A6\u30A3\u30B9\u30D1\u30FC\uFF08\u7D99\u627F\uFF09", "Charming Mummy Whisper (inherited)"], "90451": ["\u30AF\u30EA\u30A2\u30CF\u30FC\u30C8\uFF08\u7D99\u627F\uFF09", "Clear Heart (inherited)"], "904601111": ["\u5927\u6CE8\u76EE\u306E\u30A6\u30DE\u30C9\u30EB\u53C2\u4E0A\u2605\uFF08\u7D99\u627F\uFF09", "The Dazzling Umadol's Here\u2605 (inherited)"], "904601121": ["\u76EE\u3092\u9038\u3089\u3057\u3061\u3083\u30C0\u30E1\u3060\u3088\u2606\uFF08\u7D99\u627F\uFF09", " (inherited)"], "904601211": ["\u30A6\u30DE\u30C9\u30EB\u30D1\u30EF\u30FC\u6025\u4E0A\u6607\u2191\u2191\uFF08\u7D99\u627F\uFF09", "Umadol Power Trend \u2191\u2191 (inherited)"], "904602111": ["\u5922\u306B\u5411\u304B\u3063\u3066\u6025\u4E0A\u6607\uFF01\uFF08\u7D99\u627F\uFF09", "Trending Towards Your Dreams! (inherited)"], "904602211": ["\u7D76\u5BFE\u7684\u30BB\u30F3\u30BF\u30FC\uFF01\uFF08\u7D99\u627F\uFF09", "Absolute Center! (inherited)"], "904701111": ["\u82F1\u96C4\u3078\u306E\u9053\u6A19\uFF08\u7D99\u627F\uFF09", "Hero Handbook (inherited)"], "904701121": ["\u7269\u8A9E\u3092\u7D21\u3050\u8005\uFF08\u7D99\u627F\uFF09", "Story Weaver (inherited)"], "904701211": ["\u5149\u8F1D\u304F\u5263\uFF08\u7D99\u627F\uFF09", "Shining Sword (inherited)"], "904801111": ["\u30CE\u3063\u3066\u3053\uFF01\uFF08\u7D99\u627F\uFF09", "Get Those Vibes Up! (inherited)"], "904801211": ["\u30C8\u30EC\u30F3\u30C9\u30D7\u30E9\u30F3\u30CA\u30FC\uFF08\u7D99\u627F\uFF09", "Trend Planner (inherited)"], "904802111": ["\u30EF\u30F3\u30C1\u30E3\u30F3\u307E\u304F\u3063\u305F\u308B\uFF01\uFF08\u7D99\u627F\uFF09", "Taking Every Chance! (inherited)"], "904802211": ["\u3042\u305F\u3057\u3057\u304B\u52DD\u305F\u3093\uFF01\uFF08\u7D99\u627F\uFF09", "Can't Top Me! (inherited)"], "904901111": ["\u4E7E\u5764\u4E00\u64F2\u306E\u5927\u535A\u6253\uFF08\u7D99\u627F\uFF09", "All or Nothing (inherited)"], "904901211": ["\u9244\u706B\u306E\u30AE\u30E3\u30F3\u30D6\u30E9\u30FC\uFF08\u7D99\u627F\uFF09", "Hot-blooded Gambler (inherited)"], "905001111": ["\u9B3C\u6C17\u68EE\u7136\uFF08\u7D99\u627F\uFF09", "Menacing Presence (inherited)"], "905001211": ["\u99C6\u308A\u7ACB\u3066\u308B\u60F3\u3044\uFF08\u7D99\u627F\uFF09", "Spurring Emotions (inherited)"], "905002111": ["\u898B\u305B\u3064\u3051\u3066\u3084\u308B\uFF01\uFF08\u7D99\u627F\uFF09", "I'll Show You! (inherited)"], "905002211": ["\u8D77\u6B7B\u56DE\u751F\u306E\u51FA\u529B\uFF08\u7D99\u627F\uFF09", "Recovery Output (inherited)"], "905101111": ["\u98A8\u82B1\u75BE\u8D70\uFF08\u7D99\u627F\uFF09", "Flurry Dash (inherited)"], "905101211": ["\u5927\u8F2A\u306E\u6C7A\u610F\uFF08\u7D99\u627F\uFF09", "Large-Petaled Resolution (inherited)"], "905102111": ["\u795D\u798F\u306E\u30D5\u30E9\u30EF\u30FC\u30AC\u30FC\u30EB\uFF08\u7D99\u627F\uFF09", "Flower Girl's Blessing (inherited)"], "905102211": ["\u30F4\u30A7\u30FC\u30EB\u63FA\u3089\u3059\u6625\u75BE\u98A8\uFF08\u7D99\u627F\uFF09", "Veil-Swaying Spring Storm (inherited)"], "905201111": ["\u307E\u3060\u307E\u3060\u3060\u3088\uFF01\uFF08\u7D99\u627F\uFF09", "Not Done Yet! (inherited)"], "905201211": ["\u307E\u3051\u306A\u3044\u304B\u3089\u306D\uFF01\uFF08\u7D99\u627F\uFF09", "I Won't Lose! (inherited)"], "905202111": ["\u898B\u3066\u3066\u898B\u3066\u3066\uFF01\uFF08\u7D99\u627F\uFF09", "Look At Me, Look! (inherited)"], "905202211": ["\u304C\u3093\u3070\u308B\u3082\u3093\uFF01\uFF08\u7D99\u627F\uFF09", "Trying My Best! (inherited)"], "90521": ["\u30EF\u30AF\u30EF\u30AF\u3088\u30FC\u3044\u30C9\u30F3\uFF08\u7D99\u627F\uFF09", "Ready, Steady, Go! (inherited)"], "905301111": ["\u98A8\u7D00\u306E\u767B\u9F8D\u9580\uFF08\u7D99\u627F\uFF09", "Gateway To Discipline (inherited)"], "905301211": ["\u62BC\u5FCD\u30C3\uFF01\u6C17\u5408\u5341\u5206\u3063\u30B9\uFF01\uFF08\u7D99\u627F\uFF09", "Osu! I'm Fired Up! (inherited)"], "905302111": ["\u71B1\u8840\u9032\u5316\u30E9\u30A4\u30C7\u30A3\u30F3\u30B0\uFF01\uFF08\u7D99\u627F\uFF09", "Hot-blooded Riding! (inherited)"], "905302211": ["\u5FC5\u6BBA\uFF01\u7206\u901F\u30B9\u30D7\u30EA\u30F3\u30C8\uFF01\uFF08\u7D99\u627F\uFF09", "Special Move! Explosive Sprint! (inherited)"], "905501111": ["\u30EF\u30AF\u30EF\u30AF\u2606\u30DE\u30FC\u30D9\u30E9\u30B9\u30BE\u30FC\u30F3\uFF08\u7D99\u627F\uFF09", "Exciting\u2606Marvelous Zone (inherited)"], "905501211": ["\u9032\u3081\uFF01\u4E16\u754C\u30DE\u30FC\u30D9\u30E9\u30B9\u8A08\u753B\u2606\uFF08\u7D99\u627F\uFF09", "Marvelous World Plan\u2606 (inherited)"], "905601111": ["\u5409\u5146\u3067\u3059\uFF01\uFF08\u7D99\u627F\uFF09", "Lucky Omen! (inherited)"], "905601211": ["\u4E03\u798F\u5373\u751F\uFF08\u7D99\u627F\uFF09", "Seven Heavenly Fortunes (inherited)"], "905602111": ["\u6012\u6D9B\u306E\u8D85\u5E78\u904B\u30D1\u30EF\u30FC\uFF01\uFF08\u7D99\u627F\uFF09", "Tempestuous Ultra Luck Power! (inherited)"], "905602211": ["\u3070\u3063\u3061\u308A\u958B\u904B\u4F53\u9A13\uFF01\uFF08\u7D99\u627F\uFF09", "First-hand Rising Fortune! (inherited)"], "90561": ["\u6765\u3066\u304F\u3060\u3055\u3044\u6765\u3066\u304F\u3060\u3055\u3044\uFF01\uFF08\u7D99\u627F\uFF09", "Come, Come! (inherited)"], "905701111": ["\u5929\u7FD4\u308B\u8DB3\u53D6\u308A\uFF08\u7D99\u627F\uFF09", "Soaring Step (inherited)"], "905701211": ["\u5F3E\u3080\u5927\u5730\uFF08\u7D99\u627F\uFF09", "Supple Land (inherited)"], "905801111": ["\u6012\u6D9B\u306E\u30B9\u30D4\u30FC\u30C9\uFF08\u7D99\u627F\uFF09", "Tempestuous Speed (inherited)"], "905801211": ["\u8AE6\u3081\u306A\u3044\u3001\u3067\u3059\u3045\uFF5E\uFF01\uFF08\u7D99\u627F\uFF09", "I'm Not Giving Up! (inherited)"], "905802111": ["\u30E9\u30A4\u30D0\u30EB\u304C\u3044\u308B\u304B\u3089\uFF01\uFF08\u7D99\u627F\uFF09", "I've Got a Rival After All! (inherited)"], "905802211": ["\u9B42\u306E\u5C0E\u304D\u624B\uFF08\u7D99\u627F\uFF09", "Soul Guide (inherited)"], "905901111": ["\u30AF\u30FC\u30EB\u306A\u8996\u7DDA\uFF08\u7D99\u627F\uFF09", "Cool Gaze (inherited)"], "905901211": ["\u6DC0\u306E\u5973\u738B\uFF08\u7D99\u627F\uFF09", "Queen of Yodo (inherited)"], "905902111": ["\u3082\u3063\u3068\u5192\u967A\u3057\u3066\u307F\u305F\u3044\uFF01\uFF08\u7D99\u627F\uFF09", "I Want To Be More Adventurous! (inherited)"], "905902211": ["\u8D77\u6B7B\u56DE\u751F\u306E\u4E00\u6B69\uFF08\u7D99\u627F\uFF09", "First Step To Recovery (inherited)"], "906001111": ["\u9B45\u60D1\u306E\u30B7\u30CB\u30AB\u30EB\u30AC\u30FC\u30EB\uFF08\u7D99\u627F\uFF09", "Charming Cynical Girl (inherited)"], "906001211": ["\u76EE\u6307\u305B\uFF01\u4E3B\u4EBA\u516C\uFF01\uFF08\u7D99\u627F\uFF09", "Aim for the Leading Role! (inherited)"], "906002111": ["\u9811\u5F35\u308B\u3057\u304B\u306A\u3044\u3088\u306D\uFF08\u7D99\u627F\uFF09", "Guess I've Gotta Try (inherited)"], "906002211": ["\u30CE\u30F3\u30B9\u30C8\u30C3\u30D7\u30A8\u30FC\u30EB\uFF08\u7D99\u627F\uFF09", "Non-stop Cheer (inherited)"], "90601": ["\u30A2\u30BF\u30B7\u3082\u305F\u307E\u306B\u306F\u3001\u306D\uFF1F\uFF08\u7D99\u627F\uFF09", "You Know, Sometimes Even I Can... (inherited)"], "906101111": ["\u96FB\u6483\u306E\u64AB\u3067\u5207\u308A\uFF08\u7D99\u627F\uFF09", "Electrifying Sweep (inherited)"], "906101211": ["\u738B\u306E\u5927\u5C40\u89B3\uFF08\u7D99\u627F\uFF09", "King's Perspective (inherited)"], "906102111": ["\u7ADC\u306E\u96F2\u3092\u5F97\u308B\u5982\u3057\uFF08\u7D99\u627F\uFF09", "Like Riding a Dragon's Cloud (inherited)"], "906102211": ["\u6625\u98A8\u5439\u304D\u3066\u3001\u685C\u821E\u3046\uFF08\u7D99\u627F\uFF09", "As Spring Blooms, the Sakura Dance (inherited)"], "90611": ["Call me KING\uFF08\u7D99\u627F\uFF09", "Call me KING (inherited)"], "906201111": ["\u30B4\u30FC\u30A4\u30F3\u30B0\u30DE\u30A4\u30A6\u30A7\u30A4\uFF08\u7D99\u627F\uFF09", "Going My Way (inherited)"], "906201211": ["\u3048\u3044\uFF01\u3048\u3044\uFF01\u3080\u3093\uFF01\uFF08\u7D99\u627F\uFF09", "Ei! Ei! Mun! (inherited)"], "906202111": ["\u30DD\u30B8\u30C6\u30A3\u30D6\u30B9\u30DE\u30A4\u30EB\uFF08\u7D99\u627F\uFF09", "Positive Smile (inherited)"], "906202211": ["\u5927\u3069\u3093\u3067\u3093\u304C\u3048\u3057\uFF08\u7D99\u627F\uFF09", "Big Comeback (inherited)"], "90621": ["\u30EC\u30C7\u30A3\u30FC\u3001\u3069\u3093\u3063\uFF01\uFF08\u7D99\u627F\uFF09", "Ready, Bang! (inherited)"], "906401111": ["\u30D1\u306A\u3044\u3063\u3057\u3087\uFF1F\uFF08\u7D99\u627F\uFF09", "Dope Stuff! (inherited)"], "906401211": ["\u795E\u9003\u3052\u306E\u5FC3\u5F97\uFF08\u7D99\u627F\uFF09", "Godly Runner's Wisdom (inherited)"], "906501111": ["\u30DE\u30B8\u7206\u4E0A\u3052\u3063\u3057\u3087\uFF01\uFF08\u7D99\u627F\uFF09", "Hella Vibes Up! (inherited)"], "906501211": ["\u3068\u308A\u307E\u3084\u3063\u305F\u308C\uFF5E\uFF01\uFF08\u7D99\u627F\uFF09", "Just Do It! (inherited)"], "906601111": ["\u51FA\u529B1000\u4E07%\uFF01\uFF01\uFF08\u7D99\u627F\uFF09", "Ten Million Percent Output!! (inherited)"], "906601211": ["\u30BF\u30FC\u30DC\u306B\u3064\u3044\u3066\u3053\u30FC\u3044\uFF01\uFF08\u7D99\u627F\uFF09", "Keep Up with Turbo! (inherited)"], "90661": ["\u30A8\u30F3\u30B8\u30F3\u70B9\u706B\uFF01\uFF08\u7D99\u627F\uFF09", "Engine Ignition! (inherited)"], "906701111": ["\u91D1\u525B\u4E0D\u58CA\uFF08\u7D99\u627F\uFF09", "Adamantine (inherited)"], "906701121": ["\u96A0\u305B\u306C\u8F1D\u304D\uFF08\u7D99\u627F\uFF09", " (inherited)"], "906701211": ["\u53F3\u56DE\u308A\u306E\u8F2A\u821E\u66F2\uFF08\u7D99\u627F\uFF09", "Clockwise Rondo (inherited)"], "906702111": ["\u7121\u6211\u306E\u5883\u5730\uFF08\u7D99\u627F\uFF09", "Realm of No-Self (inherited)"], "906702211": ["\u660E\u3051\u306C\u591C\u306F\u306A\u3044\uFF01\uFF08\u7D99\u627F\uFF09", "Dawn Always Comes! (inherited)"], "906703111": ["\u84BC\u8272\u9769\u547D\uFF08\u7D99\u627F\uFF09", "Azure Revolution (inherited)"], "906703211": ["\u30C0\u30F3\u30B9\u30FB\u30C7\u30FB\u30EC\u307A\uFF08\u7D99\u627F\uFF09", "Danse de L'Ep\xE9e (inherited)"], "906801111": ["\u796D\u308A\u3060\u30EF\u30C3\u30B7\u30E7\u30A4\uFF01\uFF08\u7D99\u627F\uFF09", "Festival Shout! (inherited)"], "906801211": ["\u7206\u98A8\u4E00\u9583\uFF01\uFF08\u7D99\u627F\uFF09", "Blast Flash (inherited)"], "906802111": ["\u672A\u6765\u3078\u98DB\u3073\u7ACB\u3061\u307E\u3057\u3087\u3046\uFF01\uFF08\u7D99\u627F\uFF09", "Leap Towards The Future! (inherited)"], "906802211": ["\u5FC5\u52DD\u306E\u524D\u53E3\u4E0A\uFF01\uFF08\u7D99\u627F\uFF09", "Preamble of Victory! (inherited)"], "906901111": ["\u304A\u82B1\u898B\u5F53\u305F\u308A\u5E74\uFF01\uFF08\u7D99\u627F\uFF09", "Pretty Blossoms, Pretty Year! (inherited)"], "906901211": ["\u3051\u3075\u4E5D\u91CD\u306B\u6E80\u958B\u3067\u3059\uFF08\u7D99\u627F\uFF09", "In Ninefold Bloom (inherited)"], "906902111": ["\u685C\u82B1\u721B\u6F2B\u4E00\u76F4\u7DDA\uFF08\u7D99\u627F\uFF09", "Trail of Blooming Sakura (inherited)"], "906902211": ["\u8CA0\u3051\u305F\u304F\u306A\u3044\uFF01\uFF08\u7D99\u627F\uFF09", "I Don't Want to Lose! (inherited)"], "907001111": ["\u63FA\u308B\u304C\u306C\u30A2\u30B9\u30BF\u30FC\uFF08\u7D99\u627F\uFF09", "Unwavering Aster (inherited)"], "907001211": ["\u4E00\u7B49\u661F\u306E\u30A2\u30E9\u30D9\u30B9\u30AF\uFF08\u7D99\u627F\uFF09", "Brightest Star's Arabesque (inherited)"], "907101111": ["\u6C38\u9060\u306E\u8F1D\u304D\uFF08\u7D99\u627F\uFF09", "Eternal Brilliance (inherited)"], "907101211": ["\u5239\u90A3\u3078\u306E\u899A\u609F\uFF08\u7D99\u627F\uFF09", "Moment's Readiness (inherited)"], "907102111": ["\u7F8E\u3057\u304D\u71D0\u5149\uFF08\u7D99\u627F\uFF09", "Beautiful Phosphorescence (inherited)"], "907102211": ["\u6DE1\u304F\u511A\u3044\u6B8B\u7167\uFF08\u7D99\u627F\uFF09", "Ephemeral Afterglow (inherited)"], "907201111": ["\u6602\u308B\u7114\uFF08\u7D99\u627F\uFF09", "Stirring Flame (inherited)"], "907201211": ["\u516B\u91CD\u306E\u5411\u3053\u3046\u610F\u6C17\uFF08\u7D99\u627F\uFF09", "Layered Determination (inherited)"], "907401111": ["\u4E0D\u5C48\u306E\u304A\u5B22\u69D8\uFF08\u7D99\u627F\uFF09", "Indomitable Dame (inherited)"], "907401211": ["\u52D5\u304B\u3056\u308B\u3053\u3068\u7F8A\u8E44\u5C71\u306E\u82E5\u3057\uFF08\u7D99\u627F\uFF09", "Immovable as Mt. Youtei (inherited)"], "907601111": ["\u685C\u524D\u7DDA\u9032\u884C\u4E2D\uFF01\uFF08\u7D99\u627F\uFF09", "Advancing Sakura Front! (inherited)"], "907601211": ["\u4E00\u82B1\u54B2\u304B\u305B\u307E\u3057\u3087\u3046\uFF01\uFF08\u7D99\u627F\uFF09", "Let's Bloom in the Moment! (inherited)"], "907701111": ["\u30BF\u30FC\u30D5\u306E\u4E3B\u4EBA\u516C\uFF08\u7D99\u627F\uFF09", "Turf Protagonist (inherited)"], "907701211": ["\u6B63\u9053\uFF08\u7D99\u627F\uFF09", "The Right Path (inherited)"], "907801111": ["\u30A6\u30A4\u30F3\u30C9\u30B7\u30A2\u30FC\uFF08\u7D99\u627F\uFF09", "Wind Shear (inherited)"], "907801211": ["\u795E\u6E21\u3057\uFF08\u7D99\u627F\uFF09", "Divine Crossing (inherited)"], "908301111": ["\u8CEA\u5B9F\u525B\u5065\uFF08\u7D99\u627F\uFF09", "Ironclad (inherited)"], "908301211": ["\u9769\u547D\u3092\u3082\u305F\u3089\u3059\u5A01\u5BB9\uFF08\u7D99\u627F\uFF09", "Revolutionary Presence (inherited)"], "908302111": ["Burn Down\uFF08\u7D99\u627F\uFF09", "Burn Down (inherited)"], "908302211": ["Service: Transit\uFF08\u7D99\u627F\uFF09", "Service: Transit (inherited)"], "908401111": ["\u5D50\u3092\u547C\u3076\u7834\u58CA\u795E\uFF08\u7D99\u627F\uFF09", "Storm-Calling God of Destruction (inherited)"], "908401211": ["\u9154\u3044\u75F4\u308C\u3088\u3001\u4E16\u754C\uFF08\u7D99\u627F\uFF09", "Imbibe in Ecstasy, World! (inherited)"], "908501111": ["\u83EF\u9E97\u3067\u3042\u308C\uFF08\u7D99\u627F\uFF09", "Be Majestic (inherited)"], "908501211": ["\u5E38\u306B\u6700\u305F\u308B\u8F1D\u304D\u3092\uFF08\u7D99\u627F\uFF09", "Pursuing Greater Brilliance (inherited)"], "908601111": ["\u7D14\u611B\uFF08\u7D99\u627F\uFF09", "Pure Love (inherited)"], "908601211": ["\u9AD8\u5DBA\u306E\u8276\u7B11\uFF08\u7D99\u627F\uFF09", "Enchanting Smile Beyond Reach (inherited)"], "908701111": ["\u5FC5\u52DD\u306E\u30D4\u30C3\u30C1\u30A2\u30C3\u30D7\uFF08\u7D99\u627F\uFF09", "Victory Pitch-Up (inherited)"], "908701211": ["\u8A18\u61B6\u306B\u523B\u3080\u8DB3\u53D6\u308A\uFF08\u7D99\u627F\uFF09", "Unforgettable Step (inherited)"], "909301111": ["K.Speed\uFF08\u7D99\u627F\uFF09", "K.Speed (inherited)"], "909301211": ["\u547D\u306E\u706B\u82B1\uFF08\u7D99\u627F\uFF09", "Spark of Life (inherited)"], "909801111": ["\u30B3\u30D1\u30C3\u3068\u958B\u904B\uFF01\uFF08\u7D99\u627F\uFF09", "Copano-style Rising Fortunes! (inherited)"], "909801211": ["\u9F8D\u8108\u306E\u6CE2\u6FE4\uFF08\u7D99\u627F\uFF09", "Surging Ley Lines (inherited)"], "909901111": ["\u82EB\u5C0F\u7267\u30B0\u30EB\u30E1\u3067\u820C\u9F13\uFF01\uFF08\u7D99\u627F\uFF09", "Feast of Tomakomai (inherited)"], "909901211": ["\u89B3\u5149\u5927\u4F7F\u306E\u9762\u76EE\u8E8D\u5982\uFF01\uFF08\u7D99\u627F\uFF09", "Tourism Ambassador's Prestige (inherited)"], "9100011": ["\u8D85\u904A\u3073\u7656\uFF08\u7D99\u627F\uFF09", "Dilly-Dally (inherited)"], "910001111": ["\u95D8\u9B42\u6CE8\u5165\uFF08\u7D99\u627F\uFF09", "Refueled Fighting Spirit (inherited)"], "910001211": ["\u5973\u795E\u306E\u7802\u6D74\u3073\uFF08\u7D99\u627F\uFF09", "Goddess' Dust Bath (inherited)"], "910011": ["\u308F\u3084\u304B\u308F\u266A\u30DE\u30EA\u30F3\u30C0\u30A4\u30F4\uFF08\u7D99\u627F\uFF09", "Wayakawa \u266A Marine Dive (inherited)"], "910021": ["\u6C34\u5E73\u7DDA\u306E\u305D\u306E\u5148\u3078\uFF08\u7D99\u627F\uFF09", "Beyond the Ocean's Infinity (inherited)"], "910031": ["\u7D76\u5BFE\u306F\u3001\u30DC\u30AF\u3060\uFF08\u7D99\u627F\uFF09", "It's Going to Be Me (inherited)"], "910041": ["\u30B0\u30C3\u3068\u304D\u3066\u266AChu\uFF08\u7D99\u627F\uFF09", "Heartfelt \u266A Smooch (inherited)"], "910051": ["Ravissant\uFF08\u7D99\u627F\uFF09", "Ravissante (inherited)"], "910061": ["\u8056\u591C\u306E\u30DF\u30E9\u30AF\u30EB\u30E9\u30F3\uFF01\uFF08\u7D99\u627F\uFF09", "Christmas Eve Miracle Run! (inherited)"], "910071": ["Adventure of 564\uFF08\u7D99\u627F\uFF09", "Adventure of 564 (inherited)"], "910081": ["Into High Gear!\uFF08\u7D99\u627F\uFF09", "Into High Gear! (inherited)"], "910091": ["Queen's Lumination\uFF08\u7D99\u627F\uFF09", "Queen's Lumination (inherited)"], "910101": ["Joyful Voyage!\uFF08\u7D99\u627F\uFF09", "Joyful Voyage! (inherited)"], "910111": ["\u30B2\u30A4\u30F3\u30D2\u30FC\u30EB\u30FB\u30B9\u30DA\u30EA\u30A2\u30FC\uFF08\u7D99\u627F\uFF09", "Gain Superior Heal (inherited)"], "910121": ["\u5927\u76DB\u308A\uFF01\u30D5\u30A1\u30FC\u30B9\u30C8\u30D0\u30A4\u30C8\uFF01\uFF08\u7D99\u627F\uFF09", "Extra Large First Bite! (inherited)"], "910131": ["\u6700\u5F37\u306E\u540D\u3092\u61F8\u3051\u3066\uFF08\u7D99\u627F\uFF09", "For the Strongest Name (inherited)"], "910141": ["\u30B3\u30F3\u30C9\u30EB\u731B\u6483\u6CE2\uFF08\u7D99\u627F\uFF09", "Condor Onslaught (inherited)"], "910151": ["\u6075\u798F\u30D0\u30EB\u30AB\u30ED\u30FC\u30EC\uFF08\u7D99\u627F\uFF09", "Blessed Barcarolle (inherited)"], "910161": ["\u7070\u8272\u306E\u81E8\u754C\u70B9\uFF08\u7D99\u627F\uFF09", "Critical Point: Gray (inherited)"], "910171": ["\u7FF3\u308A\u9000\u304F\u3001\u3055\u3056\u3081\u304D\u306E\u77E2\uFF08\u7D99\u627F\uFF09", "Howling Arrow Piercing the Darkness (inherited)"], "910181": ["\u85AB\u98A8\u3001\u6C38\u9060\u306A\u308B\u77AC\u9593\u3092\uFF08\u7D99\u627F\uFF09", "Summer Breeze, the Eternal Moment (inherited)"], "910191": ["\u840C\u5230\u8B93\u6211\u6D3B\u904E\u4F86\u4E86\uFF01\uFF08\u7D99\u627F\uFF09", "Revived by Moe! (inherited)"], "910201": ["Do Ya Breakin!\uFF08\u7D99\u627F\uFF09", "Do Ya Breakin! (inherited)"], "910211": ["\u706B\u795E\u9CF4\uFF08\u7D99\u627F\uFF09", "Thunderous Firestarter (inherited)"], "910221": ["Best day ever\uFF08\u7D99\u627F\uFF09", "Best Day Ever (inherited)"], "910231": ["Presents from X\uFF08\u7D99\u627F\uFF09", "Presents from X (inherited)"], "910241": ["\u30D5\u30E9\u30EF\u30EA\u30FC\u2606\u30DE\u30CB\u30E5\u30FC\u30D0\uFF08\u7D99\u627F\uFF09", "Flowery \u2606 Maneuver (inherited)"], "910261": ["\u30AA\u30DA\u30EC\u30FC\u30B7\u30E7\u30F3\u30FBCacao\uFF08\u7D99\u627F\uFF09", "Operation Cacao (inherited)"], "910271": ["\u3042\u306A\u305F\u306B\u6367\u3052\u308B\u30D5\u30EA\u30FC\u30DD\u30A2\uFF08\u7D99\u627F\uFF09", "Latte Art For You (inherited)"], "910301": ["Drain for rose\uFF08\u7D99\u627F\uFF09", "Drain for Rose (inherited)"], "910311": ["\u30D5\u30EC\u30C3\u30B7\u30E5\u2606\u30D1\u30FC\u30E9\u30FC\uFF08\u7D99\u627F\uFF09", "Fresh \u2606 Parlor (inherited)"], "910321": ["\u590F\u7A7A\u30CF\u30EC\u30FC\u30B7\u30E7\u30F3\uFF08\u7D99\u627F\uFF09", "Summer Halation (inherited)"], "910341": ["\u706F\u7A42\uFF08\u7D99\u627F\uFF09", "Bristling Lights (inherited)"], "910351": ["\u5922\u306E\u5148\u3078\u3001\u5C4A\u3051\uFF01\uFF08\u7D99\u627F\uFF09", "Delivering Beyond the Dreams! (inherited)"], "910361": ["...found you.\uFF08\u7D99\u627F\uFF09", "...found you. (inherited)"], "910371": ["Guten Appetit\u266A\uFF08\u7D99\u627F\uFF09", "Guten Appetit\u266A (inherited)"], "910381": ["One True Color\uFF08\u7D99\u627F\uFF09", "One True Color (inherited)"], "910391": ["\u5FEB\u306A\u308B\u525B\u529B\uFF08\u7D99\u627F\uFF09", " (inherited)"], "910401": ["GET DOWN\uFF08\u7D99\u627F\uFF09", "GET DOWN (inherited)"], "910401111": ["\u3057\u3066\u3084\u3063\u305F\u308A\uFF01\uFF08\u7D99\u627F\uFF09", "Beat You to It! (inherited)"], "910401211": ["\u9003\u3052\u3063\u5207\u308A\u306E1\u4EBA\u65C5\uFF08\u7D99\u627F\uFF09", "Solitary Getaway (inherited)"], "910411": ["CHERRY\u2606\u30B9\u30AF\u30E9\u30F3\u30D6\u30EB\uFF08\u7D99\u627F\uFF09", "Cherry\u2606Scramble (inherited)"], "910451": ["\u3050\u308B\u3050\u308B\u30DE\u30DF\u30FC\u30C8\u30EA\u30C3\u30AF\u2661\uFF08\u7D99\u627F\uFF09", "Round and Round, Mummy Trick\u2661 (inherited)"], "910461": ["\u03B1-star*\uFF08\u7D99\u627F\uFF09", "\u03B1-star* (inherited)"], "910481": ["GALmem.\u3075\u3049\u30FC\u3048\u3070\u266A\uFF08\u7D99\u627F\uFF09", "GALmem. forever\u266A (inherited)"], "910501": ["Hephaistos\uFF08\u7D99\u627F\uFF09", "Hephaistos (inherited)"], "910501111": ["\u9280\u6CB3\u306E\u305D\u306E\u5148\u3078\u3001\u3042\u306A\u305F\u3068\uFF08\u7D99\u627F\uFF09", "Beyond the Milky Way With You (inherited)"], "910501211": ["\u661F\u306E\u6D77\u3092\u99C6\u3051\u3066\uFF08\u7D99\u627F\uFF09", "Crossing the Sea of Stars (inherited)"], "910511": ["Flowering Dreams\uFF08\u7D99\u627F\uFF09", "Flowering Dreams (inherited)"], "910521": ["113\u8EE2\u3073114\u8D77\u304D\uFF08\u7D99\u627F\uFF09", "Fall Down 113 Times, Get Up 114 (inherited)"], "910531": ["\u5965\u7FA9\u30FB\u5E38\u590F\u30D0\u30FC\u30CB\u30F3\u30B0\uFF01\uFF01\uFF08\u7D99\u627F\uFF09", "Secret Technique: Everlasting Summer!! (inherited)"], "910561": ["\u79BE\u30B9\u30CA\u30CF\u30C1\u767B\u30EB\uFF08\u7D99\u627F\uFF09", "Grains Become Ripe (inherited)"], "910581": ["Spooky-Scary-Happy\uFF08\u7D99\u627F\uFF09", "Spooky-Scary-Happy (inherited)"], "910591": ["\u3068\u304D\u3081\u304D\u304C\u547C\u3076\u307B\u3046\u3078\uFF08\u7D99\u627F\uFF09", "To Where the Heart Beckons (inherited)"], "910601": ["Go\u2606Go\u2606for it!\uFF08\u7D99\u627F\uFF09", "Go\u2606Go\u2606For It! (inherited)"], "910601111": ["\u7126\u3089\u305A\u3001\u6C17\u8CA0\u308F\u305A\uFF08\u7D99\u627F\uFF09", "Keep Calm, Don't Overthink (inherited)"], "910601211": ["\u3061\u3087\u3063\u3068\u3044\u3044\u3053\u3068\u3001\u96C6\u3081\u3066\uFF08\u7D99\u627F\uFF09", "Collecting Little Joys (inherited)"], "910611": ["\u8F5F\uFF01\u30C8\u30EC\u30BB\u30F3\u5FDC\u63F4\u56E3\uFF01\uFF01\uFF08\u7D99\u627F\uFF09", "Roaring Tracen Cheerleading Squad (inherited)"], "910621": ["\u3054\u308D\u308A\u3093\uFF01\uFF1F\u30D1\u30EF\u30FC\u30C9\u30E9\u30A4\u30D6\uFF08\u7D99\u627F\uFF09", "Rolling Power Drive! (inherited)"], "910671": ["\u7384\u96F2\u6563\u3089\u3059\u3001\u9EC4\u91D1\u7532\u77E2\uFF08\u7D99\u627F\uFF09", "Arrow of Gold, Break up the Dark Clouds (inherited)"], "910681": ["\u3042\u3063\u3071\u308C\u5927\u76E4\u632F\u308B\u821E\u3044\uFF01\uFF08\u7D99\u627F\uFF09", "Lavish Feast (inherited)"], "910691": ["\u54B2\u3051\u54B2\u3051\uFF01\u79C1\uFF01\uFF08\u7D99\u627F\uFF09", "Bloom! Blossom! Sakura! (inherited)"], "910711": ["Danser le pr\xE9sent\uFF08\u7D99\u627F\uFF09", "Danser le Pr\xE9sent (inherited)"], "910831": ["Immortal Work\uFF08\u7D99\u627F\uFF09", "Immortal Work (inherited)"], "9200011": ["\u4E2D\u8DDD\u96E2\u30EC\u30FC\u30B9\u3078\u306E\u60F3\u3044\uFF08\u7D99\u627F\uFF09", "Medium-Distance Racing Passion (inherited)"], "9200021": ["\u9577\u8DDD\u96E2\u30EC\u30FC\u30B9\u3078\u306E\u60F3\u3044\uFF08\u7D99\u627F\uFF09", "Long-Distance Racing Passion (inherited)"], "9200031": ["\u30DE\u30A4\u30EB\u30EC\u30FC\u30B9\u3078\u306E\u60F3\u3044\uFF08\u7D99\u627F\uFF09", "Mile Racing Passion (inherited)"], "9200041": ["\u77ED\u8DDD\u96E2\u30EC\u30FC\u30B9\u3078\u306E\u60F3\u3044\uFF08\u7D99\u627F\uFF09", "Short-Distance Racing Passion (inherited)"], "9200051": ["\u30C0\u30FC\u30C8\u30EC\u30FC\u30B9\u3078\u306E\u60F3\u3044\uFF08\u7D99\u627F\uFF09", "Dirt Racing Passion (inherited)"], "920011": ["\u5A01\u98A8\u5802\u3005\u3001\u5922\u9326\uFF01\uFF08\u7D99\u627F\uFF09", "Dignified Dreamlike Brocade (inherited)"], "920031": ["\u6B4C\u821E\u6B53\u697D\u3084\u3001\u3042\u3042\u3092\u304B\u3057\uFF08\u7D99\u627F\uFF09", " (inherited)"], "920071": ["Vive la GOLD\uFF08\u7D99\u627F\uFF09", "Vive la GOLD (inherited)"], "920131": ["\u304D\u3089\u3081\u304F\u306F\u6D77\u3001\u307E\u3070\u3086\u304D\u306F\u541B\uFF08\u7D99\u627F\uFF09", "The Sea Glitters, but You're Dazzling (inherited)"], "920671": ["\u30DD\u30F3\u30C6\u30FB\u30C7\u30FB\u30C7\u30A3\u30A2\u30DE\u30F3\uFF08\u7D99\u627F\uFF09", "Ponte de Diamant (inherited)"], "9300011": ["\u30DC\u30EB\u30C6\u30FC\u30B8\u30D2\u30FC\u30ED\u30FC\uFF08\u7D99\u627F\uFF09", "Voltage Hero (inherited)"], "9300021": ["\u30B5\u30F3\u30E9\u30A4\u30BA\u30D2\u30FC\u30ED\u30FC\uFF08\u7D99\u627F\uFF09", "Sunrise Hero (inherited)"], "9300031": ["\u30EC\u30A4\u30CB\u30FC\u30D2\u30FC\u30ED\u30FC\uFF08\u7D99\u627F\uFF09", "Rainy Hero (inherited)"], "9300041": ["\u30A4\u30F3\u30B5\u30A4\u30C9\u30D2\u30FC\u30ED\u30FC\uFF08\u7D99\u627F\uFF09", "Inside Hero (inherited)"], "9300051": ["\u30A2\u30A6\u30C8\u30B5\u30A4\u30C9\u30D2\u30FC\u30ED\u30FC\uFF08\u7D99\u627F\uFF09", "Outside Hero (inherited)"], "9300061": ["\u30EA\u30F3\u30B1\u30FC\u30B8\u30D2\u30FC\u30ED\u30FC\uFF08\u7D99\u627F\uFF09", "Linkage Hero (inherited)"], "9300071": ["\u30B9\u30D1\u30FC\u30C8\u30D2\u30FC\u30ED\u30FC\uFF08\u7D99\u627F\uFF09", "Spurt Hero (inherited)"] };

  // ../../skilltool/RaceSolverBuilder.ts
  var GroundSpeedModifier = Object.freeze([
    null,
    // ground types started at 1
    [0, 0, 0, 0, -50],
    [0, 0, 0, 0, -50]
  ].map((o4) => Object.freeze(o4)));
  var GroundPowerModifier = Object.freeze([
    null,
    [0, 0, -50, -50, -50],
    [0, -100, -50, -100, -100]
  ].map((o4) => Object.freeze(o4)));
  var StrategyProficiencyModifier = Object.freeze([1.1, 1, 0.85, 0.75, 0.6, 0.4, 0.2, 0.1]);
  var Asitame;
  ((Asitame2) => {
    Asitame2.StrategyDistanceCoefficient = Object.freeze([
      [],
      // distances are 1-indexed (as are strategies, hence the 0 in the first column for every row)
      [0, 1, 0.7, 0.75, 0.7, 1],
      // short (nige, senkou, sasi, oikomi, oonige)
      [0, 1, 0.8, 0.7, 0.75, 1],
      // mile
      [0, 1, 0.9, 0.875, 0.86, 1],
      // medium
      [0, 1, 0.9, 1, 0.9, 1]
      // long
    ]);
    Asitame2.BaseModifier = 875e-5;
    function calcApproximateModifier(power, strategy, distance) {
      return Asitame2.BaseModifier * Math.sqrt(power - 1200) * Asitame2.StrategyDistanceCoefficient[distance][strategy];
    }
    Asitame2.calcApproximateModifier = calcApproximateModifier;
  })(Asitame || (Asitame = {}));
  function buildSkillEffects(skill) {
    return skill.effects.reduce((acc, ef) => {
      if (SkillType.hasOwnProperty(ef.type) && ef.modifier > 0) {
        acc.push({ type: ef.type, baseDuration: skill.baseDuration / 1e4, modifier: ef.modifier / 1e4 });
      }
      return acc;
    }, []);
  }
  function buildSkillData(horse2, course, wholeCourse, conditions2, skillId) {
    if (!(skillId in skill_data_default)) {
      throw new Error("bad skill ID " + skillId);
    }
    const alternatives = skill_data_default[skillId].alternatives;
    for (let i4 = 0; i4 < alternatives.length; ++i4) {
      const skill = alternatives[i4];
      let full = new RegionList();
      wholeCourse.forEach((r3) => full.push(r3));
      if (skill.precondition) {
        const pre = parse(tokenize(skill.precondition), { conditions: conditions2 });
        const preRegions = pre.apply(wholeCourse, course, horse2)[0];
        if (preRegions.length == 0) {
          continue;
        } else {
          const bounds = new Region(preRegions[0].start, wholeCourse[wholeCourse.length - 1].end);
          full = full.rmap((r3) => r3.intersect(bounds));
        }
      }
      const op = parse(tokenize(skill.condition), { conditions: conditions2 });
      const [regions, extraCondition] = op.apply(full, course, horse2);
      if (regions.length == 0) {
        continue;
      }
      const effects2 = buildSkillEffects(skill);
      if (effects2.length > 0) {
        const rarity = skill_data_default[skillId].rarity;
        return {
          skillId,
          // for some reason 1*/2* uniques, 1*/2* upgraded to 3*, and naturally 3* uniques all have different rarity (3, 4, 5 respectively)
          rarity: rarity >= 3 && rarity <= 5 ? 3 : rarity,
          samplePolicy: op.samplePolicy,
          regions,
          extraCondition,
          effects: effects2
        };
      } else {
        return null;
      }
    }
    const effects = buildSkillEffects(alternatives[0]);
    if (effects.length == 0) {
      return null;
    } else {
      const afterEnd = new RegionList();
      afterEnd.push(new Region(9999, 9999));
      return {
        skillId,
        rarity: Math.min(skill_data_default[skillId].rarity, 3),
        samplePolicy: ImmediatePolicy,
        regions: afterEnd,
        extraCondition: (_) => false,
        effects
      };
    }
  }
  var conditionsWithActivateCountsAsRandom = Object.freeze(Object.assign({}, Conditions, {
    activate_count_end_after: random({
      filterGte(regions, _0, course, _1) {
        const bounds = new Region(CourseHelpers.phaseStart(course.distance, 2), CourseHelpers.phaseEnd(course.distance, 3));
        return regions.rmap((r3) => r3.intersect(bounds));
      }
    }),
    activate_count_later_half: random({
      filterGte(regions, _0, course, _1) {
        const bounds = new Region(course.distance / 2, course.distance);
        return regions.rmap((r3) => r3.intersect(bounds));
      }
    }),
    activate_count_middle: random({
      filterGte(regions, _0, course, _1) {
        const bounds = new Region(CourseHelpers.phaseStart(course.distance, 1), CourseHelpers.phaseEnd(course.distance, 1));
        return regions.rmap((r3) => r3.intersect(bounds));
      }
    }),
    activate_count_start: immediate({
      // for 地固め
      filterGte(regions, _0, course, _1) {
        const bounds = new Region(CourseHelpers.phaseStart(course.distance, 0), CourseHelpers.phaseEnd(course.distance, 0));
        return regions.rmap((r3) => r3.intersect(bounds));
      }
    })
  }));

  // app.tsx
  var horse = Object.freeze({
    speed: 2e3,
    stamina: 2e3,
    power: 2e3,
    guts: 2e3,
    wisdom: 2e3,
    strategy: 1 /* Nige */,
    distanceAptitude: 0 /* S */,
    surfaceAptitude: 1 /* A */,
    strategyAptitde: 1 /* A */,
    rawStamina: 2e3
  });
  function baseSpeed(distance) {
    return 20 - (distance - 2e3) / 1e3;
  }
  var conditions = Object.freeze(Object.assign({}, conditionsWithActivateCountsAsRandom, {
    accumulatetime: immediate({
      filterGte(regions, t3, course, _) {
        const estimate = new Region(baseSpeed(course.distance) * t3, course.distance);
        return regions.rmap((r3) => r3.intersect(estimate));
      }
    }),
    running_style: noopImmediate
  }));
  function regionsForSkill(course, skillId) {
    const wholeCourse = new RegionList();
    wholeCourse.push(new Region(0, course.distance));
    const sd = buildSkillData(horse, course, wholeCourse, conditions, skillId);
    return {
      type: sd.samplePolicy == ImmediatePolicy ? 0 /* Immediate */ : 1 /* Regions */,
      regions: sd.regions
    };
  }
  function App(props) {
    const skilldefs = { skillnames: {} };
    const lang = +(props.lang == "en");
    Object.keys(skillnames_default).forEach((id) => skilldefs.skillnames[id] = skillnames_default[id][lang]);
    const c11203 = CourseHelpers.getCourse("11203");
    return /* @__PURE__ */ y(IntlProvider, { definition: skilldefs }, /* @__PURE__ */ y(RaceTrack, { courseid: "11203", width: "800", height: "220", regions: [regionsForSkill(c11203, "201452")] }), /* @__PURE__ */ y("div", { style: "width:1000px;height:50px;overflow:hidden" }), /* @__PURE__ */ y(RaceTrack, { courseid: "10805", width: "800", height: "220" }), /* @__PURE__ */ y("div", { style: "width:1000px;height:50px;overflow:hidden" }), /* @__PURE__ */ y(RaceTrack, { courseid: "10810", width: "800", height: "220" }), /* @__PURE__ */ y(SkillList, { ids: Object.keys(skill_data_default).filter((id) => skill_data_default[id].rarity < 3 || skill_data_default[id].rarity > 5) }));
  }
  B(/* @__PURE__ */ y(App, { lang: "ja" }), document.getElementById("app"));
})();
